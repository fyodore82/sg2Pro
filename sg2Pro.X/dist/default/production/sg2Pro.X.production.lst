

Microchip Technology PIC PRO Macro Assembler V1.33 build 59893 
                                                                                               Sat Dec 26 20:30:16 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 59893
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text14,local,class=CODE,merge=1,delta=2
    16                           	psect	text15,local,class=CODE,merge=1,delta=2
    17                           	psect	text16,local,class=CODE,merge=1,delta=2
    18                           	psect	text21,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	pa_nodes,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000E                     	;# 
    36  000F                     	;# 
    37  0010                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0014                     	;# 
    42  0015                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001C                     	;# 
    50  001D                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  0081                     	;# 
    54  0085                     	;# 
    55  0086                     	;# 
    56  0087                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  008F                     	;# 
    61  0090                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0093                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0095                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  010C                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0115                     	;# 
    84  0116                     	;# 
    85  0118                     	;# 
    86  0119                     	;# 
    87  011A                     	;# 
    88  011B                     	;# 
    89  011E                     	;# 
    90  011F                     	;# 
    91  018C                     	;# 
    92  018D                     	;# 
    93  019D                     	;# 
    94  019E                     	;# 
    95                           
    96                           	psect	eeprom_data
    97  0000  00FF 00FF 00FF 00FF 00FF 00FF 00FF 00FF 	db	255,255,255,255,255,255,255,255	;# 
    98  0008  00FF 00FF 00FF 00FF 00FF 00FF 00FF 00FF 	db	255,255,255,255,255,255,255,255	;# 
    99  0010  00D6 00D6 00D6 00D6 00D6 0094 0094 0094 	db	214,214,214,214,214,148,148,148	;# 
   100  0018  0094 0094 00FF 00FF 00FF 00FF 00FF 00FF 	db	148,148,255,255,255,255,255,255	;# 
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0014                     	;# 
   121  0015                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0118                     	;# 
   165  0119                     	;# 
   166  011A                     	;# 
   167  011B                     	;# 
   168  011E                     	;# 
   169  011F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0115                     	;# 
   236  0116                     	;# 
   237  0118                     	;# 
   238  0119                     	;# 
   239  011A                     	;# 
   240  011B                     	;# 
   241  011E                     	;# 
   242  011F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  019D                     	;# 
   246  019E                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0115                     	;# 
   309  0116                     	;# 
   310  0118                     	;# 
   311  0119                     	;# 
   312  011A                     	;# 
   313  011B                     	;# 
   314  011E                     	;# 
   315  011F                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  019D                     	;# 
   319  019E                     	;# 
   320                           
   321                           	psect	nvBANK0
   322  0061                     __pnvBANK0:	
   323  0061                     _ASRONTmr:	
   324  0061                     	ds	1
   325  0062                     _CheckedNow:	
   326  0062                     	ds	1
   327  0063                     _EngStartTmr:	
   328  0063                     	ds	1
   329  0064                     _NewASRTmr:	
   330  0064                     	ds	1
   331  0065                     _NewBinTmr:	
   332  0065                     	ds	1
   333  0066                     _UbattTmr:	
   334  0066                     	ds	1
   335  001F                     _ADCON0	set	31
   336  001F                     _ADCON0bits	set	31
   337  001E                     _ADRESH	set	30
   338  000B                     _INTCON	set	11
   339  000B                     _INTCONbits	set	11
   340  000C                     _PIR1	set	12
   341  000C                     _PIR1bits	set	12
   342  000D                     _PIR2	set	13
   343  0005                     _PORTA	set	5
   344  0005                     _PORTAbits	set	5
   345  0006                     _PORTB	set	6
   346  0006                     _PORTBbits	set	6
   347  0007                     _PORTC	set	7
   348  0007                     _PORTCbits	set	7
   349  0013                     _SSPBUF	set	19
   350  0014                     _SSPCON	set	20
   351  0014                     _SSPCONbits	set	20
   352  0003                     _STATUSbits	set	3
   353  0010                     _T1CON	set	16
   354  0010                     _T1CONbits	set	16
   355  0001                     _TMR0	set	1
   356  000F                     _TMR1H	set	15
   357  000E                     _TMR1L	set	14
   358  009F                     _ADCON1	set	159
   359  009E                     _ADRESL	set	158
   360  0081                     _OPTION_REGbits	set	129
   361  008E                     _PCONbits	set	142
   362  008C                     _PIE1	set	140
   363  008C                     _PIE1bits	set	140
   364  0093                     _SSPADD	set	147
   365  0093                     _SSPMSK	set	147
   366  0094                     _SSPSTAT	set	148
   367  0094                     _SSPSTATbits	set	148
   368  0085                     _TRISA	set	133
   369  0086                     _TRISB	set	134
   370  0086                     _TRISBbits	set	134
   371  0087                     _TRISC	set	135
   372  0097                     _WDTCON	set	151
   373  0095                     _WPUA	set	149
   374  011E                     _ANSEL	set	286
   375  011F                     _ANSELH	set	287
   376  010D                     _EEADR	set	269
   377  010C                     _EEDAT	set	268
   378  0116                     _IOCBbits	set	278
   379  0115                     _WPUB	set	277
   380  018C                     _EECON1bits	set	396
   381  018D                     _EECON2	set	397
   382                           
   383                           ; #config settings
   384  0000                     
   385                           	psect	cinit
   386  000F                     start_initialization:	
   387  000F                     __initialization:	
   388  000F  3049               	movlw	low __pbssBANK0
   389                           
   390                           ; Clear objects allocated to BANK0
   391  0010  1383               	bcf	3,7	;select IRP bank0
   392  0011  0084               	movwf	4
   393  0012  3061               	movlw	low (__pbssBANK0+24)
   394  0013  118A  27E9         	fcall	clear_ram0
   395  0015                     end_of_initialization:	
   396                           ;End of C runtime variable initialization code
   397                           
   398  0015                     __end_of__initialization:	
   399  0015  0183               	clrf	3
   400  0016  158A  2C3D         	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	bssBANK0
   403  0049                     __pbssBANK0:	
   404  0049                     _BinSt:	
   405  0049                     	ds	1
   406  004A                     _CheckTimes:	
   407  004A                     	ds	1
   408  004B                     _EngSt:	
   409  004B                     	ds	1
   410  004C                     _IntSvcSync:	
   411  004C                     	ds	1
   412  004D                     _NewState:	
   413  004D                     	ds	1
   414  004E                     _PinState:	
   415  004E                     	ds	1
   416  004F                     _StateTest:	
   417  004F                     	ds	1
   418  0050                     _TEBPrev:	
   419  0050                     	ds	1
   420  0051                     _ToCheck:	
   421  0051                     	ds	1
   422  0052                     _addrh:	
   423  0052                     	ds	1
   424  0053                     _addrl:	
   425  0053                     	ds	1
   426  0054                     _day:	
   427  0054                     	ds	1
   428  0055                     _i2cCmd:	
   429  0055                     	ds	1
   430  0056                     _i2cEEPROMAddr:	
   431  0056                     	ds	1
   432  0057                     _i2cHoldTmr:	
   433  0057                     	ds	1
   434  0058                     _i2cSSPIFTmr:	
   435  0058                     	ds	1
   436  0059                     _min:	
   437  0059                     	ds	1
   438  005A                     _sec:	
   439  005A                     	ds	1
   440  005B                     _TEB:	
   441  005B                     	ds	1
   442  005C                     _TEngTemp:	
   443  005C                     	ds	1
   444  005D                     _Teng:	
   445  005D                     	ds	1
   446  005E                     _Ubatt:	
   447  005E                     	ds	1
   448  005F                     _UbattMin:	
   449  005F                     	ds	1
   450  0060                     _hour:	
   451  0060                     	ds	1
   452                           
   453                           	psect	clrtext
   454  07E9                     clear_ram0:	
   455                           ;	Called with FSR containing the base address, and
   456                           ;	W with the last address+1
   457                           
   458  07E9  0064               	clrwdt	;clear the watchdog before getting into this loop
   459  07EA                     clrloop0:	
   460  07EA  0180               	clrf	0	;clear RAM location pointed to by FSR
   461  07EB  0A84               	incf	4,f	;increment pointer
   462  07EC  0604               	xorwf	4,w	;XOR with final address
   463  07ED  1903               	btfsc	3,2	;have we reached the end yet?
   464  07EE  3400               	retlw	0	;all done for this memory range, return
   465  07EF  0604               	xorwf	4,w	;XOR again to restore value
   466  07F0  2FEA               	goto	clrloop0	;do the next byte
   467                           
   468                           	psect	cstackCOMMON
   469  0070                     __pcstackCOMMON:	
   470  0070                     ?_I2CSlaveSR:	
   471  0070                     ?_i2c_init:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0070                     ?_CheckRes:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0070                     ?_ADC_Start:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0070                     ?_InterruptService:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0070                     ?_SearchStop:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0070                     ?_I2CReset:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0070                     ?_main:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0070                     ?i1_OutRet:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0070                     ?_StartCheck:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0070                     ?_EngBinState:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_TmrRoutines:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_DetectReset:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_decr_check_times:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_i2c_start:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_i2c_stop:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     i1OutRet@ret:	
   517                           ; 1 bytes @ 0x0
   518                           
   519                           
   520                           ; 1 bytes @ 0x0
   521  0070                     	ds	1
   522  0071                     i1OutRet@Read:	
   523                           
   524                           ; 1 bytes @ 0x1
   525  0071                     	ds	1
   526  0072                     ??i1_OutRet:	
   527                           
   528                           ; 0 bytes @ 0x2
   529  0072                     	ds	2
   530  0074                     i1OutRet@addr:	
   531                           
   532                           ; 1 bytes @ 0x4
   533  0074                     	ds	1
   534  0075                     i1OutRet@gie:	
   535                           
   536                           ; 1 bytes @ 0x5
   537  0075                     	ds	1
   538  0076                     ?i1_TEngUbattRW:	
   539  0076                     i1TEngUbattRW@Teng:	
   540                           ; 1 bytes @ 0x6
   541                           
   542                           
   543                           ; 1 bytes @ 0x6
   544  0076                     	ds	1
   545  0077                     i1TEngUbattRW@Read:	
   546                           
   547                           ; 1 bytes @ 0x7
   548  0077                     	ds	1
   549  0078                     ??i1_TEngUbattRW:	
   550                           
   551                           ; 0 bytes @ 0x8
   552  0078                     	ds	2
   553  007A                     ??_I2CSlaveSR:	
   554  007A                     I2CSlaveSR@x:	
   555                           ; 0 bytes @ 0xA
   556                           
   557                           
   558                           ; 1 bytes @ 0xA
   559  007A                     	ds	1
   560  007B                     ??_InterruptService:	
   561                           
   562                           ; 0 bytes @ 0xB
   563  007B                     	ds	3
   564                           
   565                           	psect	cstackBANK0
   566  0020                     __pcstackBANK0:	
   567  0020                     i1TEngUbattRW@EqTimes:	
   568                           
   569                           ; 1 bytes @ 0x0
   570  0020                     	ds	1
   571  0021                     i1TEngUbattRW@lTeng:	
   572                           
   573                           ; 1 bytes @ 0x1
   574  0021                     	ds	2
   575  0023                     i1TEngUbattRW@StartAddr:	
   576                           
   577                           ; 1 bytes @ 0x3
   578  0023                     	ds	1
   579  0024                     i1TEngUbattRW@addr:	
   580                           
   581                           ; 1 bytes @ 0x4
   582  0024                     	ds	1
   583  0025                     ??_i2c_init:	
   584  0025                     ?_OutRet:	
   585                           ; 0 bytes @ 0x5
   586                           
   587  0025                     ??_ADC_Start:	
   588                           ; 0 bytes @ 0x5
   589                           
   590  0025                     ??_EngBinState:	
   591                           ; 0 bytes @ 0x5
   592                           
   593  0025                     ??_DetectReset:	
   594                           ; 0 bytes @ 0x5
   595                           
   596  0025                     ??_decr_check_times:	
   597                           ; 0 bytes @ 0x5
   598                           
   599  0025                     ??_i2c_start:	
   600                           ; 0 bytes @ 0x5
   601                           
   602  0025                     ??_i2c_stop:	
   603                           ; 0 bytes @ 0x5
   604                           
   605  0025                     ?_i2c_tx:	
   606                           ; 0 bytes @ 0x5
   607                           
   608  0025                     ?_i2c_rx:	
   609                           ; 1 bytes @ 0x5
   610                           
   611  0025                     ?___awdiv:	
   612                           ; 1 bytes @ 0x5
   613                           
   614  0025                     OutRet@ret:	
   615                           ; 2 bytes @ 0x5
   616                           
   617  0025                     i2c_init@slaveaddr:	
   618                           ; 1 bytes @ 0x5
   619                           
   620  0025                     i2c_start@force:	
   621                           ; 1 bytes @ 0x5
   622                           
   623  0025                     i2c_stop@Force:	
   624                           ; 1 bytes @ 0x5
   625                           
   626  0025                     i2c_tx@CareAboutAck:	
   627                           ; 1 bytes @ 0x5
   628                           
   629  0025                     i2c_rx@d:	
   630                           ; 1 bytes @ 0x5
   631                           
   632  0025                     ___awdiv@divisor:	
   633                           ; 1 bytes @ 0x5
   634                           
   635                           
   636                           ; 2 bytes @ 0x5
   637  0025                     	ds	1
   638  0026                     ??_I2CReset:	
   639  0026                     ??_i2c_tx:	
   640                           ; 0 bytes @ 0x6
   641                           
   642  0026                     OutRet@Read:	
   643                           ; 0 bytes @ 0x6
   644                           
   645  0026                     i2c_stop@sttries:	
   646                           ; 1 bytes @ 0x6
   647                           
   648  0026                     i2c_tx@ClckStretchus:	
   649                           ; 1 bytes @ 0x6
   650                           
   651  0026                     i2c_rx@ClkStrRetryTimes:	
   652                           ; 1 bytes @ 0x6
   653                           
   654                           
   655                           ; 1 bytes @ 0x6
   656  0026                     	ds	1
   657  0027                     ??_OutRet:	
   658  0027                     ??_i2c_rx:	
   659                           ; 0 bytes @ 0x7
   660                           
   661  0027                     i2c_tx@dt:	
   662                           ; 0 bytes @ 0x7
   663                           
   664  0027                     i2c_rx@ack:	
   665                           ; 1 bytes @ 0x7
   666                           
   667  0027                     ___awdiv@dividend:	
   668                           ; 1 bytes @ 0x7
   669                           
   670                           
   671                           ; 2 bytes @ 0x7
   672  0027                     	ds	1
   673  0028                     ??_TmrRoutines:	
   674  0028                     EngBinState@WrLogEvent:	
   675                           ; 0 bytes @ 0x8
   676                           
   677  0028                     i2c_tx@i:	
   678                           ; 1 bytes @ 0x8
   679                           
   680  0028                     i2c_rx@i:	
   681                           ; 1 bytes @ 0x8
   682                           
   683                           
   684                           ; 1 bytes @ 0x8
   685  0028                     	ds	1
   686  0029                     ??___awdiv:	
   687  0029                     ?_TXNbytes:	
   688                           ; 0 bytes @ 0x9
   689                           
   690  0029                     ADC_Start@ANCh:	
   691                           ; 1 bytes @ 0x9
   692                           
   693  0029                     OutRet@addr:	
   694                           ; 1 bytes @ 0x9
   695                           
   696  0029                     i2c_rx@j:	
   697                           ; 1 bytes @ 0x9
   698                           
   699  0029                     TXNbytes@addrl:	
   700                           ; 1 bytes @ 0x9
   701                           
   702  0029                     ___awdiv@counter:	
   703                           ; 1 bytes @ 0x9
   704                           
   705                           
   706                           ; 1 bytes @ 0x9
   707  0029                     	ds	1
   708  002A                     ??_StartCheck:	
   709  002A                     ?_RXbyte:	
   710                           ; 0 bytes @ 0xA
   711                           
   712  002A                     StartCheck@OnceMore:	
   713                           ; 1 bytes @ 0xA
   714                           
   715  002A                     OutRet@gie:	
   716                           ; 1 bytes @ 0xA
   717                           
   718  002A                     RXbyte@addrL:	
   719                           ; 1 bytes @ 0xA
   720                           
   721  002A                     TXNbytes@N:	
   722                           ; 1 bytes @ 0xA
   723                           
   724  002A                     ___awdiv@sign:	
   725                           ; 1 bytes @ 0xA
   726                           
   727                           
   728                           ; 1 bytes @ 0xA
   729  002A                     	ds	1
   730  002B                     ?_TEngUbattRW:	
   731  002B                     TmrRoutines@WrLogEvent:	
   732                           ; 1 bytes @ 0xB
   733                           
   734  002B                     TEngUbattRW@Teng:	
   735                           ; 1 bytes @ 0xB
   736                           
   737  002B                     RXbyte@d:	
   738                           ; 1 bytes @ 0xB
   739                           
   740  002B                     TXNbytes@d:	
   741                           ; 1 bytes @ 0xB
   742                           
   743  002B                     ___awdiv@quotient:	
   744                           ; 1 bytes @ 0xB
   745                           
   746                           
   747                           ; 2 bytes @ 0xB
   748  002B                     	ds	1
   749  002C                     ??_TXNbytes:	
   750  002C                     ??_RXbyte:	
   751                           ; 0 bytes @ 0xC
   752                           
   753  002C                     TmrRoutines@pBINtmr:	
   754                           ; 0 bytes @ 0xC
   755                           
   756  002C                     TEngUbattRW@Read:	
   757                           ; 1 bytes @ 0xC
   758                           
   759  002C                     RXbyte@addrH:	
   760                           ; 1 bytes @ 0xC
   761                           
   762                           
   763                           ; 1 bytes @ 0xC
   764  002C                     	ds	1
   765  002D                     ??_TEngUbattRW:	
   766  002D                     ??_CheckRes:	
   767                           ; 0 bytes @ 0xD
   768                           
   769                           
   770                           ; 0 bytes @ 0xD
   771  002D                     	ds	1
   772  002E                     RXbyte@i:	
   773                           
   774                           ; 1 bytes @ 0xE
   775  002E                     	ds	1
   776  002F                     ??_SearchStop:	
   777  002F                     CheckRes@Ub:	
   778                           ; 0 bytes @ 0xF
   779                           
   780  002F                     TEngUbattRW@EqTimes:	
   781                           ; 1 bytes @ 0xF
   782                           
   783                           
   784                           ; 1 bytes @ 0xF
   785  002F                     	ds	1
   786  0030                     SearchStop@addrhs:	
   787  0030                     CheckRes@Te:	
   788                           ; 1 bytes @ 0x10
   789                           
   790  0030                     TEngUbattRW@lTeng:	
   791                           ; 1 bytes @ 0x10
   792                           
   793  0030                     TXNbytes@addrh:	
   794                           ; 1 bytes @ 0x10
   795                           
   796                           
   797                           ; 1 bytes @ 0x10
   798  0030                     	ds	1
   799  0031                     SearchStop@addrls:	
   800  0031                     TXNbytes@j:	
   801                           ; 1 bytes @ 0x11
   802                           
   803                           
   804                           ; 1 bytes @ 0x11
   805  0031                     	ds	1
   806  0032                     SearchStop@d:	
   807  0032                     TEngUbattRW@StartAddr:	
   808                           ; 1 bytes @ 0x12
   809                           
   810  0032                     TXNbytes@ret:	
   811                           ; 1 bytes @ 0x12
   812                           
   813                           
   814                           ; 1 bytes @ 0x12
   815  0032                     	ds	1
   816  0033                     TEngUbattRW@addr:	
   817  0033                     TXNbytes@i:	
   818                           ; 1 bytes @ 0x13
   819                           
   820                           
   821                           ; 1 bytes @ 0x13
   822  0033                     	ds	1
   823  0034                     ?_WriteLog:	
   824  0034                     WriteLog@ResetReason:	
   825                           ; 0 bytes @ 0x14
   826                           
   827                           
   828                           ; 1 bytes @ 0x14
   829  0034                     	ds	1
   830  0035                     ??_WriteLog:	
   831                           
   832                           ; 0 bytes @ 0x15
   833  0035                     	ds	5
   834  003A                     WriteLog@i:	
   835                           
   836                           ; 1 bytes @ 0x1A
   837  003A                     	ds	1
   838  003B                     WriteLog@Event:	
   839                           
   840                           ; 1 bytes @ 0x1B
   841  003B                     	ds	1
   842  003C                     WriteLog@d:	
   843                           
   844                           ; 6 bytes @ 0x1C
   845  003C                     	ds	6
   846  0042                     ??_main:	
   847                           
   848                           ; 0 bytes @ 0x22
   849  0042                     	ds	3
   850  0045                     main@ResetReason:	
   851                           
   852                           ; 1 bytes @ 0x25
   853  0045                     	ds	1
   854  0046                     main@resbin:	
   855                           
   856                           ; 1 bytes @ 0x26
   857  0046                     	ds	1
   858  0047                     main@restmr:	
   859                           
   860                           ; 1 bytes @ 0x27
   861  0047                     	ds	1
   862  0048                     main@BINtmr:	
   863                           
   864                           ; 1 bytes @ 0x28
   865  0048                     	ds	1
   866                           
   867                           	psect	maintext
   868  0C3D                     __pmaintext:	
   869 ;;
   870 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   871 ;;
   872 ;; *************** function _main *****************
   873 ;; Defined at:
   874 ;;		line 1065 in file "newmain.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  restmr          1   39[BANK0 ] unsigned char 
   879 ;;  resbin          1   38[BANK0 ] unsigned char 
   880 ;;  BINtmr          1   40[BANK0 ] unsigned char 
   881 ;;  ResetReason     1   37[BANK0 ] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;		None               void
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 17F/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   891 ;;      Params:         0       0       0       0
   892 ;;      Locals:         0       4       0       0
   893 ;;      Temps:          0       3       0       0
   894 ;;      Totals:         0       7       0       0
   895 ;;Total ram usage:        7 bytes
   896 ;; Hardware stack levels required when called:    7
   897 ;; This function calls:
   898 ;;		_CheckRes
   899 ;;		_DetectReset
   900 ;;		_EngBinState
   901 ;;		_SearchStop
   902 ;;		_StartCheck
   903 ;;		_TEngUbattRW
   904 ;;		_TmrRoutines
   905 ;;		_WriteLog
   906 ;;		_i2c_init
   907 ;; This function is called by:
   908 ;;		Startup code after reset
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function _main
   914  0C3D                     _main:	
   915  0C3D  30FF               	movlw	255
   916                           
   917                           ;newmain.c: 1068: sec = 0;
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   921  0C3E  01DA               	clrf	_sec
   922                           
   923                           ;newmain.c: 1069: min = 0;
   924  0C3F  01D9               	clrf	_min
   925                           
   926                           ;newmain.c: 1070: hour = 0;
   927  0C40  01E0               	clrf	_hour
   928                           
   929                           ;newmain.c: 1071: day = 0;
   930  0C41  01D4               	clrf	_day
   931                           
   932                           ;newmain.c: 1072: addrh = 0;
   933  0C42  01D2               	clrf	_addrh
   934                           
   935                           ;newmain.c: 1073: addrl = 0x0;
   936  0C43  01D3               	clrf	_addrl
   937                           
   938                           ;newmain.c: 1074: EngSt = 0;
   939  0C44  01CB               	clrf	_EngSt
   940                           
   941                           ;newmain.c: 1075: BinSt = 0;
   942  0C45  01C9               	clrf	_BinSt
   943                           
   944                           ;newmain.c: 1077: ASRONTmr = 0xFF;
   945  0C46  00E1               	movwf	_ASRONTmr
   946                           
   947                           ;newmain.c: 1078: NewBinTmr = 0xFF;
   948  0C47  00E5               	movwf	_NewBinTmr
   949                           
   950                           ;newmain.c: 1079: NewASRTmr = 0xFF;
   951  0C48  00E4               	movwf	_NewASRTmr
   952                           
   953                           ;newmain.c: 1080: EngStartTmr = 0xFF;
   954  0C49  00E3               	movwf	_EngStartTmr
   955                           
   956                           ;newmain.c: 1082: UbattTmr = 0xFF;
   957  0C4A  00E6               	movwf	_UbattTmr
   958  0C4B  3009               	movlw	9
   959                           
   960                           ;newmain.c: 1083: IntSvcSync = 0;
   961  0C4C  01CC               	clrf	_IntSvcSync
   962                           
   963                           ;newmain.c: 1084: StateTest = 0;
   964  0C4D  01CF               	clrf	_StateTest
   965                           
   966                           ;newmain.c: 1086: CheckedNow = 9;
   967  0C4E  00E2               	movwf	_CheckedNow
   968                           
   969                           ;newmain.c: 1087: PinState = 0;
   970  0C4F  01CE               	clrf	_PinState
   971                           
   972                           ;newmain.c: 1088: NewState = 0;
   973  0C50  01CD               	clrf	_NewState
   974                           
   975                           ;newmain.c: 1090: T1CON = 0;
   976  0C51  0190               	clrf	16	;volatile
   977                           
   978                           ;newmain.c: 1091: INTCON = 0;
   979  0C52  018B               	clrf	11	;volatile
   980                           
   981                           ;newmain.c: 1098: PORTA = 0x0;
   982  0C53  0185               	clrf	5	;volatile
   983                           
   984                           ;newmain.c: 1099: PORTB = 0x0;
   985  0C54  0186               	clrf	6	;volatile
   986                           
   987                           ;newmain.c: 1100: PORTC = 0x0;
   988  0C55  0187               	clrf	7	;volatile
   989                           
   990                           ;newmain.c: 1104: TRISA = 0b11111111;
   991  0C56  30FF               	movlw	255
   992  0C57  1683               	bsf	3,5	;RP0=1, select bank1
   993  0C58  0085               	movwf	5	;volatile
   994                           
   995                           ;newmain.c: 1105: WPUA = 0b00000000;
   996  0C59  0195               	clrf	21	;volatile
   997                           
   998                           ;newmain.c: 1112: TRISB = 0b11111111;
   999  0C5A  0086               	movwf	6	;volatile
  1000                           
  1001                           ;newmain.c: 1113: WPUB = 0b00000000;
  1002  0C5B  1283               	bcf	3,5	;RP0=0, select bank2
  1003  0C5C  1703               	bsf	3,6	;RP1=1, select bank2
  1004  0C5D  0195               	clrf	21	;volatile
  1005                           
  1006                           ;newmain.c: 1114: IOCBbits.IOCB7 = 1;
  1007  0C5E  1796               	bsf	22,7	;volatile
  1008                           
  1009                           ;newmain.c: 1115: IOCBbits.IOCB5 = 1;
  1010  0C5F  1696               	bsf	22,5	;volatile
  1011                           
  1012                           ;newmain.c: 1125: TRISC = 0b11110001;
  1013  0C60  30F1               	movlw	241
  1014  0C61  1683               	bsf	3,5	;RP0=1, select bank1
  1015  0C62  1303               	bcf	3,6	;RP1=0, select bank1
  1016  0C63  0087               	movwf	7	;volatile
  1017                           
  1018                           ;newmain.c: 1132: ANSEL = 0b00010000;
  1019  0C64  3010               	movlw	16
  1020  0C65  1283               	bcf	3,5	;RP0=0, select bank2
  1021  0C66  1703               	bsf	3,6	;RP1=1, select bank2
  1022  0C67  009E               	movwf	30	;volatile
  1023                           
  1024                           ;newmain.c: 1133: ANSELH = 0b00000010;
  1025  0C68  3002               	movlw	2
  1026  0C69  009F               	movwf	31	;volatile
  1027                           
  1028                           ;newmain.c: 1136: ADCON1 = 0b00110000;
  1029  0C6A  3030               	movlw	48
  1030  0C6B  1683               	bsf	3,5	;RP0=1, select bank1
  1031  0C6C  1303               	bcf	3,6	;RP1=0, select bank1
  1032  0C6D  009F               	movwf	31	;volatile
  1033                           
  1034                           ;newmain.c: 1137: ADCON0 = 0b10010001;
  1035  0C6E  3091               	movlw	145
  1036  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0C70  009F               	movwf	31	;volatile
  1038                           
  1039                           ;newmain.c: 1139: PORTA = 0x0;
  1040  0C71  0185               	clrf	5	;volatile
  1041                           
  1042                           ;newmain.c: 1140: PORTB = 0x0;
  1043  0C72  0186               	clrf	6	;volatile
  1044                           
  1045                           ;newmain.c: 1141: PORTC = 0x0;
  1046  0C73  0187               	clrf	7	;volatile
  1047  0C74  0064               	clrwdt	;# 
  1048                           
  1049                           ;newmain.c: 1145: TMR0 = 0;
  1050  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0C77  0181               	clrf	1	;volatile
  1053                           
  1054                           ;newmain.c: 1146: OPTION_REGbits.PSA = 1;
  1055  0C78  1683               	bsf	3,5	;RP0=1, select bank1
  1056  0C79  1581               	bsf	1,3	;volatile
  1057  0C7A  0064               	clrwdt	;# 
  1058                           
  1059                           ;newmain.c: 1148: OPTION_REGbits.PS = 0b000;
  1060  0C7B  30F8               	movlw	-8
  1061  0C7C  1683               	bsf	3,5	;RP0=1, select bank1
  1062  0C7D  1303               	bcf	3,6	;RP1=0, select bank1
  1063  0C7E  0581               	andwf	1,f	;volatile
  1064                           
  1065                           ;newmain.c: 1149: OPTION_REGbits.PS = 0b101;
  1066  0C7F  0801               	movf	1,w	;volatile
  1067  0C80  39F8               	andlw	-8
  1068  0C81  3805               	iorlw	5
  1069  0C82  0081               	movwf	1	;volatile
  1070                           
  1071                           ;newmain.c: 1150: WDTCON = 0b00010111;
  1072  0C83  3017               	movlw	23
  1073  0C84  0097               	movwf	23	;volatile
  1074                           
  1075                           ;newmain.c: 1153: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1076  0C85  3006               	movlw	6
  1077  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0C87  00C4               	movwf	??_main+2
  1079  0C88  3013               	movlw	19
  1080  0C89  00C3               	movwf	??_main+1
  1081  0C8A  30B1               	movlw	177
  1082  0C8B  00C2               	movwf	??_main
  1083  0C8C                     u5257:	
  1084  0C8C  0BC2               	decfsz	??_main,f
  1085  0C8D  2C8C               	goto	u5257
  1086  0C8E  0BC3               	decfsz	??_main+1,f
  1087  0C8F  2C8C               	goto	u5257
  1088  0C90  0BC4               	decfsz	??_main+2,f
  1089  0C91  2C8C               	goto	u5257
  1090  0C92  2C93               	nop2
  1091                           
  1092                           ;newmain.c: 1154: if (TEngUbattRW (0x10 + 5, &UbattMin, 1))
  1093  0C93  305F               	movlw	_UbattMin& (0+255)
  1094  0C94  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0C95  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0C96  00AB               	movwf	TEngUbattRW@Teng
  1097  0C97  3015               	movlw	21
  1098  0C98  01AC               	clrf	TEngUbattRW@Read
  1099  0C99  0AAC               	incf	TEngUbattRW@Read,f
  1100  0C9A  158A  23B3  158A   	fcall	_TEngUbattRW
  1101  0C9D  3A00               	xorlw	0
  1102  0C9E  1903               	skipnz
  1103  0C9F  2CA4               	goto	l4167
  1104                           
  1105                           ;newmain.c: 1155: {
  1106                           ;newmain.c: 1156: UbattMin = 0x93;
  1107  0CA0  3093               	movlw	147
  1108  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0CA3  00DF               	movwf	_UbattMin
  1111  0CA4                     l4167:	
  1112                           
  1113                           ;newmain.c: 1159: }
  1114                           ;newmain.c: 1160: if (TEngUbattRW (0x10, &TEngTemp, 1))
  1115  0CA4  305C               	movlw	_TEngTemp& (0+255)
  1116  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0CA7  00AB               	movwf	TEngUbattRW@Teng
  1119  0CA8  3010               	movlw	16
  1120  0CA9  01AC               	clrf	TEngUbattRW@Read
  1121  0CAA  0AAC               	incf	TEngUbattRW@Read,f
  1122  0CAB  158A  23B3  158A   	fcall	_TEngUbattRW
  1123  0CAE  3A00               	xorlw	0
  1124  0CAF  1903               	skipnz
  1125  0CB0  2CB5               	goto	l4171
  1126                           
  1127                           ;newmain.c: 1161: {
  1128                           ;newmain.c: 1162: TEngTemp = 0xd6;
  1129  0CB1  30D6               	movlw	214
  1130  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0CB4  00DC               	movwf	_TEngTemp
  1133  0CB5                     l4171:	
  1134                           
  1135                           ;newmain.c: 1165: }
  1136                           ;newmain.c: 1171: i2c_init (0b01000010);
  1137  0CB5  3042               	movlw	66
  1138  0CB6  158A  2673  158A   	fcall	_i2c_init
  1139                           
  1140                           ;newmain.c: 1174: TEB = 0x84;
  1141  0CB9  3084               	movlw	132
  1142  0CBA  00DB               	movwf	_TEB
  1143                           
  1144                           ;newmain.c: 1176: SearchStop();
  1145  0CBB  118A  21AB  158A   	fcall	_SearchStop
  1146                           
  1147                           ;newmain.c: 1178: TEBPrev = TEB;
  1148  0CBE  085B               	movf	_TEB,w
  1149  0CBF  00D0               	movwf	_TEBPrev
  1150                           
  1151                           ;newmain.c: 1183: char ResetReason = DetectReset();
  1152  0CC0  118A  27D3  158A   	fcall	_DetectReset
  1153  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0CC4  00C5               	movwf	main@ResetReason
  1155                           
  1156                           ;newmain.c: 1184: WriteLog (1, ResetReason);
  1157  0CC5  00B4               	movwf	WriteLog@ResetReason
  1158  0CC6  3001               	movlw	1
  1159  0CC7  118A  2018  158A   	fcall	_WriteLog
  1160                           
  1161                           ;newmain.c: 1190: TMR1H = 0x0;
  1162  0CCA  018F               	clrf	15	;volatile
  1163                           
  1164                           ;newmain.c: 1191: TMR1L = 0x0;
  1165  0CCB  018E               	clrf	14	;volatile
  1166                           
  1167                           ;newmain.c: 1194: T1CON = 0b00111110;
  1168  0CCC  303E               	movlw	62
  1169  0CCD  0090               	movwf	16	;volatile
  1170                           
  1171                           ;newmain.c: 1200: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1172  0CCE  3006               	movlw	6
  1173  0CCF  00C4               	movwf	??_main+2
  1174  0CD0  3013               	movlw	19
  1175  0CD1  00C3               	movwf	??_main+1
  1176  0CD2  30B1               	movlw	177
  1177  0CD3  00C2               	movwf	??_main
  1178  0CD4                     u5267:	
  1179  0CD4  0BC2               	decfsz	??_main,f
  1180  0CD5  2CD4               	goto	u5267
  1181  0CD6  0BC3               	decfsz	??_main+1,f
  1182  0CD7  2CD4               	goto	u5267
  1183  0CD8  0BC4               	decfsz	??_main+2,f
  1184  0CD9  2CD4               	goto	u5267
  1185  0CDA  2CDB               	nop2
  1186                           
  1187                           ;newmain.c: 1201: T1CONbits.TMR1ON = 1;
  1188  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0CDD  1410               	bsf	16,0	;volatile
  1191                           
  1192                           ;newmain.c: 1202: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1193  0CDE  3006               	movlw	6
  1194  0CDF  00C4               	movwf	??_main+2
  1195  0CE0  3013               	movlw	19
  1196  0CE1  00C3               	movwf	??_main+1
  1197  0CE2  30B1               	movlw	177
  1198  0CE3  00C2               	movwf	??_main
  1199  0CE4                     u5277:	
  1200  0CE4  0BC2               	decfsz	??_main,f
  1201  0CE5  2CE4               	goto	u5277
  1202  0CE6  0BC3               	decfsz	??_main+1,f
  1203  0CE7  2CE4               	goto	u5277
  1204  0CE8  0BC4               	decfsz	??_main+2,f
  1205  0CE9  2CE4               	goto	u5277
  1206  0CEA  2CEB               	nop2
  1207                           
  1208                           ;newmain.c: 1208: unsigned char BINtmr = 0;
  1209  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0CEC  30FF               	movlw	255
  1211  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0CEE  01C8               	clrf	main@BINtmr
  1213                           
  1214                           ;newmain.c: 1210: i2cCmd = 0x0;
  1215  0CEF  01D5               	clrf	_i2cCmd
  1216                           
  1217                           ;newmain.c: 1211: i2cEEPROMAddr = 0x0;
  1218  0CF0  01D6               	clrf	_i2cEEPROMAddr
  1219                           
  1220                           ;newmain.c: 1213: i2cHoldTmr = 0xFF;
  1221  0CF1  00D7               	movwf	_i2cHoldTmr
  1222                           
  1223                           ;newmain.c: 1219: PIR1 = 0x0;
  1224  0CF2  018C               	clrf	12	;volatile
  1225                           
  1226                           ;newmain.c: 1220: PIR2 = 0x0;
  1227  0CF3  018D               	clrf	13	;volatile
  1228                           
  1229                           ;newmain.c: 1221: PIE1 = 0b00001001;
  1230  0CF4  3009               	movlw	9
  1231  0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  1232  0CF6  008C               	movwf	12	;volatile
  1233                           
  1234                           ;newmain.c: 1222: PIE1bits.SSPIE = 1;
  1235  0CF7  158C               	bsf	12,3	;volatile
  1236                           
  1237                           ;newmain.c: 1223: INTCON = 0b11001000;
  1238  0CF8  30C8               	movlw	200
  1239  0CF9  008B               	movwf	11	;volatile
  1240  0CFA                     l406:	
  1241                           ;newmain.c: 1225: while (1)
  1242                           
  1243  0CFA  0064               	clrwdt	;# 
  1244                           
  1245                           ;newmain.c: 1228: ToCheck = 0b11111111;
  1246  0CFB  30FF               	movlw	255
  1247  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0CFE  00D1               	movwf	_ToCheck
  1250  0CFF                     l4219:	
  1251                           ;newmain.c: 1230: while (ToCheck)
  1252                           
  1253  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0D01  08D1               	movf	_ToCheck,f
  1256  0D02  1903               	btfsc	3,2
  1257  0D03  2D0C               	goto	l4221
  1258                           
  1259                           ;newmain.c: 1231: {
  1260                           ;newmain.c: 1232: StartCheck (0);
  1261  0D04  3000               	movlw	0
  1262  0D05  118A  274A  158A   	fcall	_StartCheck
  1263                           
  1264                           ;newmain.c: 1233: CheckRes();
  1265  0D08  118A  263E  158A   	fcall	_CheckRes
  1266  0D0B  2CFF               	goto	l4219
  1267  0D0C                     l4221:	
  1268                           
  1269                           ;newmain.c: 1234: }
  1270                           ;newmain.c: 1264: if (i2cHoldTmr == 0xFF)
  1271  0D0C  0857               	movf	_i2cHoldTmr,w
  1272  0D0D  3AFF               	xorlw	255
  1273  0D0E  1D03               	skipz
  1274  0D0F  2D18               	goto	l4227
  1275                           
  1276                           ;newmain.c: 1265: {
  1277                           ;newmain.c: 1266: unsigned char resbin = EngBinState ();
  1278  0D10  158A  2690  158A   	fcall	_EngBinState
  1279  0D13  00C6               	movwf	main@resbin
  1280                           
  1281                           ;newmain.c: 1267: WriteLog (resbin, 0);
  1282  0D14  01B4               	clrf	WriteLog@ResetReason
  1283  0D15  118A  2018  158A   	fcall	_WriteLog
  1284  0D18                     l4227:	
  1285                           
  1286                           ;newmain.c: 1268: }
  1287                           ;newmain.c: 1287: if (IntSvcSync & 0b00000001)
  1288  0D18  1C4C               	btfss	_IntSvcSync,0
  1289  0D19  2D24               	goto	l4233
  1290                           
  1291                           ;newmain.c: 1288: {
  1292                           ;newmain.c: 1289: unsigned char restmr = TmrRoutines (&BINtmr);
  1293  0D1A  3048               	movlw	main@BINtmr& (0+255)
  1294  0D1B  158A  2544  158A   	fcall	_TmrRoutines
  1295  0D1E  00C7               	movwf	main@restmr
  1296                           
  1297                           ;newmain.c: 1290: WriteLog (restmr, 0);
  1298  0D1F  01B4               	clrf	WriteLog@ResetReason
  1299  0D20  118A  2018  158A   	fcall	_WriteLog
  1300                           
  1301                           ;newmain.c: 1291: IntSvcSync &= ~0b00000001;
  1302  0D23  104C               	bcf	_IntSvcSync,0
  1303  0D24                     l4233:	
  1304                           
  1305                           ;newmain.c: 1292: }
  1306                           ;newmain.c: 1301: if ((BinSt&0x80) || (EngSt&0xC0))
  1307  0D24  1BC9               	btfsc	_BinSt,7
  1308  0D25  2D2A               	goto	l414
  1309  0D26  084B               	movf	_EngSt,w
  1310  0D27  39C0               	andlw	192
  1311  0D28  1903               	btfsc	3,2
  1312  0D29  2D36               	goto	l412
  1313  0D2A                     l414:	
  1314                           
  1315                           ;newmain.c: 1302: {
  1316                           ;newmain.c: 1303: PORTCbits.RC2 = 0;
  1317  0D2A  1107               	bcf	7,2	;volatile
  1318                           
  1319                           ;newmain.c: 1304: PORTCbits.RC1 = 0;
  1320  0D2B  1087               	bcf	7,1	;volatile
  1321                           
  1322                           ;newmain.c: 1305: PORTCbits.RC3 = 0;
  1323  0D2C  1187               	bcf	7,3	;volatile
  1324                           
  1325                           ;newmain.c: 1306: if (!(IntSvcSync & 0b00001000))
  1326  0D2D  19CC               	btfsc	_IntSvcSync,3
  1327  0D2E  2D3E               	goto	l4245
  1328  0D2F  3002               	movlw	2
  1329                           
  1330                           ;newmain.c: 1307: {
  1331                           ;newmain.c: 1308: WriteLog (2, 0);
  1332  0D30  01B4               	clrf	WriteLog@ResetReason
  1333  0D31  118A  2018  158A   	fcall	_WriteLog
  1334                           
  1335                           ;newmain.c: 1309: IntSvcSync |= 0b00001000;
  1336  0D34  15CC               	bsf	_IntSvcSync,3
  1337  0D35  2D3E               	goto	l4245
  1338  0D36                     l412:	
  1339                           
  1340                           ;newmain.c: 1312: else
  1341                           ;newmain.c: 1313: {
  1342                           ;newmain.c: 1314: if ((IntSvcSync & 0b00001000))
  1343  0D36  1DCC               	btfss	_IntSvcSync,3
  1344  0D37  2D3E               	goto	l4245
  1345  0D38  3003               	movlw	3
  1346                           
  1347                           ;newmain.c: 1315: {
  1348                           ;newmain.c: 1316: WriteLog (3, 0);
  1349  0D39  01B4               	clrf	WriteLog@ResetReason
  1350  0D3A  118A  2018  158A   	fcall	_WriteLog
  1351                           
  1352                           ;newmain.c: 1317: IntSvcSync &= ~0b00001000;
  1353  0D3D  11CC               	bcf	_IntSvcSync,3
  1354  0D3E                     l4245:	
  1355                           
  1356                           ;newmain.c: 1318: }
  1357                           ;newmain.c: 1319: }
  1358                           ;newmain.c: 1321: if (!ToCheck )
  1359  0D3E  08D1               	movf	_ToCheck,f
  1360  0D3F  1D03               	skipz
  1361  0D40  2CFA               	goto	l406
  1362  0D41  0064               	clrwdt	;# 
  1363  0D42  0063               	sleep	;# 
  1364  0D43  2CFA               	goto	l406
  1365  0D44                     __end_of_main:	
  1366                           
  1367                           	psect	text1
  1368  0018                     __ptext1:	
  1369 ;; *************** function _WriteLog *****************
  1370 ;; Defined at:
  1371 ;;		line 128 in file "newmain.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  Event           1    wreg     unsigned char 
  1374 ;;  ResetReason     1   20[BANK0 ] unsigned char 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  Event           1   27[BANK0 ] unsigned char 
  1377 ;;  d               6   28[BANK0 ] unsigned char [6]
  1378 ;;  i               1   26[BANK0 ] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;		None               void
  1381 ;; Registers used:
  1382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 60/0
  1385 ;;		On exit  : 60/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1388 ;;      Params:         0       1       0       0
  1389 ;;      Locals:         0       8       0       0
  1390 ;;      Temps:          0       5       0       0
  1391 ;;      Totals:         0      14       0       0
  1392 ;;Total ram usage:       14 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    6
  1395 ;; This function calls:
  1396 ;;		_TXNbytes
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _WriteLog
  1404  0018                     _WriteLog:	
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _WriteLog: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1408                           ;WriteLog@Event stored from wreg
  1409  0018  00BB               	movwf	WriteLog@Event
  1410                           
  1411                           ;newmain.c: 140: char d[6];
  1412                           ;newmain.c: 142: if (Event == 0xFF)
  1413  0019  3AFF               	xorlw	255
  1414  001A  1903               	btfsc	3,2
  1415  001B  0008               	return
  1416                           
  1417                           ;newmain.c: 145: d[3] = Ubatt;
  1418  001C  085E               	movf	_Ubatt,w
  1419  001D  00BF               	movwf	WriteLog@d+3
  1420                           
  1421                           ;newmain.c: 146: d[4] = Teng;
  1422  001E  085D               	movf	_Teng,w
  1423  001F  00C0               	movwf	WriteLog@d+4
  1424                           
  1425                           ;newmain.c: 147: d[5] = 0b01010101;
  1426  0020  3055               	movlw	85
  1427  0021  00C1               	movwf	WriteLog@d+5
  1428                           
  1429                           ;newmain.c: 149: if (Event == 0)
  1430  0022  08BB               	movf	WriteLog@Event,f
  1431  0023  1D03               	skipz
  1432  0024  28FB               	goto	l3449
  1433                           
  1434                           ;newmain.c: 150: {
  1435                           ;newmain.c: 151: Event = 0x13;
  1436  0025  3013               	movlw	19
  1437  0026  00BB               	movwf	WriteLog@Event
  1438                           
  1439                           ;newmain.c: 152: if (BinSt == 0 && EngSt == 0)
  1440  0027  08C9               	movf	_BinSt,f
  1441  0028  1D03               	skipz
  1442  0029  282F               	goto	l3417
  1443  002A  08CB               	movf	_EngSt,f
  1444  002B  1D03               	skipz
  1445  002C  282F               	goto	l3417
  1446                           
  1447                           ;newmain.c: 153: Event = 0x12;
  1448  002D  3012               	movlw	18
  1449  002E  00BB               	movwf	WriteLog@Event
  1450  002F                     l3417:	
  1451                           
  1452                           ;newmain.c: 154: if ((BinSt&0x80) || (EngSt&0xC0))
  1453  002F  1BC9               	btfsc	_BinSt,7
  1454  0030  2835               	goto	l3421
  1455  0031  084B               	movf	_EngSt,w
  1456  0032  39C0               	andlw	192
  1457  0033  1903               	btfsc	3,2
  1458  0034  28FB               	goto	l3449
  1459  0035                     l3421:	
  1460                           
  1461                           ;newmain.c: 155: Event = 0x11;
  1462  0035  3011               	movlw	17
  1463  0036  00BB               	movwf	WriteLog@Event
  1464  0037  28FB               	goto	l3449
  1465  0038                     l3423:	
  1466                           
  1467                           ;newmain.c: 161: d[0] = 0b00000111;
  1468  0038  3007               	movlw	7
  1469  0039  00BC               	movwf	WriteLog@d
  1470                           
  1471                           ;newmain.c: 162: d[1] = ResetReason;
  1472  003A  0834               	movf	WriteLog@ResetReason,w
  1473  003B  00BD               	movwf	WriteLog@d+1
  1474                           
  1475                           ;newmain.c: 163: d[2] = ResetReason;
  1476  003C  0834               	movf	WriteLog@ResetReason,w
  1477  003D  00BE               	movwf	WriteLog@d+2
  1478  003E  3055               	movlw	85
  1479                           
  1480                           ;newmain.c: 164: d[3] = 0x0;
  1481  003F  01BF               	clrf	WriteLog@d+3
  1482                           
  1483                           ;newmain.c: 165: d[4] = 0x55;
  1484  0040  00C0               	movwf	WriteLog@d+4
  1485                           
  1486                           ;newmain.c: 166: break;
  1487  0041  2918               	goto	l3451
  1488  0042                     l3429:	
  1489                           
  1490                           ;newmain.c: 171: d[0] = 0b00101000 | ((TEB >= 0x80) << 4) | (day >> 5);
  1491  0042  0854               	movf	_day,w
  1492  0043  00B5               	movwf	??_WriteLog
  1493  0044  3005               	movlw	5
  1494  0045                     u3585:	
  1495  0045  1003               	clrc
  1496  0046  0CB5               	rrf	??_WriteLog,f
  1497  0047  3EFF               	addlw	-1
  1498  0048  1D03               	skipz
  1499  0049  2845               	goto	u3585
  1500  004A  3080               	movlw	128
  1501  004B  23C8  118A         	fcall	PL18	;call to abstracted procedure
  1502  004D  3828               	iorlw	40
  1503  004E  285B               	goto	L5
  1504  004F                     l3431:	
  1505                           ;newmain.c: 174: break;
  1506                           
  1507                           ;newmain.c: 173: d[2] = (hour << 6) | ((EngSt & 0b00000111) << 3) | (BinSt & 0b00000111)
      +                          ;
  1508                           
  1509                           ;newmain.c: 172: d[1] = (day << 3) | (hour >> 2);
  1510                           
  1511                           
  1512                           ;newmain.c: 176: d[0] = 0b00001000 | ((TEB >= 0x80) << 4) | (day >> 5);
  1513  004F  0854               	movf	_day,w
  1514  0050  00B5               	movwf	??_WriteLog
  1515  0051  3005               	movlw	5
  1516  0052                     u3595:	
  1517  0052  1003               	clrc
  1518  0053  0CB5               	rrf	??_WriteLog,f
  1519  0054  3EFF               	addlw	-1
  1520  0055  1D03               	skipz
  1521  0056  2852               	goto	u3595
  1522  0057  3080               	movlw	128
  1523  0058  23C8  118A         	fcall	PL18	;call to abstracted procedure
  1524  005A  3808               	iorlw	8
  1525  005B                     L5:	
  1526  005B  00BC               	movwf	WriteLog@d
  1527                           
  1528                           ;newmain.c: 177: d[1] = (day << 3) | (hour >> 2);
  1529  005C  0860               	movf	_hour,w
  1530  005D  23C2  118A         	fcall	PL16	;call to abstracted procedure
  1531  005F  0854               	movf	_day,w
  1532  0060  00B6               	movwf	??_WriteLog+1
  1533  0061  1003               	clrc
  1534  0062  0DB6               	rlf	??_WriteLog+1,f
  1535  0063  1003               	clrc
  1536  0064  0DB6               	rlf	??_WriteLog+1,f
  1537  0065  1003               	clrc
  1538  0066  0D36               	rlf	??_WriteLog+1,w
  1539                           
  1540                           ;newmain.c: 178: d[2] = (hour << 6) | ((EngSt & 0b00000111) << 3) | (BinSt & 0b00000111)
      +                          ;
  1541  0067  238A  118A         	fcall	PL4	;call to abstracted procedure
  1542  0069  0860               	movf	_hour,w
  1543  006A  2877               	goto	L6
  1544  006B                     l3433:	
  1545                           ;newmain.c: 179: break;
  1546                           
  1547                           
  1548                           ;newmain.c: 181: case 3:
  1549                           ;newmain.c: 185: d[0] = 0b00000010 | (hour >> 4);
  1550  006B  0E60               	swapf	_hour,w
  1551  006C  390F               	andlw	15
  1552  006D  3802               	iorlw	2
  1553  006E  00BC               	movwf	WriteLog@d
  1554                           
  1555                           ;newmain.c: 186: d[1] = (hour << 4) | (min >> 2);
  1556  006F  0859               	movf	_min,w
  1557  0070  23C2  118A         	fcall	PL16	;call to abstracted procedure
  1558  0072  0E60               	swapf	_hour,w
  1559  0073  39F0               	andlw	240
  1560                           
  1561                           ;newmain.c: 187: d[2] = (min << 6) | ((EngSt & 0b00000111) << 3) | (BinSt & 0b00000111);
  1562  0074  238A  118A         	fcall	PL4	;call to abstracted procedure
  1563  0076  0859               	movf	_min,w
  1564  0077                     L6:	
  1565  0077  00B7               	movwf	??_WriteLog+2
  1566  0078  0CB7               	rrf	??_WriteLog+2,f
  1567  0079  0CB7               	rrf	??_WriteLog+2,f
  1568  007A  0C37               	rrf	??_WriteLog+2,w
  1569  007B  39C0               	andlw	192
  1570  007C  0436               	iorwf	??_WriteLog+1,w
  1571  007D  28F8               	goto	L9
  1572  007E                     l3435:	
  1573                           ;newmain.c: 188: break;
  1574                           
  1575                           
  1576                           ;newmain.c: 193: d[0] = 0b10000000 | (hour << 2) | (min >> 4);
  1577  007E  0859               	movf	_min,w
  1578  007F  00B5               	movwf	??_WriteLog
  1579  0080  3004               	movlw	4
  1580  0081                     u3605:	
  1581  0081  1003               	clrc
  1582  0082  0CB5               	rrf	??_WriteLog,f
  1583  0083  3EFF               	addlw	-1
  1584  0084  1D03               	skipz
  1585  0085  2881               	goto	u3605
  1586  0086  0860               	movf	_hour,w
  1587  0087  00B6               	movwf	??_WriteLog+1
  1588  0088  3001               	movlw	1
  1589  0089  1003               	clrc
  1590  008A                     L1:	
  1591  008A  0DB6               	rlf	??_WriteLog+1,f
  1592  008B  3EFF               	addlw	-1
  1593  008C  1003               	clrc
  1594  008D  1D03               	skipz
  1595  008E  288A               	goto	L1
  1596  008F  0D36               	rlf	??_WriteLog+1,w
  1597  0090  0435               	iorwf	??_WriteLog,w
  1598  0091  3880               	iorlw	128
  1599  0092  00BC               	movwf	WriteLog@d
  1600                           
  1601                           ;newmain.c: 194: d[1] = (min << 4) | ((EngSt & 0b00000111) << 1) | ((BinSt & 0b00000111)
      +                           >> 2);
  1602  0093  0849               	movf	_BinSt,w
  1603  0094  00B5               	movwf	??_WriteLog
  1604  0095  3001               	movlw	1
  1605  0096  1003               	clrc
  1606  0097  0CB5               	rrf	??_WriteLog,f
  1607  0098  23AF  118A         	fcall	PL12	;call to abstracted procedure
  1608  009A  0E59               	swapf	_min,w
  1609  009B  39F0               	andlw	240
  1610  009C  0437               	iorwf	??_WriteLog+2,w
  1611  009D  0436               	iorwf	??_WriteLog+1,w
  1612  009E  00BD               	movwf	WriteLog@d+1
  1613                           
  1614                           ;newmain.c: 196: d[2] = ((BinSt & 0b00000111) << 6) | ((PinState & 0b01101110) >> 1) | (
      +                          PORTCbits.RC3 << 4);
  1615  009F  23A5  118A         	fcall	PL10	;call to abstracted procedure
  1616  00A1  084E               	movf	_PinState,w
  1617  00A2  00B7               	movwf	??_WriteLog+2
  1618  00A3  3037               	movlw	55
  1619  00A4  1003               	clrc
  1620  00A5  0CB7               	rrf	??_WriteLog+2,f
  1621  00A6  0537               	andwf	??_WriteLog+2,w
  1622  00A7  00B8               	movwf	??_WriteLog+3
  1623  00A8  0849               	movf	_BinSt,w
  1624  00A9  3907               	andlw	7
  1625  00AA  00B9               	movwf	??_WriteLog+4
  1626  00AB  0CB9               	rrf	??_WriteLog+4,f
  1627  00AC  0CB9               	rrf	??_WriteLog+4,f
  1628  00AD  0C39               	rrf	??_WriteLog+4,w
  1629  00AE  39C0               	andlw	192
  1630  00AF  0438               	iorwf	??_WriteLog+3,w
  1631  00B0  0436               	iorwf	??_WriteLog+1,w
  1632  00B1  28F9               	goto	L8
  1633  00B2                     l3437:	
  1634                           ;newmain.c: 197: break;
  1635                           
  1636                           
  1637                           ;newmain.c: 202: d[0] = 0b00000000;
  1638  00B2  01BC               	clrf	WriteLog@d
  1639                           
  1640                           ;newmain.c: 203: d[1] = (hour << 3) | (min >> 3);
  1641  00B3  0859               	movf	_min,w
  1642  00B4  00B5               	movwf	??_WriteLog
  1643  00B5  2379  118A         	fcall	PL2	;call to abstracted procedure
  1644                           
  1645                           ;newmain.c: 204: d[2] = (min << 5) | ((EngSt & 0b00000111) << 2) | ((BinSt & 0b00000111)
      +                           >> 1);
  1646  00B7  0849               	movf	_BinSt,w
  1647  00B8  00B5               	movwf	??_WriteLog
  1648  00B9  3003               	movlw	3
  1649  00BA  23AF  118A         	fcall	PL12	;call to abstracted procedure
  1650  00BC  1003               	clrc
  1651  00BD  0DB7               	rlf	??_WriteLog+2,f
  1652  00BE  0859               	movf	_min,w
  1653  00BF  00B8               	movwf	??_WriteLog+3
  1654  00C0  3004               	movlw	4
  1655  00C1  1003               	clrc
  1656  00C2                     L2:	
  1657  00C2  0DB8               	rlf	??_WriteLog+3,f
  1658  00C3  3EFF               	addlw	-1
  1659  00C4  1003               	clrc
  1660  00C5  1D03               	skipz
  1661  00C6  28C2               	goto	L2
  1662  00C7  0D38               	rlf	??_WriteLog+3,w
  1663  00C8  0437               	iorwf	??_WriteLog+2,w
  1664  00C9  0436               	iorwf	??_WriteLog+1,w
  1665  00CA  00BE               	movwf	WriteLog@d+2
  1666                           
  1667                           ;newmain.c: 206: d[3] = ((BinSt & 0b00000111) << 7) | (PinState & 0b01101110) | (PORTCbi
      +                          ts.RC3 << 4);
  1668  00CB  23A5  118A         	fcall	PL10	;call to abstracted procedure
  1669  00CD  306E               	movlw	110
  1670  00CE  054E               	andwf	_PinState,w
  1671  00CF  00B7               	movwf	??_WriteLog+2
  1672  00D0  0849               	movf	_BinSt,w
  1673  00D1  3907               	andlw	7
  1674  00D2  00B8               	movwf	??_WriteLog+3
  1675  00D3  3006               	movlw	6
  1676  00D4  1003               	clrc
  1677  00D5                     L3:	
  1678  00D5  0DB8               	rlf	??_WriteLog+3,f
  1679  00D6  3EFF               	addlw	-1
  1680  00D7  1003               	clrc
  1681  00D8  1D03               	skipz
  1682  00D9  28D5               	goto	L3
  1683  00DA  0D38               	rlf	??_WriteLog+3,w
  1684  00DB  0437               	iorwf	??_WriteLog+2,w
  1685  00DC  0436               	iorwf	??_WriteLog+1,w
  1686  00DD  00BF               	movwf	WriteLog@d+3
  1687                           
  1688                           ;newmain.c: 207: break;
  1689  00DE  2918               	goto	l3451
  1690  00DF                     l174:	
  1691                           
  1692                           ;newmain.c: 209: case 5:
  1693                           ;newmain.c: 212: d[0] = 0b00000001;
  1694  00DF  01BC               	clrf	WriteLog@d
  1695  00E0  0ABC               	incf	WriteLog@d,f
  1696                           
  1697                           ;newmain.c: 213: d[1] = (hour << 3) | (min >> 3);
  1698  00E1  0859               	movf	_min,w
  1699  00E2  00B5               	movwf	??_WriteLog
  1700  00E3  2379  118A         	fcall	PL2	;call to abstracted procedure
  1701                           
  1702                           ;newmain.c: 214: d[2] = (min << 5) | ((Event == 4 ? 0 : 1) << 4);
  1703  00E5  083B               	movf	WriteLog@Event,w
  1704  00E6  3A04               	xorlw	4
  1705  00E7  3000               	movlw	0
  1706  00E8  1D03               	skipz
  1707  00E9  3001               	movlw	1
  1708  00EA  00B5               	movwf	??_WriteLog
  1709  00EB  0E35               	swapf	??_WriteLog,w
  1710  00EC  39F0               	andlw	240
  1711  00ED  00B5               	movwf	??_WriteLog
  1712  00EE  0859               	movf	_min,w
  1713  00EF  00B6               	movwf	??_WriteLog+1
  1714  00F0  3004               	movlw	4
  1715  00F1  1003               	clrc
  1716  00F2                     L4:	
  1717  00F2  0DB6               	rlf	??_WriteLog+1,f
  1718  00F3  3EFF               	addlw	-1
  1719  00F4  1003               	clrc
  1720  00F5  1D03               	skipz
  1721  00F6  28F2               	goto	L4
  1722  00F7  0D36               	rlf	??_WriteLog+1,w
  1723  00F8                     L9:	
  1724  00F8  0435               	iorwf	??_WriteLog,w
  1725  00F9                     L8:	
  1726  00F9  00BE               	movwf	WriteLog@d+2
  1727                           
  1728                           ;newmain.c: 215: break;
  1729  00FA  2918               	goto	l3451
  1730  00FB                     l3449:	
  1731  00FB  083B               	movf	WriteLog@Event,w
  1732                           
  1733                           ; Switch size 1, requested type "space"
  1734                           ; Number of cases is 9, Range of values is 1 to 19
  1735                           ; switch strategies available:
  1736                           ; Name         Instructions Cycles
  1737                           ; simple_byte           28    15 (average)
  1738                           ; direct_byte           48    10 (fixed)
  1739                           ; jumptable            263     9 (fixed)
  1740                           ;	Chosen strategy is simple_byte
  1741  00FC  3A01               	xorlw	1	; case 1
  1742  00FD  1903               	skipnz
  1743  00FE  2838               	goto	l3423
  1744  00FF  3A03               	xorlw	3	; case 2
  1745  0100  1903               	skipnz
  1746  0101  286B               	goto	l3433
  1747  0102  3A01               	xorlw	1	; case 3
  1748  0103  1903               	skipnz
  1749  0104  286B               	goto	l3433
  1750  0105  3A07               	xorlw	7	; case 4
  1751  0106  1903               	skipnz
  1752  0107  28DF               	goto	l174
  1753  0108  3A01               	xorlw	1	; case 5
  1754  0109  1903               	skipnz
  1755  010A  28DF               	goto	l174
  1756  010B  3A03               	xorlw	3	; case 6
  1757  010C  1903               	skipnz
  1758  010D  28B2               	goto	l3437
  1759  010E  3A17               	xorlw	23	; case 17
  1760  010F  1903               	skipnz
  1761  0110  284F               	goto	l3431
  1762  0111  3A03               	xorlw	3	; case 18
  1763  0112  1903               	skipnz
  1764  0113  2842               	goto	l3429
  1765  0114  3A01               	xorlw	1	; case 19
  1766  0115  1903               	skipnz
  1767  0116  287E               	goto	l3435
  1768  0117  2918               	goto	l3451
  1769  0118                     l3451:	
  1770                           
  1771                           ;newmain.c: 218: char i = 3;
  1772  0118  3003               	movlw	3
  1773  0119  00BA               	movwf	WriteLog@i
  1774                           
  1775                           ;newmain.c: 219: while (TXNbytes (addrh, addrl, 6, d) && i > 0)
  1776  011A  292B               	goto	l3457
  1777  011B                     l3459:	
  1778  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1779  011C  08BA               	movf	WriteLog@i,f
  1780  011D  1903               	btfsc	3,2
  1781  011E  2937               	goto	l3461
  1782                           
  1783                           ;newmain.c: 220: {
  1784                           ;newmain.c: 221: _delay((unsigned long)((10)*(4000000/4000.0)));
  1785  011F  300D               	movlw	13
  1786  0120  00B6               	movwf	??_WriteLog+1
  1787  0121  30FB               	movlw	251
  1788  0122  00B5               	movwf	??_WriteLog
  1789  0123                     u5287:	
  1790  0123  0BB5               	decfsz	??_WriteLog,f
  1791  0124  2923               	goto	u5287
  1792  0125  0BB6               	decfsz	??_WriteLog+1,f
  1793  0126  2923               	goto	u5287
  1794  0127  2928               	nop2
  1795                           
  1796                           ;newmain.c: 222: i--;
  1797  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1799  012A  03BA               	decf	WriteLog@i,f
  1800  012B                     l3457:	
  1801  012B  0853               	movf	_addrl,w
  1802  012C  00A9               	movwf	TXNbytes@addrl
  1803  012D  3006               	movlw	6
  1804  012E  00AA               	movwf	TXNbytes@N
  1805  012F  303C               	movlw	WriteLog@d& (0+255)
  1806  0130  00AB               	movwf	TXNbytes@d
  1807  0131  0852               	movf	_addrh,w
  1808  0132  213D  118A         	fcall	_TXNbytes
  1809  0134  3A00               	xorlw	0
  1810  0135  1D03               	btfss	3,2
  1811  0136  291B               	goto	l3459
  1812  0137                     l3461:	
  1813                           
  1814                           ;newmain.c: 223: }
  1815                           ;newmain.c: 224: addrl += 5;
  1816  0137  3005               	movlw	5
  1817  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0139  07D3               	addwf	_addrl,f
  1819                           
  1820                           ;newmain.c: 225: if (STATUSbits.C)
  1821  013A  1803               	btfsc	3,0	;volatile
  1822                           
  1823                           ;newmain.c: 226: addrh += 1;
  1824  013B  0AD2               	incf	_addrh,f
  1825  013C  0008               	return
  1826  013D                     __end_of_WriteLog:	
  1827  013D                     __ptext2:	
  1828 ;; *************** function _TXNbytes *****************
  1829 ;; Defined at:
  1830 ;;		line 476 in file "../../i2c/i2c_my.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  addrh           1    wreg     unsigned char 
  1833 ;;  addrl           1    9[BANK0 ] unsigned char 
  1834 ;;  N               1   10[BANK0 ] unsigned char 
  1835 ;;  d               1   11[BANK0 ] PTR unsigned char 
  1836 ;;		 -> WriteLog@d(6), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  addrh           1   16[BANK0 ] unsigned char 
  1839 ;;  i               1   19[BANK0 ] unsigned char 
  1840 ;;  ret             1   18[BANK0 ] unsigned char 
  1841 ;;  j               1   17[BANK0 ] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      unsigned char 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 60/0
  1848 ;;		On exit  : 40/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1851 ;;      Params:         0       3       0       0
  1852 ;;      Locals:         0       4       0       0
  1853 ;;      Temps:          0       4       0       0
  1854 ;;      Totals:         0      11       0       0
  1855 ;;Total ram usage:       11 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    5
  1858 ;; This function calls:
  1859 ;;		_i2c_start
  1860 ;;		_i2c_stop
  1861 ;;		_i2c_tx
  1862 ;; This function is called by:
  1863 ;;		_WriteLog
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _TXNbytes
  1869  013D                     _TXNbytes:	
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _TXNbytes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1873                           ;TXNbytes@addrh stored from wreg
  1874  013D  00B0               	movwf	TXNbytes@addrh
  1875  013E  3000               	movlw	0
  1876                           
  1877                           ;i2c_my.c: 478: unsigned char ret = 0;
  1878  013F  01B2               	clrf	TXNbytes@ret
  1879                           
  1880                           ;i2c_my.c: 479: unsigned char i, j;
  1881                           ;i2c_my.c: 481: if (i2c_start (0))
  1882  0140  22DD  118A         	fcall	_i2c_start
  1883  0142  3A00               	xorlw	0
  1884  0143  1D03               	btfss	3,2
  1885                           
  1886                           ;i2c_my.c: 482: {
  1887                           ;i2c_my.c: 483: return (1);
  1888  0144  3401               	retlw	1
  1889                           
  1890                           ;i2c_my.c: 484: }
  1891                           ;i2c_my.c: 485: if (i2c_tx(0b10100000, 0))
  1892  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0146  30A0               	movlw	160
  1894  0147  01A5               	clrf	i2c_tx@CareAboutAck
  1895  0148  2282  118A         	fcall	_i2c_tx
  1896  014A  3A00               	xorlw	0
  1897  014B  1903               	skipnz
  1898  014C  294F               	goto	l2957
  1899                           
  1900                           ;i2c_my.c: 486: {
  1901                           ;i2c_my.c: 487: ret = 3;
  1902  014D  3003               	movlw	3
  1903  014E  2962               	goto	L11
  1904  014F                     l2957:	
  1905                           ;i2c_my.c: 488: goto end;
  1906                           
  1907                           
  1908                           ;i2c_my.c: 489: }
  1909                           ;i2c_my.c: 490: if (i2c_tx(addrh, 0))
  1910  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0150  01A5               	clrf	i2c_tx@CareAboutAck
  1912  0151  0830               	movf	TXNbytes@addrh,w
  1913  0152  2282  118A         	fcall	_i2c_tx
  1914  0154  3A00               	xorlw	0
  1915  0155  1903               	skipnz
  1916  0156  2959               	goto	l2961
  1917                           
  1918                           ;i2c_my.c: 491: {
  1919                           ;i2c_my.c: 492: ret = 4;
  1920  0157  3004               	movlw	4
  1921  0158  2962               	goto	L11
  1922  0159                     l2961:	
  1923                           ;i2c_my.c: 493: goto end;
  1924                           
  1925                           
  1926                           ;i2c_my.c: 494: }
  1927                           ;i2c_my.c: 495: if (i2c_tx(addrl, 0))
  1928  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1929  015A  01A5               	clrf	i2c_tx@CareAboutAck
  1930  015B  0829               	movf	TXNbytes@addrl,w
  1931  015C  2282  118A         	fcall	_i2c_tx
  1932  015E  3A00               	xorlw	0
  1933  015F  1903               	skipnz
  1934  0160  2964               	goto	l2965
  1935                           
  1936                           ;i2c_my.c: 496: {
  1937                           ;i2c_my.c: 497: ret = 5;
  1938  0161  3005               	movlw	5
  1939  0162                     L11:	
  1940  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0163  2992               	goto	L12
  1942  0164                     l2965:	
  1943                           ;i2c_my.c: 498: goto end;
  1944                           
  1945                           
  1946                           ;i2c_my.c: 499: }
  1947                           ;i2c_my.c: 501: j = 3;
  1948  0164  3003               	movlw	3
  1949  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0166  00B1               	movwf	TXNbytes@j
  1951                           
  1952                           ;i2c_my.c: 503: for (i = 0; i < N && ((addrl - 1 + i != 0x7F && addrl - 1 + i != 0xFF) |
      +                          | addrl == 0 || addrl == 0x80); i++)
  1953  0167  01B3               	clrf	TXNbytes@i
  1954  0168                     l2975:	
  1955  0168  082A               	movf	TXNbytes@N,w
  1956  0169  0233               	subwf	TXNbytes@i,w
  1957  016A  1803               	skipnc
  1958  016B  299A               	goto	l2985
  1959  016C  0829               	movf	TXNbytes@addrl,w
  1960  016D  2399  118A         	fcall	PL8	;call to abstracted procedure
  1961  016F  082E               	movf	??_TXNbytes+2,w
  1962  0170  3A7F               	xorlw	127
  1963  0171  042F               	iorwf	??_TXNbytes+3,w
  1964  0172  1903               	skipnz
  1965  0173  297B               	goto	l2981
  1966  0174  0829               	movf	TXNbytes@addrl,w
  1967  0175  2399  118A         	fcall	PL8	;call to abstracted procedure
  1968  0177  0A2E               	incf	??_TXNbytes+2,w
  1969  0178  042F               	iorwf	??_TXNbytes+3,w
  1970  0179  1D03               	skipz
  1971  017A  2982               	goto	l2969
  1972  017B                     l2981:	
  1973  017B  0829               	movf	TXNbytes@addrl,w
  1974  017C  1903               	btfsc	3,2
  1975  017D  2982               	goto	l2969
  1976  017E  0829               	movf	TXNbytes@addrl,w
  1977  017F  3A80               	xorlw	128
  1978  0180  1D03               	btfss	3,2
  1979  0181  299A               	goto	l2985
  1980  0182                     l2969:	
  1981                           
  1982                           ;i2c_my.c: 504: {
  1983                           ;i2c_my.c: 505: if (i2c_tx(d[i], 0))
  1984  0182  01A5               	clrf	i2c_tx@CareAboutAck
  1985  0183  0833               	movf	TXNbytes@i,w
  1986  0184  072B               	addwf	TXNbytes@d,w
  1987  0185  00AC               	movwf	??_TXNbytes
  1988  0186  0084               	movwf	4
  1989  0187  1383               	bcf	3,7	;select IRP bank0
  1990  0188  0800               	movf	0,w
  1991  0189  2282  118A         	fcall	_i2c_tx
  1992  018B  3A00               	xorlw	0
  1993  018C  1903               	skipnz
  1994  018D  2994               	goto	l2973
  1995                           
  1996                           ;i2c_my.c: 506: {
  1997                           ;i2c_my.c: 507: ret = (i<<4) | 7;
  1998  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1999  018F  0E33               	swapf	TXNbytes@i,w
  2000  0190  39F0               	andlw	240
  2001  0191  3807               	iorlw	7
  2002  0192                     L12:	
  2003  0192  00B2               	movwf	TXNbytes@ret
  2004                           
  2005                           ;i2c_my.c: 508: goto end;
  2006  0193  299A               	goto	l2985
  2007  0194                     l2973:	
  2008  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0195  0AB3               	incf	TXNbytes@i,f
  2010  0196  2968               	goto	l2975
  2011  0197                     l731:	
  2012                           ;i2c_my.c: 514: while (i2c_stop(0) && --j > 0)
  2013                           
  2014                           ;i2c_my.c: 509: }
  2015                           ;i2c_my.c: 510: }
  2016                           ;i2c_my.c: 512: end:
  2017                           
  2018                           
  2019                           ;i2c_my.c: 515: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2020  0197  2998               	nop2	;2 cycle nop
  2021  0198  2999               	nop2	;2 cycle nop
  2022  0199  0000               	nop
  2023  019A                     l2985:	
  2024  019A  3000               	movlw	0
  2025  019B  22FD  118A         	fcall	_i2c_stop
  2026  019D  3A00               	xorlw	0
  2027  019E  1903               	skipnz
  2028  019F  29A2               	goto	l2989
  2029  01A0  0BB1               	decfsz	TXNbytes@j,f
  2030  01A1  2997               	goto	l731
  2031  01A2                     l2989:	
  2032                           
  2033                           ;i2c_my.c: 517: if (j == 0)
  2034  01A2  08B1               	movf	TXNbytes@j,f
  2035  01A3  1D03               	skipz
  2036  01A4  29A9               	goto	l2995
  2037                           
  2038                           ;i2c_my.c: 518: {
  2039                           ;i2c_my.c: 519: i2c_stop(1);
  2040  01A5  3001               	movlw	1
  2041  01A6  22FD               	fcall	_i2c_stop
  2042                           
  2043                           ;i2c_my.c: 520: ret = 2;
  2044  01A7  3002               	movlw	2
  2045  01A8  00B2               	movwf	TXNbytes@ret
  2046  01A9                     l2995:	
  2047                           
  2048                           ;i2c_my.c: 521: }
  2049                           ;i2c_my.c: 540: return (ret);
  2050  01A9  0832               	movf	TXNbytes@ret,w
  2051  01AA  0008               	return
  2052  01AB                     __end_of_TXNbytes:	
  2053  01AB                     __ptext8:	
  2054 ;; *************** function _SearchStop *****************
  2055 ;; Defined at:
  2056 ;;		line 230 in file "newmain.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  d               1   18[BANK0 ] unsigned char 
  2061 ;;  addrls          1   17[BANK0 ] unsigned char 
  2062 ;;  addrhs          1   16[BANK0 ] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;		None               void
  2065 ;; Registers used:
  2066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 60/0
  2069 ;;		On exit  : 60/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2072 ;;      Params:         0       0       0       0
  2073 ;;      Locals:         0       3       0       0
  2074 ;;      Temps:          0       1       0       0
  2075 ;;      Totals:         0       4       0       0
  2076 ;;Total ram usage:        4 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    6
  2079 ;; This function calls:
  2080 ;;		_RXbyte
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           
  2087                           ;psect for function _SearchStop
  2088  01AB                     _SearchStop:	
  2089                           
  2090                           ;newmain.c: 232: unsigned char d = 0xFF;
  2091                           
  2092                           ;incstack = 0
  2093                           ; Regs used in _SearchStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2094  01AB  30FF               	movlw	255
  2095  01AC  00B2               	movwf	SearchStop@d
  2096                           
  2097                           ;newmain.c: 233: unsigned char addrhs = 0, addrls = 0;
  2098  01AD  01B0               	clrf	SearchStop@addrhs
  2099  01AE  01B1               	clrf	SearchStop@addrls
  2100                           
  2101                           ;newmain.c: 234: addrh = 0;
  2102  01AF  01D2               	clrf	_addrh
  2103                           
  2104                           ;newmain.c: 235: addrl = 0;
  2105  01B0  01D3               	clrf	_addrl
  2106                           
  2107                           ;newmain.c: 236: while (d != 0b01010101 && addrh != 0xFF)
  2108  01B1  29C7               	goto	l183
  2109  01B2                     l3477:	
  2110                           
  2111                           ;newmain.c: 237: {
  2112                           ;newmain.c: 238: addrl += 5;
  2113  01B2  3005               	movlw	5
  2114  01B3  07D3               	addwf	_addrl,f
  2115                           
  2116                           ;newmain.c: 239: if (STATUSbits.C)
  2117  01B4  1803               	btfsc	3,0	;volatile
  2118                           
  2119                           ;newmain.c: 240: addrh += 1;
  2120  01B5  0AD2               	incf	_addrh,f
  2121                           
  2122                           ;newmain.c: 242: RXbyte (addrh, addrl, &d);
  2123  01B6  0853               	movf	_addrl,w
  2124  01B7  00AA               	movwf	RXbyte@addrL
  2125  01B8  3032               	movlw	SearchStop@d& (0+255)
  2126  01B9  00AB               	movwf	RXbyte@d
  2127  01BA  0852               	movf	_addrh,w
  2128  01BB  223A  118A         	fcall	_RXbyte
  2129                           
  2130                           ;newmain.c: 244: if ((d & 0b11001000) == 0b00001000)
  2131  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2132  01BE  0832               	movf	SearchStop@d,w
  2133  01BF  39C8               	andlw	200
  2134  01C0  3A08               	xorlw	8
  2135  01C1  1D03               	skipz
  2136  01C2  29C7               	goto	l183
  2137                           
  2138                           ;newmain.c: 245: {
  2139                           ;newmain.c: 246: addrhs = addrh;
  2140  01C3  0852               	movf	_addrh,w
  2141  01C4  00B0               	movwf	SearchStop@addrhs
  2142                           
  2143                           ;newmain.c: 247: addrls = addrl;
  2144  01C5  0853               	movf	_addrl,w
  2145  01C6  00B1               	movwf	SearchStop@addrls
  2146  01C7                     l183:	
  2147  01C7  0832               	movf	SearchStop@d,w
  2148  01C8  3A55               	xorlw	85
  2149  01C9  1903               	skipnz
  2150  01CA  29CF               	goto	l3491
  2151  01CB  0852               	movf	_addrh,w
  2152  01CC  3AFF               	xorlw	255
  2153  01CD  1D03               	skipz
  2154  01CE  29B2               	goto	l3477
  2155  01CF                     l3491:	
  2156                           
  2157                           ;newmain.c: 248: }
  2158                           ;newmain.c: 249: }
  2159                           ;newmain.c: 251: if (d != 0b01010101)
  2160  01CF  0832               	movf	SearchStop@d,w
  2161  01D0  3A55               	xorlw	85
  2162  01D1  1903               	skipnz
  2163  01D2  29D6               	goto	l3495
  2164                           
  2165                           ;newmain.c: 252: {
  2166                           ;newmain.c: 253: addrh = 0;
  2167  01D3  01D2               	clrf	_addrh
  2168                           
  2169                           ;newmain.c: 254: addrl = 0;
  2170  01D4  01D3               	clrf	_addrl
  2171                           
  2172                           ;newmain.c: 255: }
  2173  01D5  0008               	return
  2174  01D6                     l3495:	
  2175                           
  2176                           ;newmain.c: 256: else
  2177                           ;newmain.c: 257: {
  2178                           ;newmain.c: 258: if (addrhs != 0 || addrls != 0)
  2179  01D6  08B0               	movf	SearchStop@addrhs,f
  2180  01D7  1903               	btfsc	3,2
  2181  01D8  0831               	movf	SearchStop@addrls,w
  2182  01D9  1903               	btfsc	3,2
  2183  01DA  0008               	return
  2184                           
  2185                           ;newmain.c: 259: {
  2186                           ;newmain.c: 260: RXbyte (addrhs, addrls, &d);
  2187  01DB  0831               	movf	SearchStop@addrls,w
  2188  01DC  00AA               	movwf	RXbyte@addrL
  2189  01DD  3032               	movlw	SearchStop@d& (0+255)
  2190  01DE  00AB               	movwf	RXbyte@d
  2191  01DF  0830               	movf	SearchStop@addrhs,w
  2192  01E0  223A  118A         	fcall	_RXbyte
  2193                           
  2194                           ;newmain.c: 262: if (0b00010000 & d)
  2195  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2196  01E3  1E32               	btfss	SearchStop@d,4
  2197  01E4  29E7               	goto	l3505
  2198                           
  2199                           ;newmain.c: 263: TEB = 0x84;
  2200  01E5  3084               	movlw	132
  2201  01E6  29E8               	goto	L29
  2202  01E7                     l3505:	
  2203                           
  2204                           ;newmain.c: 264: else
  2205                           ;newmain.c: 265: TEB = 0x7B;
  2206  01E7  307B               	movlw	123
  2207  01E8                     L29:	
  2208  01E8  00DB               	movwf	_TEB
  2209                           
  2210                           ;newmain.c: 267: if (0b00100000 & d)
  2211  01E9  1EB2               	btfss	SearchStop@d,5
  2212  01EA  29EE               	goto	l3511
  2213                           
  2214                           ;newmain.c: 268: {
  2215                           ;newmain.c: 269: BinSt = 0;
  2216  01EB  01C9               	clrf	_BinSt
  2217                           
  2218                           ;newmain.c: 270: EngSt = 0;
  2219  01EC  01CB               	clrf	_EngSt
  2220                           
  2221                           ;newmain.c: 271: }
  2222  01ED  29F2               	goto	l3513
  2223  01EE                     l3511:	
  2224                           
  2225                           ;newmain.c: 272: else
  2226                           ;newmain.c: 273: {
  2227                           ;newmain.c: 274: BinSt = 0x80;
  2228  01EE  3080               	movlw	128
  2229  01EF  00C9               	movwf	_BinSt
  2230                           
  2231                           ;newmain.c: 275: EngSt = 0xC0;
  2232  01F0  30C0               	movlw	192
  2233  01F1  00CB               	movwf	_EngSt
  2234  01F2                     l3513:	
  2235                           
  2236                           ;newmain.c: 276: }
  2237                           ;newmain.c: 278: day = (d & 0b00000111) << 5;
  2238  01F2  0832               	movf	SearchStop@d,w
  2239  01F3  3907               	andlw	7
  2240  01F4  00AF               	movwf	??_SearchStop
  2241  01F5  3004               	movlw	4
  2242  01F6  1003               	clrc
  2243  01F7                     L27:	
  2244  01F7  0DAF               	rlf	??_SearchStop,f
  2245  01F8  3EFF               	addlw	-1
  2246  01F9  1003               	clrc
  2247  01FA  1D03               	skipz
  2248  01FB  29F7               	goto	L27
  2249  01FC  0D2F               	rlf	??_SearchStop,w
  2250  01FD  00D4               	movwf	_day
  2251                           
  2252                           ;newmain.c: 280: addrls += 1;
  2253                           
  2254                           ;newmain.c: 281: if (STATUSbits.C)
  2255                           
  2256                           ;newmain.c: 282: addrhs += 1;
  2257                           
  2258                           ;newmain.c: 283: RXbyte (addrhs, addrls, &d);
  2259  01FE  23B9  118A         	fcall	PL14	;call to abstracted procedure
  2260  0200  223A  118A         	fcall	_RXbyte
  2261                           
  2262                           ;newmain.c: 285: day |= ((d & 0b11111000) >> 3);
  2263  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0203  0832               	movf	SearchStop@d,w
  2265  0204  00AF               	movwf	??_SearchStop
  2266  0205  1003               	clrc
  2267  0206  0CAF               	rrf	??_SearchStop,f
  2268  0207  1003               	clrc
  2269  0208  0CAF               	rrf	??_SearchStop,f
  2270  0209  1003               	clrc
  2271  020A  0CAF               	rrf	??_SearchStop,f
  2272  020B  082F               	movf	??_SearchStop,w
  2273  020C  391F               	andlw	31
  2274  020D  04D4               	iorwf	_day,f
  2275                           
  2276                           ;newmain.c: 286: hour = (d & 0b00000111) << 2;
  2277  020E  0832               	movf	SearchStop@d,w
  2278  020F  3907               	andlw	7
  2279  0210  00AF               	movwf	??_SearchStop
  2280  0211  3001               	movlw	1
  2281  0212  1003               	clrc
  2282  0213                     L28:	
  2283  0213  0DAF               	rlf	??_SearchStop,f
  2284  0214  3EFF               	addlw	-1
  2285  0215  1003               	clrc
  2286  0216  1D03               	skipz
  2287  0217  2A13               	goto	L28
  2288  0218  0D2F               	rlf	??_SearchStop,w
  2289  0219  00E0               	movwf	_hour
  2290                           
  2291                           ;newmain.c: 288: addrls += 1;
  2292                           
  2293                           ;newmain.c: 289: if (STATUSbits.C)
  2294                           
  2295                           ;newmain.c: 290: addrhs += 1;
  2296                           
  2297                           ;newmain.c: 291: RXbyte (addrhs, addrls, &d);
  2298  021A  23B9  118A         	fcall	PL14	;call to abstracted procedure
  2299  021C  223A  118A         	fcall	_RXbyte
  2300                           
  2301                           ;newmain.c: 293: hour |= (d & 0b11000000) >> 6;
  2302  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2303  021F  0832               	movf	SearchStop@d,w
  2304  0220  00AF               	movwf	??_SearchStop
  2305  0221  3006               	movlw	6
  2306  0222                     u3815:	
  2307  0222  1003               	clrc
  2308  0223  0CAF               	rrf	??_SearchStop,f
  2309  0224  3EFF               	addlw	-1
  2310  0225  1D03               	skipz
  2311  0226  2A22               	goto	u3815
  2312  0227  082F               	movf	??_SearchStop,w
  2313  0228  3903               	andlw	3
  2314  0229  04E0               	iorwf	_hour,f
  2315                           
  2316                           ;newmain.c: 299: hour += 2;
  2317  022A  0AE0               	incf	_hour,f
  2318  022B  0AE0               	incf	_hour,f
  2319                           
  2320                           ;newmain.c: 300: if (hour == 24 || hour == 25)
  2321  022C  0860               	movf	_hour,w
  2322  022D  3A18               	xorlw	24
  2323  022E  1903               	skipnz
  2324  022F  2A34               	goto	l3541
  2325  0230  0860               	movf	_hour,w
  2326  0231  3A19               	xorlw	25
  2327  0232  1D03               	skipz
  2328  0233  2A37               	goto	l3545
  2329  0234                     l3541:	
  2330                           
  2331                           ;newmain.c: 301: {
  2332                           ;newmain.c: 302: hour -= 24;
  2333  0234  3018               	movlw	24
  2334  0235  02E0               	subwf	_hour,f
  2335                           
  2336                           ;newmain.c: 303: day++;
  2337  0236  0AD4               	incf	_day,f
  2338  0237                     l3545:	
  2339                           
  2340                           ;newmain.c: 304: }
  2341                           ;newmain.c: 305: min = 1;
  2342  0237  01D9               	clrf	_min
  2343  0238  0AD9               	incf	_min,f
  2344  0239  0008               	return
  2345  023A                     __end_of_SearchStop:	
  2346  023A                     __ptext9:	
  2347 ;; *************** function _RXbyte *****************
  2348 ;; Defined at:
  2349 ;;		line 297 in file "../../i2c/i2c_my.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  addrH           1    wreg     unsigned char 
  2352 ;;  addrL           1   10[BANK0 ] unsigned char 
  2353 ;;  d               1   11[BANK0 ] PTR unsigned char 
  2354 ;;		 -> SearchStop@d(1), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  addrH           1   12[BANK0 ] unsigned char 
  2357 ;;  i               1   14[BANK0 ] unsigned char 
  2358 ;;  ret             1    0        unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      unsigned char 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 60/0
  2365 ;;		On exit  : 40/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2368 ;;      Params:         0       2       0       0
  2369 ;;      Locals:         0       3       0       0
  2370 ;;      Temps:          0       0       0       0
  2371 ;;      Totals:         0       5       0       0
  2372 ;;Total ram usage:        5 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    5
  2375 ;; This function calls:
  2376 ;;		_i2c_rx
  2377 ;;		_i2c_start
  2378 ;;		_i2c_stop
  2379 ;;		_i2c_tx
  2380 ;; This function is called by:
  2381 ;;		_SearchStop
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _RXbyte
  2387  023A                     _RXbyte:	
  2388                           
  2389                           ;incstack = 0
  2390                           ; Regs used in _RXbyte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2391                           ;RXbyte@addrH stored from wreg
  2392  023A  00AC               	movwf	RXbyte@addrH
  2393                           
  2394                           ;i2c_my.c: 300: unsigned char i = 3;
  2395  023B  3003               	movlw	3
  2396  023C  00AE               	movwf	RXbyte@i
  2397                           
  2398                           ;i2c_my.c: 302: if (i2c_start(0))
  2399  023D  3000               	movlw	0
  2400  023E  22DD  118A         	fcall	_i2c_start
  2401  0240  3A00               	xorlw	0
  2402  0241  1D03               	btfss	3,2
  2403  0242  0008               	return
  2404                           
  2405                           ;i2c_my.c: 305: }
  2406                           ;i2c_my.c: 306: if (i2c_tx(0b10100000, 0))
  2407  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0244  30A0               	movlw	160
  2409  0245  01A5               	clrf	i2c_tx@CareAboutAck
  2410  0246  2282  118A         	fcall	_i2c_tx
  2411  0248  3A00               	xorlw	0
  2412  0249  1D03               	btfss	3,2
  2413  024A  2A75               	goto	l3031
  2414                           
  2415                           ;i2c_my.c: 310: }
  2416                           ;i2c_my.c: 311: if (i2c_tx(addrH, 0))
  2417                           
  2418                           ;i2c_my.c: 309: goto end;
  2419  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2420  024C  01A5               	clrf	i2c_tx@CareAboutAck
  2421  024D  082C               	movf	RXbyte@addrH,w
  2422  024E  2282  118A         	fcall	_i2c_tx
  2423  0250  3A00               	xorlw	0
  2424  0251  1D03               	btfss	3,2
  2425  0252  2A75               	goto	l3031
  2426                           
  2427                           ;i2c_my.c: 315: }
  2428                           ;i2c_my.c: 316: if (i2c_tx(addrL, 0))
  2429                           
  2430                           ;i2c_my.c: 314: goto end;
  2431  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0254  01A5               	clrf	i2c_tx@CareAboutAck
  2433  0255  082A               	movf	RXbyte@addrL,w
  2434  0256  2282  118A         	fcall	_i2c_tx
  2435  0258  3A00               	xorlw	0
  2436  0259  1D03               	btfss	3,2
  2437  025A  2A75               	goto	l3031
  2438                           
  2439                           ;i2c_my.c: 320: }
  2440                           ;i2c_my.c: 321: if (i2c_start(1))
  2441                           
  2442                           ;i2c_my.c: 319: goto end;
  2443  025B  3001               	movlw	1
  2444  025C  22DD  118A         	fcall	_i2c_start
  2445  025E  3A00               	xorlw	0
  2446  025F  1D03               	btfss	3,2
  2447  0260  2A75               	goto	l3031
  2448                           
  2449                           ;i2c_my.c: 325: }
  2450                           ;i2c_my.c: 326: if (i2c_tx(0b10100001, 0))
  2451                           
  2452                           ;i2c_my.c: 324: goto end;
  2453  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0262  30A1               	movlw	161
  2455  0263  01A5               	clrf	i2c_tx@CareAboutAck
  2456  0264  2282  118A         	fcall	_i2c_tx
  2457  0266  3A00               	xorlw	0
  2458  0267  1D03               	btfss	3,2
  2459  0268  2A75               	goto	l3031
  2460                           
  2461                           ;i2c_my.c: 330: }
  2462                           ;i2c_my.c: 331: if (i2c_rx(0, d, 200))
  2463  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2464  026A  082B               	movf	RXbyte@d,w
  2465  026B  00A5               	movwf	i2c_rx@d
  2466  026C  30C8               	movlw	200
  2467  026D  00A6               	movwf	i2c_rx@ClkStrRetryTimes
  2468  026E  3000               	movlw	0
  2469  026F  2326  118A         	fcall	_i2c_rx
  2470                           
  2471                           ;i2c_my.c: 334: goto end;
  2472  0271  2A75               	goto	l3031
  2473  0272                     l666:	
  2474                           
  2475                           ;i2c_my.c: 338: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2476  0272  2A73               	nop2	;2 cycle nop
  2477  0273  2A74               	nop2	;2 cycle nop
  2478  0274  0000               	nop
  2479  0275                     l3031:	
  2480  0275  3000               	movlw	0
  2481  0276  22FD  118A         	fcall	_i2c_stop
  2482  0278  3A00               	xorlw	0
  2483  0279  1903               	skipnz
  2484  027A  2A7D               	goto	l3035
  2485  027B  0BAE               	decfsz	RXbyte@i,f
  2486  027C  2A72               	goto	l666
  2487  027D                     l3035:	
  2488                           
  2489                           ;i2c_my.c: 339: if (i == 0)
  2490  027D  08AE               	movf	RXbyte@i,f
  2491  027E  1D03               	skipz
  2492  027F  0008               	return
  2493                           
  2494                           ;i2c_my.c: 340: {
  2495                           ;i2c_my.c: 341: i2c_stop(1);
  2496  0280  3001               	movlw	1
  2497  0281  2AFD               	ljmp	_i2c_stop
  2498  0282                     __end_of_RXbyte:	
  2499  0282                     __ptext10:	
  2500 ;; *************** function _i2c_tx *****************
  2501 ;; Defined at:
  2502 ;;		line 116 in file "../../i2c/i2c_my.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  dt              1    wreg     unsigned char 
  2505 ;;  CareAboutAck    1    5[BANK0 ] unsigned char 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  dt              1    7[BANK0 ] unsigned char 
  2508 ;;  i               1    8[BANK0 ] unsigned char 
  2509 ;;  ClckStretchu    1    6[BANK0 ] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      unsigned char 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0
  2514 ;; Tracked objects:
  2515 ;;		On entry : 60/0
  2516 ;;		On exit  : 40/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2519 ;;      Params:         0       1       0       0
  2520 ;;      Locals:         0       3       0       0
  2521 ;;      Temps:          0       0       0       0
  2522 ;;      Totals:         0       4       0       0
  2523 ;;Total ram usage:        4 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    4
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_RXbyte
  2530 ;;		_TXNbytes
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _i2c_tx
  2536  0282                     _i2c_tx:	
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _i2c_tx: [wreg+status,2+status,0]
  2540                           ;i2c_tx@dt stored from wreg
  2541  0282  00A7               	movwf	i2c_tx@dt
  2542                           
  2543                           ;i2c_my.c: 120: unsigned char i;
  2544                           ;i2c_my.c: 121: unsigned char ClckStretchus;
  2545                           ;i2c_my.c: 122: PIR1bits.SSPIF = 0;
  2546  0283  118C               	bcf	12,3	;volatile
  2547                           
  2548                           ;i2c_my.c: 124: TRISBbits.TRISB6 = 0;
  2549  0284  1683               	bsf	3,5	;RP0=1, select bank1
  2550  0285  1306               	bcf	6,6	;volatile
  2551                           
  2552                           ;i2c_my.c: 125: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2553  0286  0000               	nop
  2554                           
  2555                           ;i2c_my.c: 127: for (i = 8; i; i--)
  2556  0287  3008               	movlw	8
  2557  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2559  028A  00A8               	movwf	i2c_tx@i
  2560  028B                     l596:	
  2561  028B  08A8               	movf	i2c_tx@i,f
  2562  028C  1903               	btfsc	3,2
  2563  028D  2AC5               	goto	l608
  2564                           
  2565                           ;i2c_my.c: 128: {
  2566                           ;i2c_my.c: 129: if (dt&0x80)
  2567  028E  1FA7               	btfss	i2c_tx@dt,7
  2568  028F  2A93               	goto	l598
  2569                           
  2570                           ;i2c_my.c: 130: TRISBbits.TRISB4 = 1;
  2571  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2572  0291  1606               	bsf	6,4	;volatile
  2573  0292  2A95               	goto	l599
  2574  0293                     l598:	
  2575                           
  2576                           ;i2c_my.c: 131: else
  2577                           ;i2c_my.c: 132: TRISBbits.TRISB4 = 0;
  2578  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0294  1206               	bcf	6,4	;volatile
  2580  0295                     l599:	
  2581                           
  2582                           ;i2c_my.c: 134: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2583  0295  0000               	nop
  2584                           
  2585                           ;i2c_my.c: 136: TRISBbits.TRISB6 = 1;
  2586  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2587  0297  1303               	bcf	3,6	;RP1=0, select bank1
  2588  0298  1706               	bsf	6,6	;volatile
  2589                           
  2590                           ;i2c_my.c: 137: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2591  0299  2A9A               	nop2	;2 cycle nop
  2592  029A  2A9B               	nop2	;2 cycle nop
  2593  029B  0000               	nop
  2594                           
  2595                           ;i2c_my.c: 139: for (ClckStretchus = 200; !PORTBbits.RB6 && ClckStretchus > 0; ClckStret
      +                          chus--)
  2596  029C  30C8               	movlw	200
  2597  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2598  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2599  029F  00A6               	movwf	i2c_tx@ClckStretchus
  2600  02A0  2AAC               	goto	l2831
  2601  02A1                     l2833:	
  2602  02A1  08A6               	movf	i2c_tx@ClckStretchus,f
  2603  02A2  1903               	btfsc	3,2
  2604  02A3  2AAE               	goto	l604
  2605                           
  2606                           ;i2c_my.c: 140: {
  2607                           ;i2c_my.c: 141: TRISBbits.TRISB6 = 1;
  2608  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2609  02A5  1706               	bsf	6,6	;volatile
  2610                           
  2611                           ;i2c_my.c: 142: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2612  02A6  2AA7               	nop2	;2 cycle nop
  2613  02A7  2AA8               	nop2	;2 cycle nop
  2614  02A8  0000               	nop
  2615  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2616  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2617  02AB  03A6               	decf	i2c_tx@ClckStretchus,f
  2618  02AC                     l2831:	
  2619  02AC  1F06               	btfss	6,6	;volatile
  2620  02AD  2AA1               	goto	l2833
  2621  02AE                     l604:	
  2622                           
  2623                           ;i2c_my.c: 143: }
  2624                           ;i2c_my.c: 144: if (!PORTBbits.RB6)
  2625  02AE  1B06               	btfsc	6,6	;volatile
  2626  02AF  2AB3               	goto	l605
  2627                           
  2628                           ;i2c_my.c: 145: {
  2629                           ;i2c_my.c: 146: TRISBbits.TRISB6 = 0;
  2630  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2631  02B1  1306               	bcf	6,6	;volatile
  2632                           
  2633                           ;i2c_my.c: 147: return (0xA);
  2634  02B2  340A               	retlw	10
  2635  02B3                     l605:	
  2636                           
  2637                           ;i2c_my.c: 148: }
  2638                           ;i2c_my.c: 150: if ((dt&0x80) && !PORTBbits.RB4)
  2639  02B3  1BA7               	btfsc	i2c_tx@dt,7
  2640  02B4  1A06               	btfsc	6,4	;volatile
  2641  02B5  2ABB               	goto	l607
  2642                           
  2643                           ;i2c_my.c: 151: {
  2644                           ;i2c_my.c: 152: TRISBbits.TRISB6 = 0;
  2645  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2646  02B7  1306               	bcf	6,6	;volatile
  2647                           
  2648                           ;i2c_my.c: 153: PIR1bits.SSPIF = 0;
  2649  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2650  02B9  118C               	bcf	12,3	;volatile
  2651                           
  2652                           ;i2c_my.c: 154: return (0xB);
  2653  02BA  340B               	retlw	11
  2654  02BB                     l607:	
  2655                           
  2656                           ;i2c_my.c: 155: }
  2657                           ;i2c_my.c: 157: TRISBbits.TRISB6 = 0;
  2658  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2659  02BC  1306               	bcf	6,6	;volatile
  2660                           
  2661                           ;i2c_my.c: 158: dt <<= 1;
  2662  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2663  02BE  1003               	clrc
  2664  02BF  0DA7               	rlf	i2c_tx@dt,f
  2665                           
  2666                           ;i2c_my.c: 159: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2667  02C0  0000               	nop
  2668  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2669  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2670  02C3  03A8               	decf	i2c_tx@i,f
  2671  02C4  2A8B               	goto	l596
  2672  02C5                     l608:	
  2673                           
  2674                           ;i2c_my.c: 160: }
  2675                           ;i2c_my.c: 161: TRISBbits.TRISB4 = 1;
  2676  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2677  02C6  1606               	bsf	6,4	;volatile
  2678                           
  2679                           ;i2c_my.c: 162: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2680  02C7  0000               	nop
  2681                           
  2682                           ;i2c_my.c: 163: TRISBbits.TRISB6 = 1;
  2683  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  2684  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  2685  02CA  1706               	bsf	6,6	;volatile
  2686                           
  2687                           ;i2c_my.c: 164: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2688  02CB  2ACC               	nop2	;2 cycle nop
  2689  02CC  2ACD               	nop2	;2 cycle nop
  2690  02CD  0000               	nop
  2691                           
  2692                           ;i2c_my.c: 165: i = (char)PORTBbits.RB4;
  2693  02CE  3000               	movlw	0
  2694  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2695  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2696  02D1  1A06               	btfsc	6,4	;volatile
  2697  02D2  3001               	movlw	1
  2698  02D3  00A8               	movwf	i2c_tx@i
  2699                           
  2700                           ;i2c_my.c: 166: TRISBbits.TRISB6 = 0;
  2701  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  2702  02D5  1306               	bcf	6,6	;volatile
  2703                           
  2704                           ;i2c_my.c: 167: PIR1bits.SSPIF = 0;
  2705  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2706  02D7  118C               	bcf	12,3	;volatile
  2707                           
  2708                           ;i2c_my.c: 168: if (CareAboutAck)
  2709  02D8  0825               	movf	i2c_tx@CareAboutAck,w
  2710  02D9  1903               	btfsc	3,2
  2711  02DA  3400               	retlw	0
  2712                           
  2713                           ;i2c_my.c: 169: {
  2714                           ;i2c_my.c: 170: return (i);
  2715  02DB  0828               	movf	i2c_tx@i,w
  2716  02DC  0008               	return
  2717  02DD                     __end_of_i2c_tx:	
  2718                           ;i2c_my.c: 172: else
  2719                           ;i2c_my.c: 173: {
  2720                           ;i2c_my.c: 174: return 0;
  2721                           
  2722  02DD                     __ptext12:	
  2723 ;; *************** function _i2c_start *****************
  2724 ;; Defined at:
  2725 ;;		line 61 in file "../../i2c/i2c_my.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  force           1    wreg     unsigned char 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  force           1    5[BANK0 ] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      unsigned char 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0
  2734 ;; Tracked objects:
  2735 ;;		On entry : 40/0
  2736 ;;		On exit  : 40/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2739 ;;      Params:         0       0       0       0
  2740 ;;      Locals:         0       1       0       0
  2741 ;;      Temps:          0       0       0       0
  2742 ;;      Totals:         0       1       0       0
  2743 ;;Total ram usage:        1 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    4
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_RXbyte
  2750 ;;		_TXNbytes
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _i2c_start
  2756  02DD                     _i2c_start:	
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _i2c_start: [wreg+status,2+status,0]
  2760                           ;i2c_start@force stored from wreg
  2761  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2762  02DE  00A5               	movwf	i2c_start@force
  2763                           
  2764                           ;i2c_my.c: 64: if (force || SSPSTATbits.P || !(SSPSTATbits.P || SSPSTATbits.S))
  2765  02DF  08A5               	movf	i2c_start@force,f
  2766  02E0  1D03               	skipz
  2767  02E1  2AE8               	goto	l582
  2768  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2769  02E3  1A14               	btfsc	20,4	;volatile
  2770  02E4  2AE8               	goto	l582
  2771  02E5  1E14               	btfss	20,4	;volatile
  2772  02E6  1994               	btfsc	20,3	;volatile
  2773  02E7  3401               	retlw	1
  2774  02E8                     l582:	
  2775                           
  2776                           ;i2c_my.c: 65: {
  2777                           ;i2c_my.c: 67: TRISBbits.TRISB4 = 1;
  2778  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2779  02E9  1606               	bsf	6,4	;volatile
  2780                           
  2781                           ;i2c_my.c: 68: TRISBbits.TRISB6 = 1;
  2782  02EA  1706               	bsf	6,6	;volatile
  2783                           
  2784                           ;i2c_my.c: 69: _delay((unsigned long)((6)*(4000000/4000000.0)));
  2785  02EB  2AEC               	nop2	;2 cycle nop
  2786  02EC  2AED               	nop2	;2 cycle nop
  2787  02ED  2AEE               	nop2	;2 cycle nop
  2788                           
  2789                           ;i2c_my.c: 70: TRISBbits.TRISB4 = 0b0;
  2790  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2791  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2792  02F0  1206               	bcf	6,4	;volatile
  2793                           
  2794                           ;i2c_my.c: 71: PORTBbits.RB4 = 0;
  2795  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2796  02F2  1206               	bcf	6,4	;volatile
  2797                           
  2798                           ;i2c_my.c: 72: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2799  02F3  2AF4               	nop2	;2 cycle nop
  2800  02F4  2AF5               	nop2	;2 cycle nop
  2801  02F5  0000               	nop
  2802                           
  2803                           ;i2c_my.c: 73: TRISBbits.TRISB6 = 0b0;
  2804  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2805  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2806  02F8  1306               	bcf	6,6	;volatile
  2807                           
  2808                           ;i2c_my.c: 74: PORTBbits.RB6 = 0;
  2809  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2810  02FA  1306               	bcf	6,6	;volatile
  2811                           
  2812                           ;i2c_my.c: 75: PIR1bits.SSPIF = 0;
  2813  02FB  118C               	bcf	12,3	;volatile
  2814                           
  2815                           ;i2c_my.c: 76: return (0);
  2816  02FC  3400               	retlw	0
  2817  02FD                     __end_of_i2c_start:	
  2818                           ;i2c_my.c: 77: }
  2819                           ;i2c_my.c: 78: return(1);
  2820                           
  2821  02FD                     __ptext11:	
  2822 ;; *************** function _i2c_stop *****************
  2823 ;; Defined at:
  2824 ;;		line 82 in file "../../i2c/i2c_my.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  Force           1    wreg     unsigned char 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  Force           1    5[BANK0 ] unsigned char 
  2829 ;;  sttries         1    6[BANK0 ] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      unsigned char 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 60/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2839 ;;      Params:         0       0       0       0
  2840 ;;      Locals:         0       2       0       0
  2841 ;;      Temps:          0       0       0       0
  2842 ;;      Totals:         0       2       0       0
  2843 ;;Total ram usage:        2 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    4
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_RXbyte
  2850 ;;		_TXNbytes
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function _i2c_stop
  2856  02FD                     _i2c_stop:	
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in _i2c_stop: [wreg+status,2+status,0]
  2860                           ;i2c_stop@Force stored from wreg
  2861  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2862  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2863  02FF  00A5               	movwf	i2c_stop@Force
  2864                           
  2865                           ;i2c_my.c: 84: char sttries = 3;
  2866  0300  3003               	movlw	3
  2867  0301  00A6               	movwf	i2c_stop@sttries
  2868                           
  2869                           ;i2c_my.c: 85: PIR1bits.SSPIF = 0;
  2870  0302  118C               	bcf	12,3	;volatile
  2871                           
  2872                           ;i2c_my.c: 87: TRISBbits.TRISB4 = 0;
  2873  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2874  0304  1206               	bcf	6,4	;volatile
  2875                           
  2876                           ;i2c_my.c: 88: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2877  0305  0000               	nop
  2878                           
  2879                           ;i2c_my.c: 89: TRISBbits.TRISB6 = 1;
  2880  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2881  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2882  0308  1706               	bsf	6,6	;volatile
  2883                           
  2884                           ;i2c_my.c: 91: while (PORTBbits.RB6 == 0 && sttries > 0)
  2885  0309  2B11               	goto	l2799
  2886  030A                     l2801:	
  2887  030A  08A6               	movf	i2c_stop@sttries,f
  2888  030B  1903               	btfsc	3,2
  2889  030C  2B15               	goto	l590
  2890                           
  2891                           ;i2c_my.c: 92: {
  2892                           ;i2c_my.c: 93: sttries--;
  2893  030D  03A6               	decf	i2c_stop@sttries,f
  2894                           
  2895                           ;i2c_my.c: 94: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2896  030E  2B0F               	nop2	;2 cycle nop
  2897  030F  2B10               	nop2	;2 cycle nop
  2898  0310  0000               	nop
  2899  0311                     l2799:	
  2900  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0313  1F06               	btfss	6,6	;volatile
  2903  0314  2B0A               	goto	l2801
  2904  0315                     l590:	
  2905                           
  2906                           ;i2c_my.c: 95: }
  2907                           ;i2c_my.c: 96: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2908  0315  2B16               	nop2	;2 cycle nop
  2909  0316  2B17               	nop2	;2 cycle nop
  2910  0317  0000               	nop
  2911                           
  2912                           ;i2c_my.c: 98: if (PORTBbits.RB6)
  2913  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2915  031A  1F06               	btfss	6,6	;volatile
  2916  031B  2B1E               	goto	l2809
  2917                           
  2918                           ;i2c_my.c: 99: {
  2919                           ;i2c_my.c: 100: TRISBbits.TRISB4 = 1;
  2920  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2921                           
  2922                           ;i2c_my.c: 101: PIR1bits.SSPIF = 0;
  2923                           
  2924                           ;i2c_my.c: 102: return (0);
  2925  031D  2BD1               	ljmp	PL30	;call to abstracted procedure
  2926  031E                     l2809:	
  2927                           
  2928                           ;i2c_my.c: 103: }
  2929                           ;i2c_my.c: 104: if (Force)
  2930  031E  0825               	movf	i2c_stop@Force,w
  2931  031F  1903               	btfsc	3,2
  2932  0320  2B24               	goto	L30
  2933                           
  2934                           ;i2c_my.c: 105: {
  2935                           ;i2c_my.c: 106: TRISBbits.TRISB4 = 1;
  2936  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2937  0322  1606               	bsf	6,4	;volatile
  2938                           
  2939                           ;i2c_my.c: 107: PIR1bits.SSPIF = 0;
  2940  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2941  0324                     L30:	
  2942  0324  118C               	bcf	12,3	;volatile
  2943                           
  2944                           ;i2c_my.c: 108: return (1);
  2945  0325  3401               	retlw	1
  2946  0326                     __end_of_i2c_stop:	
  2947                           ;i2c_my.c: 109: }
  2948                           ;i2c_my.c: 110: PIR1bits.SSPIF = 0;
  2949                           
  2950  0326                     __ptext13:	
  2951 ;; *************** function _i2c_rx *****************
  2952 ;; Defined at:
  2953 ;;		line 180 in file "../../i2c/i2c_my.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  ack             1    wreg     unsigned char 
  2956 ;;  d               1    5[BANK0 ] PTR unsigned char 
  2957 ;;		 -> SearchStop@d(1), 
  2958 ;;  ClkStrRetryT    1    6[BANK0 ] unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  ack             1    7[BANK0 ] unsigned char 
  2961 ;;  j               1    9[BANK0 ] unsigned char 
  2962 ;;  i               1    8[BANK0 ] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      unsigned char 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 60/0
  2969 ;;		On exit  : 60/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2972 ;;      Params:         0       2       0       0
  2973 ;;      Locals:         0       3       0       0
  2974 ;;      Temps:          0       0       0       0
  2975 ;;      Totals:         0       5       0       0
  2976 ;;Total ram usage:        5 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    4
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_RXbyte
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function _i2c_rx
  2988  0326                     _i2c_rx:	
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _i2c_rx: [wreg-fsr0h+status,2+status,0]
  2992                           ;i2c_rx@ack stored from wreg
  2993  0326  00A7               	movwf	i2c_rx@ack
  2994                           
  2995                           ;i2c_my.c: 182: unsigned char i, j;
  2996                           ;i2c_my.c: 183: *d = 0;
  2997  0327  0825               	movf	i2c_rx@d,w
  2998  0328  0084               	movwf	4
  2999  0329  1383               	bcf	3,7	;select IRP bank0
  3000  032A  0180               	clrf	0
  3001                           
  3002                           ;i2c_my.c: 184: TRISBbits.TRISB6 = 0;
  3003  032B  1683               	bsf	3,5	;RP0=1, select bank1
  3004  032C  1306               	bcf	6,6	;volatile
  3005                           
  3006                           ;i2c_my.c: 185: TRISBbits.TRISB4 = 1;
  3007  032D  1606               	bsf	6,4	;volatile
  3008                           
  3009                           ;i2c_my.c: 186: for(i = 0; i < 8; i++)
  3010  032E  1283               	bcf	3,5	;RP0=0, select bank0
  3011  032F  01A8               	clrf	i2c_rx@i
  3012  0330                     l613:	
  3013                           
  3014                           ;i2c_my.c: 187: {
  3015                           ;i2c_my.c: 188: _delay((unsigned long)((6)*(4000000/4000000.0)));
  3016  0330  2B31               	nop2	;2 cycle nop
  3017  0331  2B32               	nop2	;2 cycle nop
  3018  0332  2B33               	nop2	;2 cycle nop
  3019                           
  3020                           ;i2c_my.c: 189: *d <<= 1;
  3021  0333  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0334  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0335  0825               	movf	i2c_rx@d,w
  3024  0336  0084               	movwf	4
  3025  0337  1383               	bcf	3,7	;select IRP bank0
  3026  0338  1003               	clrc
  3027  0339  0D80               	rlf	0,f
  3028                           
  3029                           ;i2c_my.c: 190: j = ClkStrRetryTimes;
  3030  033A  0826               	movf	i2c_rx@ClkStrRetryTimes,w
  3031  033B  00A9               	movwf	i2c_rx@j
  3032  033C  2B40               	goto	l2885
  3033  033D                     l2893:	
  3034  033D  08A9               	movf	i2c_rx@j,f
  3035  033E  1903               	btfsc	3,2
  3036  033F  2B4A               	goto	l2895
  3037  0340                     l2885:	
  3038                           
  3039                           ;i2c_my.c: 192: TRISBbits.TRISB6 = 1;
  3040  0340  1683               	bsf	3,5	;RP0=1, select bank1
  3041  0341  1706               	bsf	6,6	;volatile
  3042                           
  3043                           ;i2c_my.c: 193: _delay((unsigned long)((5)*(4000000/4000000.0)));
  3044  0342  2B43               	nop2	;2 cycle nop
  3045  0343  2B44               	nop2	;2 cycle nop
  3046  0344  0000               	nop
  3047                           
  3048                           ;i2c_my.c: 194: j--;
  3049  0345  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0346  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0347  03A9               	decf	i2c_rx@j,f
  3052                           
  3053                           ;i2c_my.c: 195: }
  3054                           ;i2c_my.c: 196: while(PORTBbits.RB6 == 0 && j != 0);
  3055  0348  1F06               	btfss	6,6	;volatile
  3056  0349  2B3D               	goto	l2893
  3057  034A                     l2895:	
  3058                           
  3059                           ;i2c_my.c: 198: if (j == 0)
  3060  034A  08A9               	movf	i2c_rx@j,f
  3061  034B  1D03               	skipz
  3062  034C  2B4F               	goto	l619
  3063                           
  3064                           ;i2c_my.c: 199: {
  3065                           ;i2c_my.c: 200: PIR1bits.SSPIF = 0;
  3066  034D  118C               	bcf	12,3	;volatile
  3067                           
  3068                           ;i2c_my.c: 201: return (0xA);
  3069  034E  340A               	retlw	10
  3070  034F                     l619:	
  3071                           
  3072                           ;i2c_my.c: 202: }
  3073                           ;i2c_my.c: 204: if (PORTBbits.RB4)
  3074  034F  1E06               	btfss	6,4	;volatile
  3075  0350  2B55               	goto	l2905
  3076                           
  3077                           ;i2c_my.c: 205: *d |= 1;
  3078  0351  0825               	movf	i2c_rx@d,w
  3079  0352  0084               	movwf	4
  3080  0353  1383               	bcf	3,7	;select IRP bank0
  3081  0354  1400               	bsf	0,0
  3082  0355                     l2905:	
  3083                           
  3084                           ;i2c_my.c: 206: TRISBbits.TRISB6 = 0;
  3085  0355  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0356  1306               	bcf	6,6	;volatile
  3087  0357  1283               	bcf	3,5	;RP0=0, select bank0
  3088  0358  3008               	movlw	8
  3089  0359  0AA8               	incf	i2c_rx@i,f
  3090  035A  0228               	subwf	i2c_rx@i,w
  3091  035B  1C03               	skipc
  3092  035C  2B30               	goto	l613
  3093                           
  3094                           ;i2c_my.c: 207: }
  3095                           ;i2c_my.c: 208: _delay((unsigned long)((6)*(4000000/4000000.0)));
  3096  035D  2B5E               	nop2	;2 cycle nop
  3097  035E  2B5F               	nop2	;2 cycle nop
  3098  035F  2B60               	nop2	;2 cycle nop
  3099                           
  3100                           ;i2c_my.c: 209: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3101  0360  0000               	nop
  3102                           
  3103                           ;i2c_my.c: 210: if (ack)
  3104  0361  1283               	bcf	3,5	;RP0=0, select bank0
  3105  0362  1303               	bcf	3,6	;RP1=0, select bank0
  3106  0363  0827               	movf	i2c_rx@ack,w
  3107  0364  1903               	btfsc	3,2
  3108  0365  2B69               	goto	l622
  3109                           
  3110                           ;i2c_my.c: 211: TRISBbits.TRISB4 = 0;
  3111  0366  1683               	bsf	3,5	;RP0=1, select bank1
  3112  0367  1206               	bcf	6,4	;volatile
  3113  0368  2B6B               	goto	l623
  3114  0369                     l622:	
  3115                           
  3116                           ;i2c_my.c: 212: else
  3117                           ;i2c_my.c: 213: TRISBbits.TRISB4 = 1;
  3118  0369  1683               	bsf	3,5	;RP0=1, select bank1
  3119  036A  1606               	bsf	6,4	;volatile
  3120  036B                     l623:	
  3121                           
  3122                           ;i2c_my.c: 214: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3123  036B  0000               	nop
  3124                           
  3125                           ;i2c_my.c: 215: TRISBbits.TRISB6 = 1;
  3126  036C  1683               	bsf	3,5	;RP0=1, select bank1
  3127  036D  1303               	bcf	3,6	;RP1=0, select bank1
  3128  036E  1706               	bsf	6,6	;volatile
  3129                           
  3130                           ;i2c_my.c: 216: _delay((unsigned long)((5)*(4000000/4000000.0)));
  3131  036F  2B70               	nop2	;2 cycle nop
  3132  0370  2B71               	nop2	;2 cycle nop
  3133  0371  0000               	nop
  3134                           
  3135                           ;i2c_my.c: 217: TRISBbits.TRISB6 = 0;
  3136  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3137  0373  1303               	bcf	3,6	;RP1=0, select bank1
  3138  0374  1306               	bcf	6,6	;volatile
  3139                           
  3140                           ;i2c_my.c: 218: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3141  0375  0000               	nop
  3142                           
  3143                           ;i2c_my.c: 219: TRISBbits.TRISB4 = 1;
  3144  0376  1683               	bsf	3,5	;RP0=1, select bank1
  3145  0377  1303               	bcf	3,6	;RP1=0, select bank1
  3146                           
  3147                           ;i2c_my.c: 220: PIR1bits.SSPIF = 0;
  3148                           
  3149                           ;i2c_my.c: 221: return 0;
  3150  0378  2BD1               	ljmp	PL30	;call to abstracted procedure
  3151  0379                     __end_of_i2c_rx:	
  3152  0379                     PL2:	
  3153  0379  1003               	clrc
  3154  037A  0CB5               	rrf	??_WriteLog,f
  3155  037B  1003               	clrc
  3156  037C  0CB5               	rrf	??_WriteLog,f
  3157  037D  1003               	clrc
  3158  037E  0CB5               	rrf	??_WriteLog,f
  3159  037F  0860               	movf	_hour,w
  3160  0380  00B6               	movwf	??_WriteLog+1
  3161  0381  1003               	clrc
  3162  0382  0DB6               	rlf	??_WriteLog+1,f
  3163  0383  1003               	clrc
  3164  0384  0DB6               	rlf	??_WriteLog+1,f
  3165  0385  1003               	clrc
  3166  0386  0D36               	rlf	??_WriteLog+1,w
  3167  0387  0435               	iorwf	??_WriteLog,w
  3168  0388  00BD               	movwf	WriteLog@d+1
  3169  0389  0008               	return
  3170  038A                     __end_ofPL2:	
  3171  038A                     PL4:	
  3172  038A  0435               	iorwf	??_WriteLog,w
  3173  038B  00BD               	movwf	WriteLog@d+1
  3174  038C  3007               	movlw	7
  3175  038D  0549               	andwf	_BinSt,w
  3176  038E  00B5               	movwf	??_WriteLog
  3177  038F  084B               	movf	_EngSt,w
  3178  0390  3907               	andlw	7
  3179  0391  00B6               	movwf	??_WriteLog+1
  3180  0392  1003               	clrc
  3181  0393  0DB6               	rlf	??_WriteLog+1,f
  3182  0394  1003               	clrc
  3183  0395  0DB6               	rlf	??_WriteLog+1,f
  3184  0396  1003               	clrc
  3185  0397  0DB6               	rlf	??_WriteLog+1,f
  3186  0398  0008               	return
  3187  0399                     __end_ofPL4:	
  3188  0399                     PL8:	
  3189  0399  0733               	addwf	TXNbytes@i,w
  3190  039A  00AC               	movwf	??_TXNbytes
  3191  039B  01AD               	clrf	??_TXNbytes+1
  3192  039C  0DAD               	rlf	??_TXNbytes+1,f
  3193  039D  3EFF               	addlw	255
  3194  039E  00AE               	movwf	??_TXNbytes+2
  3195  039F  082D               	movf	??_TXNbytes+1,w
  3196  03A0  1803               	skipnc
  3197  03A1  3E01               	addlw	1
  3198  03A2  3EFF               	addlw	255
  3199  03A3  00AF               	movwf	??_TXNbytes+3
  3200  03A4  0008               	return
  3201  03A5                     __end_ofPL8:	
  3202  03A5                     PL10:	
  3203  03A5  0C07               	rrf	7,w	;volatile
  3204  03A6  00B5               	movwf	??_WriteLog
  3205  03A7  0CB5               	rrf	??_WriteLog,f
  3206  03A8  0C35               	rrf	??_WriteLog,w
  3207  03A9  3901               	andlw	1
  3208  03AA  00B6               	movwf	??_WriteLog+1
  3209  03AB  0E36               	swapf	??_WriteLog+1,w
  3210  03AC  39F0               	andlw	240
  3211  03AD  00B6               	movwf	??_WriteLog+1
  3212  03AE  0008               	return
  3213  03AF                     __end_ofPL10:	
  3214  03AF                     PL12:	
  3215  03AF  1003               	clrc
  3216  03B0  0CB5               	rrf	??_WriteLog,f
  3217  03B1  0535               	andwf	??_WriteLog,w
  3218  03B2  00B6               	movwf	??_WriteLog+1
  3219  03B3  084B               	movf	_EngSt,w
  3220  03B4  3907               	andlw	7
  3221  03B5  00B7               	movwf	??_WriteLog+2
  3222  03B6  1003               	clrc
  3223  03B7  0DB7               	rlf	??_WriteLog+2,f
  3224  03B8  0008               	return
  3225  03B9                     __end_ofPL12:	
  3226  03B9                     PL14:	
  3227  03B9  0AB1               	incf	SearchStop@addrls,f
  3228  03BA  1803               	btfsc	3,0	;volatile
  3229  03BB  0AB0               	incf	SearchStop@addrhs,f
  3230  03BC  0831               	movf	SearchStop@addrls,w
  3231  03BD  00AA               	movwf	RXbyte@addrL
  3232  03BE  3032               	movlw	SearchStop@d& (0+255)
  3233  03BF  00AB               	movwf	RXbyte@d
  3234  03C0  0830               	movf	SearchStop@addrhs,w
  3235  03C1  0008               	return
  3236  03C2                     __end_ofPL14:	
  3237  03C2                     PL16:	
  3238  03C2  00B5               	movwf	??_WriteLog
  3239  03C3  1003               	clrc
  3240  03C4  0CB5               	rrf	??_WriteLog,f
  3241  03C5  1003               	clrc
  3242  03C6  0CB5               	rrf	??_WriteLog,f
  3243  03C7  0008               	return
  3244  03C8                     __end_ofPL16:	
  3245  03C8                     PL18:	
  3246  03C8  025B               	subwf	_TEB,w
  3247  03C9  3000               	movlw	0
  3248  03CA  1803               	skipnc
  3249  03CB  3001               	movlw	1
  3250  03CC  00B6               	movwf	??_WriteLog+1
  3251  03CD  0E36               	swapf	??_WriteLog+1,w
  3252  03CE  39F0               	andlw	240
  3253  03CF  0435               	iorwf	??_WriteLog,w
  3254  03D0  0008               	return
  3255  03D1                     __end_ofPL18:	
  3256  03D1                     PL30:	
  3257  03D1  1606               	bsf	6,4	;volatile
  3258  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3259  03D3  118C               	bcf	12,3	;volatile
  3260  03D4  3400               	retlw	0
  3261  03D5                     __end_ofPL30:	
  3262                           
  3263                           	psect	text3
  3264  0D44                     __ptext3:	
  3265 ;; *************** function _TmrRoutines *****************
  3266 ;; Defined at:
  3267 ;;		line 836 in file "newmain.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  pBINtmr         1    wreg     PTR unsigned char 
  3270 ;;		 -> main@BINtmr(1), 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  pBINtmr         1   12[BANK0 ] PTR unsigned char 
  3273 ;;		 -> main@BINtmr(1), 
  3274 ;;  WrLogEvent      1   11[BANK0 ] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      unsigned char 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 60/0
  3281 ;;		On exit  : 60/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3284 ;;      Params:         0       0       0       0
  3285 ;;      Locals:         0       2       0       0
  3286 ;;      Temps:          0       3       0       0
  3287 ;;      Totals:         0       5       0       0
  3288 ;;Total ram usage:        5 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    6
  3291 ;; This function calls:
  3292 ;;		_I2CReset
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _TmrRoutines
  3300  0D44                     _TmrRoutines:	
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _TmrRoutines: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3304                           ;TmrRoutines@pBINtmr stored from wreg
  3305  0D44  00AC               	movwf	TmrRoutines@pBINtmr
  3306                           
  3307                           ;newmain.c: 838: unsigned char WrLogEvent = 0xFF;
  3308  0D45  30FF               	movlw	255
  3309  0D46  00AB               	movwf	TmrRoutines@WrLogEvent
  3310                           
  3311                           ;newmain.c: 840: if (!(IntSvcSync & 0b00000001))
  3312  0D47  1C4C               	btfss	_IntSvcSync,0
  3313                           
  3314                           ;newmain.c: 841: return (WrLogEvent);
  3315  0D48  34FF               	retlw	255
  3316                           
  3317                           ;newmain.c: 843: if (sec > 59)
  3318  0D49  303C               	movlw	60
  3319  0D4A  025A               	subwf	_sec,w
  3320  0D4B  1C03               	skipc
  3321  0D4C  2D74               	goto	l3845
  3322  0D4D  303C               	movlw	60
  3323                           
  3324                           ;newmain.c: 844: {
  3325                           ;newmain.c: 845: min++;
  3326  0D4E  0AD9               	incf	_min,f
  3327                           
  3328                           ;newmain.c: 846: sec -= 60;
  3329  0D4F  02DA               	subwf	_sec,f
  3330                           
  3331                           ;newmain.c: 847: if (min == 60)
  3332  0D50  0859               	movf	_min,w
  3333  0D51  3A3C               	xorlw	60
  3334  0D52  1D03               	skipz
  3335  0D53  2D5E               	goto	l3833
  3336                           
  3337                           ;newmain.c: 848: {
  3338                           ;newmain.c: 849: hour++;
  3339  0D54  0AE0               	incf	_hour,f
  3340                           
  3341                           ;newmain.c: 850: min = 0;
  3342  0D55  01D9               	clrf	_min
  3343                           
  3344                           ;newmain.c: 852: if (hour == 24)
  3345  0D56  0860               	movf	_hour,w
  3346  0D57  3A18               	xorlw	24
  3347  0D58  1D03               	skipz
  3348  0D59  2D5C               	goto	l3829
  3349                           
  3350                           ;newmain.c: 853: {
  3351                           ;newmain.c: 854: day++;
  3352  0D5A  0AD4               	incf	_day,f
  3353                           
  3354                           ;newmain.c: 855: hour = 0;
  3355  0D5B  01E0               	clrf	_hour
  3356  0D5C                     l3829:	
  3357                           
  3358                           ;newmain.c: 856: }
  3359                           ;newmain.c: 857: if (hour & 0b00000001)
  3360  0D5C  1860               	btfsc	_hour,0
  3361                           
  3362                           ;newmain.c: 858: WrLogEvent = 0;
  3363  0D5D  01AB               	clrf	TmrRoutines@WrLogEvent
  3364  0D5E                     l3833:	
  3365                           
  3366                           ;newmain.c: 859: }
  3367                           ;newmain.c: 862: if (BinSt == 0x13)
  3368  0D5E  0849               	movf	_BinSt,w
  3369  0D5F  3A13               	xorlw	19
  3370  0D60  1D03               	skipz
  3371  0D61  2D70               	goto	l3843
  3372                           
  3373                           ;newmain.c: 863: {
  3374                           ;newmain.c: 864: if (*pBINtmr == 6)
  3375  0D62  082C               	movf	TmrRoutines@pBINtmr,w
  3376  0D63  0084               	movwf	4
  3377  0D64  1383               	bcf	3,7	;select IRP bank0
  3378  0D65  0800               	movf	0,w
  3379  0D66  3A06               	xorlw	6
  3380  0D67  1D03               	skipz
  3381  0D68  2D6E               	goto	l3841
  3382                           
  3383                           ;newmain.c: 865: {
  3384                           ;newmain.c: 866: *pBINtmr = 0;
  3385  0D69  082C               	movf	TmrRoutines@pBINtmr,w
  3386  0D6A  0084               	movwf	4
  3387  0D6B  0180               	clrf	0
  3388                           
  3389                           ;newmain.c: 867: WrLogEvent = 0;
  3390  0D6C  01AB               	clrf	TmrRoutines@WrLogEvent
  3391                           
  3392                           ;newmain.c: 868: }
  3393  0D6D  2D74               	goto	l3845
  3394  0D6E                     l3841:	
  3395                           
  3396                           ;newmain.c: 869: else
  3397                           ;newmain.c: 870: *pBINtmr++;
  3398  0D6E  0AAC               	incf	TmrRoutines@pBINtmr,f
  3399  0D6F  2D74               	goto	l3845
  3400  0D70                     l3843:	
  3401                           
  3402                           ;newmain.c: 872: else
  3403                           ;newmain.c: 873: *pBINtmr = 0;
  3404  0D70  082C               	movf	TmrRoutines@pBINtmr,w
  3405  0D71  0084               	movwf	4
  3406  0D72  1383               	bcf	3,7	;select IRP bank0
  3407  0D73  0180               	clrf	0
  3408  0D74                     l3845:	
  3409                           
  3410                           ;newmain.c: 875: }
  3411                           ;newmain.c: 880: if (i2cHoldTmr != 0xFF)
  3412  0D74  0857               	movf	_i2cHoldTmr,w
  3413  0D75  3AFF               	xorlw	255
  3414  0D76  1903               	skipnz
  3415  0D77  2D7A               	goto	l3849
  3416                           
  3417                           ;newmain.c: 881: {
  3418                           ;newmain.c: 882: i2cHoldTmr--;
  3419  0D78  03D7               	decf	_i2cHoldTmr,f
  3420                           
  3421                           ;newmain.c: 883: }
  3422  0D79  2E65               	goto	l351
  3423  0D7A                     l3849:	
  3424                           
  3425                           ;newmain.c: 884: else
  3426                           ;newmain.c: 885: {
  3427                           ;newmain.c: 887: I2CReset();
  3428  0D7A  2667  158A         	fcall	_I2CReset
  3429                           
  3430                           ;newmain.c: 891: if (NewBinTmr != 0xFF)
  3431  0D7C  0865               	movf	_NewBinTmr,w
  3432  0D7D  3AFF               	xorlw	255
  3433  0D7E  1903               	skipnz
  3434  0D7F  2DA8               	goto	l352
  3435                           
  3436                           ;newmain.c: 892: {
  3437                           ;newmain.c: 893: NewBinTmr--;
  3438  0D80  0BE5               	decfsz	_NewBinTmr,f
  3439                           
  3440                           ;newmain.c: 895: if (NewBinTmr == 0)
  3441  0D81  2DA8               	goto	l352
  3442  0D82  2D92               	goto	l3873
  3443  0D83                     l3857:	
  3444                           
  3445                           ;newmain.c: 900: BinSt = 0x81;
  3446  0D83  3081               	movlw	129
  3447  0D84  2D90               	goto	L18
  3448  0D85                     l3859:	
  3449                           ;newmain.c: 901: break;
  3450                           
  3451                           
  3452                           ;newmain.c: 903: BinSt = 0x84;
  3453  0D85  3084               	movlw	132
  3454  0D86  2D90               	goto	L18
  3455  0D87                     l3861:	
  3456                           ;newmain.c: 904: break;
  3457                           
  3458                           
  3459                           ;newmain.c: 906: BinSt = 0x83;
  3460  0D87  3083               	movlw	131
  3461  0D88  2D90               	goto	L18
  3462  0D89                     l3863:	
  3463                           ;newmain.c: 907: break;
  3464                           
  3465                           
  3466                           ;newmain.c: 909: BinSt = 0x82;
  3467  0D89  3082               	movlw	130
  3468  0D8A  2D90               	goto	L18
  3469  0D8B                     l3865:	
  3470                           ;newmain.c: 910: break;
  3471                           
  3472                           
  3473                           ;newmain.c: 912: BinSt = 0x85;
  3474  0D8B  3085               	movlw	133
  3475  0D8C  2D90               	goto	L18
  3476  0D8D                     l3867:	
  3477                           ;newmain.c: 913: break;
  3478                           
  3479                           
  3480                           ;newmain.c: 915: BinSt = 0x87;
  3481  0D8D  3087               	movlw	135
  3482  0D8E  2D90               	goto	L18
  3483  0D8F                     l3869:	
  3484                           ;newmain.c: 916: break;
  3485                           
  3486                           
  3487                           ;newmain.c: 918: BinSt = 0x80;
  3488  0D8F  3080               	movlw	128
  3489  0D90                     L18:	
  3490  0D90  00C9               	movwf	_BinSt
  3491                           
  3492                           ;newmain.c: 919: break;
  3493  0D91  2DA6               	goto	l3875
  3494  0D92                     l3873:	
  3495  0D92  0849               	movf	_BinSt,w
  3496                           
  3497                           ; Switch size 1, requested type "space"
  3498                           ; Number of cases is 6, Range of values is 0 to 21
  3499                           ; switch strategies available:
  3500                           ; Name         Instructions Cycles
  3501                           ; simple_byte           19    10 (average)
  3502                           ; direct_byte           51     7 (fixed)
  3503                           ; jumptable            260     6 (fixed)
  3504                           ;	Chosen strategy is simple_byte
  3505  0D93  3A00               	xorlw	0	; case 0
  3506  0D94  1903               	skipnz
  3507  0D95  2D8D               	goto	l3867
  3508  0D96  3A11               	xorlw	17	; case 17
  3509  0D97  1903               	skipnz
  3510  0D98  2D83               	goto	l3857
  3511  0D99  3A03               	xorlw	3	; case 18
  3512  0D9A  1903               	skipnz
  3513  0D9B  2D85               	goto	l3859
  3514  0D9C  3A01               	xorlw	1	; case 19
  3515  0D9D  1903               	skipnz
  3516  0D9E  2D87               	goto	l3861
  3517  0D9F  3A07               	xorlw	7	; case 20
  3518  0DA0  1903               	skipnz
  3519  0DA1  2D89               	goto	l3863
  3520  0DA2  3A01               	xorlw	1	; case 21
  3521  0DA3  1903               	skipnz
  3522  0DA4  2D8B               	goto	l3865
  3523  0DA5  2D8F               	goto	l3869
  3524  0DA6                     l3875:	
  3525                           
  3526                           ;newmain.c: 921: NewBinTmr = 0xFF;
  3527  0DA6  30FF               	movlw	255
  3528  0DA7  00E5               	movwf	_NewBinTmr
  3529  0DA8                     l352:	
  3530                           
  3531                           ;newmain.c: 922: }
  3532                           ;newmain.c: 923: }
  3533                           ;newmain.c: 924: if (NewASRTmr != 0xFF)
  3534  0DA8  0864               	movf	_NewASRTmr,w
  3535  0DA9  3AFF               	xorlw	255
  3536  0DAA  1903               	skipnz
  3537  0DAB  2DEA               	goto	l363
  3538                           
  3539                           ;newmain.c: 925: {
  3540                           ;newmain.c: 926: NewASRTmr--;
  3541  0DAC  03E4               	decf	_NewASRTmr,f
  3542                           
  3543                           ;newmain.c: 928: if (EngSt == 0)
  3544  0DAD  08CB               	movf	_EngSt,f
  3545  0DAE  1D03               	skipz
  3546  0DAF  2DB4               	goto	l3881
  3547                           
  3548                           ;newmain.c: 929: {
  3549                           ;newmain.c: 930: EngSt = 0xC6;
  3550  0DB0  30C6               	movlw	198
  3551  0DB1  00CB               	movwf	_EngSt
  3552                           
  3553                           ;newmain.c: 931: NewASRTmr = 0xFF;
  3554  0DB2  30FF               	movlw	255
  3555  0DB3  00E4               	movwf	_NewASRTmr
  3556  0DB4                     l3881:	
  3557                           
  3558                           ;newmain.c: 932: }
  3559                           ;newmain.c: 934: if (NewASRTmr == 0)
  3560  0DB4  08E4               	movf	_NewASRTmr,f
  3561  0DB5  1D03               	skipz
  3562  0DB6  2DEA               	goto	l363
  3563                           
  3564                           ;newmain.c: 935: {
  3565                           ;newmain.c: 936: if (EngSt != 7 && EngSt != 3)
  3566  0DB7  084B               	movf	_EngSt,w
  3567  0DB8  3A07               	xorlw	7
  3568  0DB9  1903               	skipnz
  3569  0DBA  2DE8               	goto	l3909
  3570  0DBB  084B               	movf	_EngSt,w
  3571  0DBC  3A03               	xorlw	3
  3572  0DBD  1D03               	btfss	3,2
  3573  0DBE  2DD1               	goto	l3907
  3574  0DBF  2DE8               	goto	l3909
  3575  0DC0                     l3889:	
  3576                           
  3577                           ;newmain.c: 941: EngSt = 0xC1;
  3578  0DC0  30C1               	movlw	193
  3579  0DC1  2DCF               	goto	L25
  3580  0DC2                     l3891:	
  3581                           ;newmain.c: 942: break;
  3582                           
  3583                           
  3584                           ;newmain.c: 944: EngSt = 0xC2;
  3585  0DC2  30C2               	movlw	194
  3586  0DC3  2DCF               	goto	L25
  3587  0DC4                     l3893:	
  3588                           ;newmain.c: 945: break;
  3589                           
  3590                           
  3591                           ;newmain.c: 947: EngSt = 0xC3;
  3592  0DC4  30C3               	movlw	195
  3593  0DC5  2DCF               	goto	L25
  3594  0DC6                     l3895:	
  3595                           ;newmain.c: 948: break;
  3596                           
  3597                           
  3598                           ;newmain.c: 950: EngSt = 0xC4;
  3599  0DC6  30C4               	movlw	196
  3600  0DC7  2DCF               	goto	L25
  3601  0DC8                     l3897:	
  3602                           ;newmain.c: 951: break;
  3603                           
  3604                           
  3605                           ;newmain.c: 953: EngSt = 0xC5;
  3606  0DC8  30C5               	movlw	197
  3607  0DC9  2DCF               	goto	L25
  3608  0DCA                     l3899:	
  3609                           ;newmain.c: 954: break;
  3610                           
  3611                           
  3612                           ;newmain.c: 956: EngSt = 0xC7;
  3613  0DCA  30C7               	movlw	199
  3614  0DCB  2DCF               	goto	L25
  3615  0DCC                     l3901:	
  3616                           ;newmain.c: 957: break;
  3617                           
  3618                           
  3619                           ;newmain.c: 959: EngSt = 0xC6;
  3620  0DCC  30C6               	movlw	198
  3621  0DCD  2DCF               	goto	L25
  3622  0DCE                     l3903:	
  3623                           ;newmain.c: 960: break;
  3624                           
  3625                           
  3626                           ;newmain.c: 962: EngSt = 0xC0;
  3627  0DCE  30C0               	movlw	192
  3628  0DCF                     L25:	
  3629  0DCF  00CB               	movwf	_EngSt
  3630                           
  3631                           ;newmain.c: 963: break;
  3632  0DD0  2DE8               	goto	l3909
  3633  0DD1                     l3907:	
  3634  0DD1  084B               	movf	_EngSt,w
  3635                           
  3636                           ; Switch size 1, requested type "space"
  3637                           ; Number of cases is 7, Range of values is 0 to 7
  3638                           ; switch strategies available:
  3639                           ; Name         Instructions Cycles
  3640                           ; simple_byte           22    12 (average)
  3641                           ; direct_byte           23     7 (fixed)
  3642                           ; jumptable            260     6 (fixed)
  3643                           ;	Chosen strategy is simple_byte
  3644  0DD2  3A00               	xorlw	0	; case 0
  3645  0DD3  1903               	skipnz
  3646  0DD4  2DCC               	goto	l3901
  3647  0DD5  3A01               	xorlw	1	; case 1
  3648  0DD6  1903               	skipnz
  3649  0DD7  2DC0               	goto	l3889
  3650  0DD8  3A03               	xorlw	3	; case 2
  3651  0DD9  1903               	skipnz
  3652  0DDA  2DC2               	goto	l3891
  3653  0DDB  3A01               	xorlw	1	; case 3
  3654  0DDC  1903               	skipnz
  3655  0DDD  2DC4               	goto	l3893
  3656  0DDE  3A07               	xorlw	7	; case 4
  3657  0DDF  1903               	skipnz
  3658  0DE0  2DC6               	goto	l3895
  3659  0DE1  3A01               	xorlw	1	; case 5
  3660  0DE2  1903               	skipnz
  3661  0DE3  2DC8               	goto	l3897
  3662  0DE4  3A02               	xorlw	2	; case 7
  3663  0DE5  1903               	skipnz
  3664  0DE6  2DCA               	goto	l3899
  3665  0DE7  2DCE               	goto	l3903
  3666  0DE8                     l3909:	
  3667                           
  3668                           ;newmain.c: 966: }
  3669                           ;newmain.c: 967: NewASRTmr = 0xFF;
  3670  0DE8  30FF               	movlw	255
  3671  0DE9  00E4               	movwf	_NewASRTmr
  3672  0DEA                     l363:	
  3673                           
  3674                           ;newmain.c: 968: }
  3675                           ;newmain.c: 969: }
  3676                           ;newmain.c: 971: if (ASRONTmr != 0xFF)
  3677  0DEA  0861               	movf	_ASRONTmr,w
  3678  0DEB  3AFF               	xorlw	255
  3679  0DEC  1D03               	btfss	3,2
  3680                           
  3681                           ;newmain.c: 972: ASRONTmr--;
  3682  0DED  03E1               	decf	_ASRONTmr,f
  3683                           
  3684                           ;newmain.c: 974: if (EngStartTmr != 0xFF)
  3685  0DEE  0863               	movf	_EngStartTmr,w
  3686  0DEF  3AFF               	xorlw	255
  3687  0DF0  1D03               	btfss	3,2
  3688                           
  3689                           ;newmain.c: 975: EngStartTmr--;
  3690  0DF1  03E3               	decf	_EngStartTmr,f
  3691                           
  3692                           ;newmain.c: 977: if (i2cSSPIFTmr != 0xFF)
  3693  0DF2  0858               	movf	_i2cSSPIFTmr,w
  3694  0DF3  3AFF               	xorlw	255
  3695  0DF4  1D03               	btfss	3,2
  3696                           
  3697                           ;newmain.c: 978: i2cSSPIFTmr--;
  3698  0DF5  03D8               	decf	_i2cSSPIFTmr,f
  3699                           
  3700                           ;newmain.c: 980: if (BinSt == 0 && EngSt == 0 &&
  3701                           ;newmain.c: 981: ASRONTmr == 0xFF && NewBinTmr == 0xFF && NewASRTmr == 0xFF)
  3702  0DF6  08C9               	movf	_BinSt,f
  3703  0DF7  1D03               	skipz
  3704  0DF8  2E1C               	goto	l3941
  3705  0DF9  08CB               	movf	_EngSt,f
  3706  0DFA  1D03               	skipz
  3707  0DFB  2E1C               	goto	l3941
  3708  0DFC  0861               	movf	_ASRONTmr,w
  3709  0DFD  3AFF               	xorlw	255
  3710  0DFE  1D03               	skipz
  3711  0DFF  2E1C               	goto	l3941
  3712  0E00  0865               	movf	_NewBinTmr,w
  3713  0E01  3AFF               	xorlw	255
  3714  0E02  1D03               	skipz
  3715  0E03  2E1C               	goto	l3941
  3716  0E04  0864               	movf	_NewASRTmr,w
  3717  0E05  3AFF               	xorlw	255
  3718  0E06  1D03               	skipz
  3719  0E07  2E1C               	goto	l3941
  3720                           
  3721                           ;newmain.c: 982: {
  3722                           ;newmain.c: 983: if (Ubatt > 0x80 && Ubatt <= UbattMin)
  3723  0E08  3081               	movlw	129
  3724  0E09  025E               	subwf	_Ubatt,w
  3725  0E0A  1C03               	skipc
  3726  0E0B  2E16               	goto	l3937
  3727  0E0C  085E               	movf	_Ubatt,w
  3728  0E0D  025F               	subwf	_UbattMin,w
  3729  0E0E  1C03               	skipc
  3730  0E0F  2E16               	goto	l3937
  3731                           
  3732                           ;newmain.c: 984: {
  3733                           ;newmain.c: 985: if (UbattTmr > 0xF8)
  3734  0E10  30F9               	movlw	249
  3735  0E11  0266               	subwf	_UbattTmr,w
  3736  0E12  1C03               	skipc
  3737  0E13  2E22               	goto	l385
  3738                           
  3739                           ;newmain.c: 986: {
  3740                           ;newmain.c: 987: UbattTmr--;
  3741  0E14  03E6               	decf	_UbattTmr,f
  3742  0E15  2E22               	goto	l385
  3743  0E16                     l3937:	
  3744                           
  3745                           ;newmain.c: 990: else
  3746                           ;newmain.c: 991: {
  3747                           ;newmain.c: 992: if (UbattTmr != 0xFF)
  3748  0E16  0866               	movf	_UbattTmr,w
  3749  0E17  3AFF               	xorlw	255
  3750  0E18  1903               	skipnz
  3751  0E19  2E22               	goto	l385
  3752                           
  3753                           ;newmain.c: 993: {
  3754                           ;newmain.c: 994: UbattTmr++;
  3755  0E1A  0AE6               	incf	_UbattTmr,f
  3756  0E1B  2E22               	goto	l385
  3757  0E1C                     l3941:	
  3758                           
  3759                           ;newmain.c: 998: else
  3760                           ;newmain.c: 999: {
  3761                           ;newmain.c: 1000: if (UbattTmr != 0xFF)
  3762  0E1C  0866               	movf	_UbattTmr,w
  3763  0E1D  3AFF               	xorlw	255
  3764  0E1E  1903               	skipnz
  3765  0E1F  2E22               	goto	l385
  3766                           
  3767                           ;newmain.c: 1001: {
  3768                           ;newmain.c: 1002: UbattTmr = 0xFF;
  3769  0E20  30FF               	movlw	255
  3770  0E21  00E6               	movwf	_UbattTmr
  3771  0E22                     l385:	
  3772                           
  3773                           ;newmain.c: 1003: }
  3774                           ;newmain.c: 1004: }
  3775                           ;newmain.c: 1007: if (Teng < TEngTemp)
  3776  0E22  085C               	movf	_TEngTemp,w
  3777  0E23  025D               	subwf	_Teng,w
  3778  0E24  1803               	skipnc
  3779  0E25  2E37               	goto	l3955
  3780                           
  3781                           ;newmain.c: 1008: {
  3782                           ;newmain.c: 1009: if (TEB < 0x84)
  3783  0E26  3084               	movlw	132
  3784  0E27  025B               	subwf	_TEB,w
  3785  0E28  1803               	skipnc
  3786  0E29  2E65               	goto	l351
  3787                           
  3788                           ;newmain.c: 1010: {
  3789                           ;newmain.c: 1011: TEB++;
  3790  0E2A  0ADB               	incf	_TEB,f
  3791                           
  3792                           ;newmain.c: 1012: if (TEB == 0x84 && TEB != TEBPrev)
  3793  0E2B  085B               	movf	_TEB,w
  3794  0E2C  3A84               	xorlw	132
  3795  0E2D  1D03               	skipz
  3796  0E2E  2E65               	goto	l351
  3797  0E2F  085B               	movf	_TEB,w
  3798  0E30  0650               	xorwf	_TEBPrev,w
  3799  0E31  1903               	skipnz
  3800  0E32  2E65               	goto	l351
  3801                           
  3802                           ;newmain.c: 1013: {
  3803                           ;newmain.c: 1014: WrLogEvent = 5;
  3804  0E33  3005               	movlw	5
  3805  0E34  00AB               	movwf	TmrRoutines@WrLogEvent
  3806                           
  3807                           ;newmain.c: 1015: TEBPrev = 0x84;
  3808  0E35  3084               	movlw	132
  3809  0E36  2E64               	goto	L26
  3810  0E37                     l3955:	
  3811                           
  3812                           ;newmain.c: 1019: else
  3813                           ;newmain.c: 1020: {
  3814                           ;newmain.c: 1021: if (TEB > 0x7B)
  3815  0E37  307C               	movlw	124
  3816  0E38  025B               	subwf	_TEB,w
  3817  0E39  1C03               	skipc
  3818  0E3A  2E65               	goto	l351
  3819                           
  3820                           ;newmain.c: 1022: {
  3821                           ;newmain.c: 1023: if (TEB == 0x84 && !(IntSvcSync & 0b01000000) &&
  3822                           ;newmain.c: 1024: EngSt == 0 && BinSt == 0)
  3823  0E3B  085B               	movf	_TEB,w
  3824  0E3C  3A84               	xorlw	132
  3825  0E3D  1903               	btfsc	3,2
  3826  0E3E  1B4C               	btfsc	_IntSvcSync,6
  3827  0E3F  2E58               	goto	l3973
  3828  0E40  08CB               	movf	_EngSt,f
  3829  0E41  1D03               	skipz
  3830  0E42  2E58               	goto	l3973
  3831  0E43  08C9               	movf	_BinSt,f
  3832  0E44  1D03               	skipz
  3833  0E45  2E58               	goto	l3973
  3834                           
  3835                           ;newmain.c: 1025: {
  3836                           ;newmain.c: 1027: PORTCbits.RC2 = 1;
  3837  0E46  1507               	bsf	7,2	;volatile
  3838                           
  3839                           ;newmain.c: 1028: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3840  0E47  3006               	movlw	6
  3841  0E48  00AA               	movwf	??_TmrRoutines+2
  3842  0E49  3013               	movlw	19
  3843  0E4A  00A9               	movwf	??_TmrRoutines+1
  3844  0E4B  30B1               	movlw	177
  3845  0E4C  00A8               	movwf	??_TmrRoutines
  3846  0E4D                     u5297:	
  3847  0E4D  0BA8               	decfsz	??_TmrRoutines,f
  3848  0E4E  2E4D               	goto	u5297
  3849  0E4F  0BA9               	decfsz	??_TmrRoutines+1,f
  3850  0E50  2E4D               	goto	u5297
  3851  0E51  0BAA               	decfsz	??_TmrRoutines+2,f
  3852  0E52  2E4D               	goto	u5297
  3853  0E53  2E54               	nop2
  3854                           
  3855                           ;newmain.c: 1029: PORTCbits.RC2 = 0;
  3856  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3857  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  3858  0E56  1107               	bcf	7,2	;volatile
  3859                           
  3860                           ;newmain.c: 1030: IntSvcSync |= 0b01000000;
  3861  0E57  174C               	bsf	_IntSvcSync,6
  3862  0E58                     l3973:	
  3863                           
  3864                           ;newmain.c: 1031: }
  3865                           ;newmain.c: 1033: TEB--;
  3866  0E58  03DB               	decf	_TEB,f
  3867                           
  3868                           ;newmain.c: 1034: if (TEB == 0x7B && TEB != TEBPrev)
  3869  0E59  085B               	movf	_TEB,w
  3870  0E5A  3A7B               	xorlw	123
  3871  0E5B  1D03               	skipz
  3872  0E5C  2E65               	goto	l351
  3873  0E5D  085B               	movf	_TEB,w
  3874  0E5E  0650               	xorwf	_TEBPrev,w
  3875  0E5F  1903               	skipnz
  3876  0E60  2E65               	goto	l351
  3877                           
  3878                           ;newmain.c: 1035: {
  3879                           ;newmain.c: 1036: WrLogEvent = 4;
  3880  0E61  3004               	movlw	4
  3881  0E62  00AB               	movwf	TmrRoutines@WrLogEvent
  3882                           
  3883                           ;newmain.c: 1037: TEBPrev = 0x7B;
  3884  0E63  307B               	movlw	123
  3885  0E64                     L26:	
  3886  0E64  00D0               	movwf	_TEBPrev
  3887  0E65                     l351:	
  3888                           
  3889                           ;newmain.c: 1038: }
  3890                           ;newmain.c: 1039: }
  3891                           ;newmain.c: 1040: }
  3892                           ;newmain.c: 1041: }
  3893                           ;newmain.c: 1042: return (WrLogEvent);
  3894  0E65  082B               	movf	TmrRoutines@WrLogEvent,w
  3895  0E66  0008               	return
  3896  0E67                     __end_of_TmrRoutines:	
  3897  0E67                     __ptext4:	
  3898 ;; *************** function _I2CReset *****************
  3899 ;; Defined at:
  3900 ;;		line 560 in file "newmain.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;		None               void
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 60/0
  3911 ;;		On exit  : 60/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3914 ;;      Params:         0       0       0       0
  3915 ;;      Locals:         0       0       0       0
  3916 ;;      Temps:          0       2       0       0
  3917 ;;      Totals:         0       2       0       0
  3918 ;;Total ram usage:        2 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    5
  3921 ;; This function calls:
  3922 ;;		_i2c_init
  3923 ;; This function is called by:
  3924 ;;		_TmrRoutines
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _I2CReset
  3930  0E67                     _I2CReset:	
  3931                           
  3932                           ;newmain.c: 562: SSPCONbits.SSPEN = 0;
  3933                           
  3934                           ;incstack = 0
  3935                           ; Regs used in _I2CReset: [wreg+status,2+status,0+pclath+cstack]
  3936  0E67  1294               	bcf	20,5	;volatile
  3937                           
  3938                           ;newmain.c: 563: _delay((unsigned long)((10)*(4000000/4000.0)));
  3939  0E68  300D               	movlw	13
  3940  0E69  00A7               	movwf	??_I2CReset+1
  3941  0E6A  30FB               	movlw	251
  3942  0E6B  00A6               	movwf	??_I2CReset
  3943  0E6C                     u5307:	
  3944  0E6C  0BA6               	decfsz	??_I2CReset,f
  3945  0E6D  2E6C               	goto	u5307
  3946  0E6E  0BA7               	decfsz	??_I2CReset+1,f
  3947  0E6F  2E6C               	goto	u5307
  3948  0E70  2E71               	nop2
  3949                           
  3950                           ;newmain.c: 564: i2c_init(0b01000010);
  3951  0E71  3042               	movlw	66
  3952  0E72  2E73               	ljmp	_i2c_init
  3953  0E73                     __end_of_I2CReset:	
  3954  0E73                     __ptext5:	
  3955 ;; *************** function _i2c_init *****************
  3956 ;; Defined at:
  3957 ;;		line 6 in file "../../i2c/i2c_my.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  slaveaddr       1    wreg     unsigned char 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  slaveaddr       1    5[BANK0 ] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/20
  3968 ;;		On exit  : 60/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3971 ;;      Params:         0       0       0       0
  3972 ;;      Locals:         0       1       0       0
  3973 ;;      Temps:          0       0       0       0
  3974 ;;      Totals:         0       1       0       0
  3975 ;;Total ram usage:        1 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    4
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_I2CReset
  3982 ;;		_main
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           
  3987                           ;psect for function _i2c_init
  3988  0E73                     _i2c_init:	
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  3992                           ;i2c_init@slaveaddr stored from wreg
  3993  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0E75  00A5               	movwf	i2c_init@slaveaddr
  3996                           
  3997                           ;i2c_my.c: 43: TRISBbits.TRISB4 = 1;
  3998  0E76  1683               	bsf	3,5	;RP0=1, select bank1
  3999  0E77  1606               	bsf	6,4	;volatile
  4000                           
  4001                           ;i2c_my.c: 44: TRISBbits.TRISB6 = 1;
  4002  0E78  1706               	bsf	6,6	;volatile
  4003                           
  4004                           ;i2c_my.c: 46: SSPSTAT = 0x0;
  4005  0E79  0194               	clrf	20	;volatile
  4006                           
  4007                           ;i2c_my.c: 48: SSPCON = 0b00001001;
  4008  0E7A  3009               	movlw	9
  4009  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  4010  0E7C  0094               	movwf	20	;volatile
  4011                           
  4012                           ;i2c_my.c: 49: SSPADD = slaveaddr;
  4013  0E7D  0825               	movf	i2c_init@slaveaddr,w
  4014  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  4015  0E7F  0093               	movwf	19	;volatile
  4016                           
  4017                           ;i2c_my.c: 50: SSPMSK = slaveaddr;
  4018  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  4019  0E81  0825               	movf	i2c_init@slaveaddr,w
  4020  0E82  1683               	bsf	3,5	;RP0=1, select bank1
  4021  0E83  0093               	movwf	19	;volatile
  4022                           
  4023                           ;i2c_my.c: 53: SSPCONbits.SSPM = 0b1110;
  4024  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0E85  0814               	movf	20,w	;volatile
  4026  0E86  39F0               	andlw	-16
  4027  0E87  380E               	iorlw	14
  4028  0E88  0094               	movwf	20	;volatile
  4029                           
  4030                           ;i2c_my.c: 54: SSPCONbits.CKP = 0x1;
  4031  0E89  1614               	bsf	20,4	;volatile
  4032                           
  4033                           ;i2c_my.c: 55: SSPMSK = 0xFF;
  4034  0E8A  30FF               	movlw	255
  4035  0E8B  1683               	bsf	3,5	;RP0=1, select bank1
  4036  0E8C  0093               	movwf	19	;volatile
  4037                           
  4038                           ;i2c_my.c: 56: SSPCONbits.SSPEN = 0x1;
  4039  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0E8E  1694               	bsf	20,5	;volatile
  4041  0E8F  0008               	return
  4042  0E90                     __end_of_i2c_init:	
  4043                           
  4044                           	psect	text6
  4045  0BB3                     __ptext6:	
  4046 ;; *************** function _TEngUbattRW *****************
  4047 ;; Defined at:
  4048 ;;		line 31 in file "EEPROMfunc.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  StartAddr       1    wreg     unsigned char 
  4051 ;;  Teng            1   11[BANK0 ] PTR unsigned char 
  4052 ;;		 -> TEngTemp(1), UbattMin(1), I2CSlaveSR@x(1), Teng(1), 
  4053 ;;		 -> Ubatt(1), 
  4054 ;;  Read            1   12[BANK0 ] unsigned char 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  StartAddr       1   18[BANK0 ] unsigned char 
  4057 ;;  addr            1   19[BANK0 ] unsigned char 
  4058 ;;  RTimes          1    0        unsigned char 
  4059 ;;  lTeng           1   16[BANK0 ] unsigned char 
  4060 ;;  EqTimes         1   15[BANK0 ] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      unsigned char 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 60/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4070 ;;      Params:         0       2       0       0
  4071 ;;      Locals:         0       5       0       0
  4072 ;;      Temps:          0       2       0       0
  4073 ;;      Totals:         0       9       0       0
  4074 ;;Total ram usage:        9 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    5
  4077 ;; This function calls:
  4078 ;;		_OutRet
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _TEngUbattRW
  4086  0BB3                     _TEngUbattRW:	
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in _TEngUbattRW: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4090                           ;TEngUbattRW@StartAddr stored from wreg
  4091  0BB3  00B2               	movwf	TEngUbattRW@StartAddr
  4092                           
  4093                           ;EEPROMfunc.c: 33: char addr, lTeng, RTimes, EqTimes;
  4094                           ;EEPROMfunc.c: 34: if (!Read)
  4095  0BB4  08AC               	movf	TEngUbattRW@Read,f
  4096  0BB5  1D03               	skipz
  4097  0BB6  2BD0               	goto	l3769
  4098                           
  4099                           ;EEPROMfunc.c: 35: {
  4100                           ;EEPROMfunc.c: 36: for (addr = StartAddr; addr < StartAddr + 5; addr++)
  4101  0BB7  0832               	movf	TEngUbattRW@StartAddr,w
  4102  0BB8  00B3               	movwf	TEngUbattRW@addr
  4103  0BB9                     l3761:	
  4104  0BB9  0832               	movf	TEngUbattRW@StartAddr,w
  4105  0BBA  3E05               	addlw	5
  4106  0BBB  00AD               	movwf	??_TEngUbattRW
  4107  0BBC  3000               	movlw	0
  4108  0BBD  1803               	skipnc
  4109  0BBE  3001               	movlw	1
  4110  0BBF  00AE               	movwf	??_TEngUbattRW+1
  4111  0BC0  3A80               	xorlw	128
  4112  0BC1  3C80               	sublw	128
  4113  0BC2  1D03               	skipz
  4114  0BC3  2BC6               	goto	u4365
  4115  0BC4  082D               	movf	??_TEngUbattRW,w
  4116  0BC5  0233               	subwf	TEngUbattRW@addr,w
  4117  0BC6                     u4365:	
  4118  0BC6  1803               	btfsc	3,0
  4119  0BC7  3400               	retlw	0
  4120                           
  4121                           ;EEPROMfunc.c: 37: {
  4122                           ;EEPROMfunc.c: 38: OutRet (addr, Teng, Read);
  4123  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  4124  0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  4125  0BCA  2437  158A         	fcall	PL20	;call to abstracted procedure
  4126  0BCC  23F9  158A         	fcall	_OutRet
  4127  0BCE  0AB3               	incf	TEngUbattRW@addr,f
  4128  0BCF  2BB9               	goto	l3761
  4129  0BD0                     l3769:	
  4130                           
  4131                           ;EEPROMfunc.c: 44: {
  4132                           ;EEPROMfunc.c: 45: addr = StartAddr + RTimes - 1;
  4133  0BD0  0832               	movf	TEngUbattRW@StartAddr,w
  4134  0BD1  3E04               	addlw	4
  4135  0BD2  00B3               	movwf	TEngUbattRW@addr
  4136                           
  4137                           ;EEPROMfunc.c: 46: OutRet (addr, Teng, Read);
  4138  0BD3  2437  158A         	fcall	PL20	;call to abstracted procedure
  4139  0BD5  23F9  158A         	fcall	_OutRet
  4140                           
  4141                           ;EEPROMfunc.c: 47: lTeng = *Teng;
  4142  0BD7  082B               	movf	TEngUbattRW@Teng,w
  4143  0BD8  0084               	movwf	4
  4144  0BD9  1383               	bcf	3,7	;select IRP bank0
  4145  0BDA  0800               	movf	0,w
  4146  0BDB  00B0               	movwf	TEngUbattRW@lTeng
  4147                           
  4148                           ;EEPROMfunc.c: 48: EqTimes = 1;
  4149  0BDC  01AF               	clrf	TEngUbattRW@EqTimes
  4150  0BDD  0AAF               	incf	TEngUbattRW@EqTimes,f
  4151  0BDE                     l3777:	
  4152                           
  4153                           ;EEPROMfunc.c: 50: {
  4154                           ;EEPROMfunc.c: 51: addr--;
  4155  0BDE  03B3               	decf	TEngUbattRW@addr,f
  4156                           
  4157                           ;EEPROMfunc.c: 52: OutRet (addr, Teng, Read);
  4158  0BDF  2437  158A         	fcall	PL20	;call to abstracted procedure
  4159  0BE1  23F9  158A         	fcall	_OutRet
  4160                           
  4161                           ;EEPROMfunc.c: 53: EqTimes += (lTeng == *Teng);
  4162  0BE3  082B               	movf	TEngUbattRW@Teng,w
  4163  0BE4  0084               	movwf	4
  4164  0BE5  1383               	bcf	3,7	;select IRP bank0
  4165  0BE6  0800               	movf	0,w
  4166  0BE7  0630               	xorwf	TEngUbattRW@lTeng,w
  4167  0BE8  3000               	movlw	0
  4168  0BE9  1903               	skipnz
  4169  0BEA  3001               	movlw	1
  4170  0BEB  07AF               	addwf	TEngUbattRW@EqTimes,f
  4171                           
  4172                           ;EEPROMfunc.c: 54: } while (addr >= StartAddr);
  4173  0BEC  0832               	movf	TEngUbattRW@StartAddr,w
  4174  0BED  0233               	subwf	TEngUbattRW@addr,w
  4175  0BEE  1803               	skipnc
  4176  0BEF  2BDE               	goto	l3777
  4177                           
  4178                           ;EEPROMfunc.c: 55: if (EqTimes >= 3)
  4179  0BF0  3003               	movlw	3
  4180  0BF1  022F               	subwf	TEngUbattRW@EqTimes,w
  4181  0BF2  1C03               	skipc
  4182  0BF3  3401               	retlw	1
  4183                           
  4184                           ;EEPROMfunc.c: 56: {
  4185                           ;EEPROMfunc.c: 57: *Teng = lTeng;
  4186  0BF4  082B               	movf	TEngUbattRW@Teng,w
  4187  0BF5  0084               	movwf	4
  4188  0BF6  0830               	movf	TEngUbattRW@lTeng,w
  4189  0BF7  0080               	movwf	0
  4190                           
  4191                           ;EEPROMfunc.c: 58: return 0;
  4192  0BF8  3400               	retlw	0
  4193  0BF9                     __end_of_TEngUbattRW:	
  4194                           ;EEPROMfunc.c: 60: else
  4195                           ;EEPROMfunc.c: 61: {
  4196                           ;EEPROMfunc.c: 62: return 1;
  4197                           
  4198  0BF9                     __ptext7:	
  4199 ;; *************** function _OutRet *****************
  4200 ;; Defined at:
  4201 ;;		line 5 in file "EEPROMfunc.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  addr            1    wreg     unsigned char 
  4204 ;;  ret             1    5[BANK0 ] PTR unsigned char 
  4205 ;;		 -> TEngTemp(1), UbattMin(1), I2CSlaveSR@x(1), Teng(1), 
  4206 ;;		 -> Ubatt(1), 
  4207 ;;  Read            1    6[BANK0 ] unsigned char 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  addr            1    9[BANK0 ] unsigned char 
  4210 ;;  gie             1   10[BANK0 ] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;		None               void
  4213 ;; Registers used:
  4214 ;;		wreg, fsr0l, fsr0h, status,2
  4215 ;; Tracked objects:
  4216 ;;		On entry : 60/0
  4217 ;;		On exit  : 60/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4220 ;;      Params:         0       2       0       0
  4221 ;;      Locals:         0       2       0       0
  4222 ;;      Temps:          0       2       0       0
  4223 ;;      Totals:         0       6       0       0
  4224 ;;Total ram usage:        6 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    4
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_TEngUbattRW
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _OutRet
  4236  0BF9                     _OutRet:	
  4237                           
  4238                           ;incstack = 0
  4239                           ; Regs used in _OutRet: [wreg-fsr0h+status,2]
  4240                           ;OutRet@addr stored from wreg
  4241  0BF9  00A9               	movwf	OutRet@addr
  4242                           
  4243                           ;EEPROMfunc.c: 7: char gie = INTCONbits.GIE;
  4244  0BFA  3000               	movlw	0
  4245  0BFB  1B8B               	btfsc	11,7	;volatile
  4246  0BFC  3001               	movlw	1
  4247  0BFD  00AA               	movwf	OutRet@gie
  4248                           
  4249                           ;EEPROMfunc.c: 8: INTCONbits.GIE = 0x0;
  4250  0BFE  138B               	bcf	11,7	;volatile
  4251                           
  4252                           ;EEPROMfunc.c: 9: EEADR = addr;
  4253  0BFF  0829               	movf	OutRet@addr,w
  4254  0C00  1703               	bsf	3,6	;RP1=1, select bank2
  4255  0C01  008D               	movwf	13	;volatile
  4256                           
  4257                           ;EEPROMfunc.c: 10: EECON1bits.EEPGD = 0x0;
  4258  0C02  1683               	bsf	3,5	;RP0=1, select bank3
  4259  0C03  138C               	bcf	12,7	;volsfr
  4260                           
  4261                           ;EEPROMfunc.c: 11: if (Read)
  4262  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  4263  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  4264  0C06  0826               	movf	OutRet@Read,w
  4265  0C07  1903               	btfsc	3,2
  4266  0C08  2C15               	goto	l3063
  4267                           
  4268                           ;EEPROMfunc.c: 12: {
  4269                           ;EEPROMfunc.c: 13: EECON1bits.RD = 1;
  4270  0C09  1683               	bsf	3,5	;RP0=1, select bank3
  4271  0C0A  1703               	bsf	3,6	;RP1=1, select bank3
  4272  0C0B  140C               	bsf	12,0	;volsfr
  4273                           
  4274                           ;EEPROMfunc.c: 14: *ret = EEDAT;
  4275  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  4276  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  4277  0C0E  0825               	movf	OutRet@ret,w
  4278  0C0F  0084               	movwf	4
  4279  0C10  1703               	bsf	3,6	;RP1=1, select bank2
  4280  0C11  080C               	movf	12,w	;volatile
  4281  0C12  1383               	bcf	3,7	;select IRP bank0
  4282  0C13  0080               	movwf	0
  4283                           
  4284                           ;EEPROMfunc.c: 15: }
  4285  0C14  2C2F               	goto	l536
  4286  0C15                     l3063:	
  4287                           
  4288                           ;EEPROMfunc.c: 16: else
  4289                           ;EEPROMfunc.c: 17: {
  4290                           ;EEPROMfunc.c: 18: EEDAT = *ret;
  4291  0C15  0825               	movf	OutRet@ret,w
  4292  0C16  0084               	movwf	4
  4293  0C17  1383               	bcf	3,7	;select IRP bank0
  4294  0C18  0800               	movf	0,w
  4295  0C19  1703               	bsf	3,6	;RP1=1, select bank2
  4296  0C1A  008C               	movwf	12	;volatile
  4297                           
  4298                           ;EEPROMfunc.c: 19: EECON1bits.WREN = 0x1;
  4299  0C1B  1683               	bsf	3,5	;RP0=1, select bank3
  4300  0C1C  150C               	bsf	12,2	;volsfr
  4301                           
  4302                           ;EEPROMfunc.c: 20: EECON2 = 0x55;
  4303  0C1D  3055               	movlw	85
  4304  0C1E  008D               	movwf	13	;volsfr
  4305                           
  4306                           ;EEPROMfunc.c: 21: EECON2 = 0xAA;
  4307  0C1F  30AA               	movlw	170
  4308  0C20  008D               	movwf	13	;volsfr
  4309                           
  4310                           ;EEPROMfunc.c: 22: EECON1bits.WR = 0x1;
  4311  0C21  148C               	bsf	12,1	;volsfr
  4312  0C22                     l537:	
  4313                           ;EEPROMfunc.c: 25: while(EECON1bits.WR);
  4314                           
  4315  0C22  188C               	btfsc	12,1	;volsfr
  4316  0C23  2C22               	goto	l537
  4317                           
  4318                           ;EEPROMfunc.c: 26: _delay((unsigned long)((100)*(4000000/4000.0)));
  4319  0C24  3082               	movlw	130
  4320  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  4321  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  4322  0C27  00A8               	movwf	??_OutRet+1
  4323  0C28  30DD               	movlw	221
  4324  0C29  00A7               	movwf	??_OutRet
  4325  0C2A                     u5317:	
  4326  0C2A  0BA7               	decfsz	??_OutRet,f
  4327  0C2B  2C2A               	goto	u5317
  4328  0C2C  0BA8               	decfsz	??_OutRet+1,f
  4329  0C2D  2C2A               	goto	u5317
  4330  0C2E  2C2F               	nop2
  4331  0C2F                     l536:	
  4332                           
  4333                           ;EEPROMfunc.c: 27: }
  4334                           ;EEPROMfunc.c: 28: INTCONbits.GIE = gie;
  4335  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  4336  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  4337  0C31  082A               	movf	OutRet@gie,w
  4338  0C32  1D03               	skipz
  4339  0C33  178B               	bsf	11,7	;volatile
  4340  0C34  1903               	skipnz
  4341  0C35  138B               	bcf	11,7	;volatile
  4342  0C36  0008               	return
  4343  0C37                     __end_of_OutRet:	
  4344  0C37                     PL20:	
  4345  0C37  082B               	movf	TEngUbattRW@Teng,w
  4346  0C38  00A5               	movwf	OutRet@ret
  4347  0C39  082C               	movf	TEngUbattRW@Read,w
  4348  0C3A  00A6               	movwf	OutRet@Read
  4349  0C3B  0833               	movf	TEngUbattRW@addr,w
  4350  0C3C  0008               	return
  4351  0C3D                     __end_ofPL20:	
  4352                           
  4353                           	psect	text14
  4354  0E90                     __ptext14:	
  4355 ;; *************** function _EngBinState *****************
  4356 ;; Defined at:
  4357 ;;		line 315 in file "newmain.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  WrLogEvent      1    8[BANK0 ] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      unsigned char 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 60/0
  4368 ;;		On exit  : 60/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4371 ;;      Params:         0       0       0       0
  4372 ;;      Locals:         0       1       0       0
  4373 ;;      Temps:          0       3       0       0
  4374 ;;      Totals:         0       4       0       0
  4375 ;;Total ram usage:        4 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    4
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_main
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           
  4386                           ;psect for function _EngBinState
  4387  0E90                     _EngBinState:	
  4388                           
  4389                           ;newmain.c: 317: unsigned char WrLogEvent = 0xFF;
  4390                           
  4391                           ;incstack = 0
  4392                           ; Regs used in _EngBinState: [wreg+status,2+status,0]
  4393  0E90  30FF               	movlw	255
  4394  0E91  00A8               	movwf	EngBinState@WrLogEvent
  4395                           
  4396                           ;newmain.c: 319: if (((PinState & (1 << 6)) && (PinState & (1 << 3))) && ((BinSt&0x80) |
      +                          | (EngSt&0xC0)))
  4397  0E92  1B4E               	btfsc	_PinState,6
  4398  0E93  1DCE               	btfss	_PinState,3
  4399  0E94  2E9D               	goto	l3559
  4400  0E95  1BC9               	btfsc	_BinSt,7
  4401  0E96  2E9B               	goto	l3557
  4402  0E97  084B               	movf	_EngSt,w
  4403  0E98  39C0               	andlw	192
  4404  0E99  1903               	btfsc	3,2
  4405  0E9A  2E9D               	goto	l3559
  4406  0E9B                     l3557:	
  4407                           
  4408                           ;newmain.c: 320: {
  4409                           ;newmain.c: 321: BinSt = 0;
  4410  0E9B  01C9               	clrf	_BinSt
  4411                           
  4412                           ;newmain.c: 322: EngSt = 0;
  4413  0E9C  01CB               	clrf	_EngSt
  4414  0E9D                     l3559:	
  4415                           
  4416                           ;newmain.c: 323: }
  4417                           ;newmain.c: 325: if ((BinSt&0x80) || (EngSt&0xC0))
  4418  0E9D  1BC9               	btfsc	_BinSt,7
  4419  0E9E  34FF               	retlw	255
  4420  0E9F  084B               	movf	_EngSt,w
  4421  0EA0  39C0               	andlw	192
  4422  0EA1  1D03               	btfss	3,2
  4423                           
  4424                           ;newmain.c: 326: return (WrLogEvent);
  4425  0EA2  34FF               	retlw	255
  4426                           
  4427                           ;newmain.c: 332: if (PinState & (1 << 6))
  4428  0EA3  1F4E               	btfss	_PinState,6
  4429  0EA4  2ED6               	goto	l3601
  4430                           
  4431                           ;newmain.c: 333: {
  4432                           ;newmain.c: 334: if (EngSt != 4 && EngSt != 5)
  4433  0EA5  084B               	movf	_EngSt,w
  4434  0EA6  3A04               	xorlw	4
  4435  0EA7  1903               	skipnz
  4436  0EA8  2EE3               	goto	l3611
  4437  0EA9  084B               	movf	_EngSt,w
  4438  0EAA  3A05               	xorlw	5
  4439  0EAB  1903               	skipnz
  4440  0EAC  2EE3               	goto	l3611
  4441                           
  4442                           ;newmain.c: 335: {
  4443                           ;newmain.c: 336: ASRONTmr = 0xFF;
  4444  0EAD  30FF               	movlw	255
  4445  0EAE  00E1               	movwf	_ASRONTmr
  4446                           
  4447                           ;newmain.c: 338: if (!(IntSvcSync & 0b00010000))
  4448  0EAF  1A4C               	btfsc	_IntSvcSync,4
  4449  0EB0  2EB2               	goto	l216
  4450                           
  4451                           ;newmain.c: 339: IntSvcSync &= ~0b01000000;
  4452  0EB1  134C               	bcf	_IntSvcSync,6
  4453  0EB2                     l216:	
  4454                           
  4455                           ;newmain.c: 342: if (PinState & (1 << 3))
  4456  0EB2  1DCE               	btfss	_PinState,3
  4457  0EB3  2ECA               	goto	l3593
  4458                           
  4459                           ;newmain.c: 343: {
  4460                           ;newmain.c: 344: if (EngSt != 7 && EngSt != 3 && EngStartTmr == 0xFF)
  4461  0EB4  084B               	movf	_EngSt,w
  4462  0EB5  3A07               	xorlw	7
  4463  0EB6  1903               	skipnz
  4464  0EB7  2EC5               	goto	l3587
  4465  0EB8  084B               	movf	_EngSt,w
  4466  0EB9  3A03               	xorlw	3
  4467  0EBA  1903               	skipnz
  4468  0EBB  2EC5               	goto	l3587
  4469  0EBC  0863               	movf	_EngStartTmr,w
  4470  0EBD  3AFF               	xorlw	255
  4471  0EBE  1D03               	skipz
  4472  0EBF  2EC5               	goto	l3587
  4473                           
  4474                           ;newmain.c: 345: {
  4475                           ;newmain.c: 346: NewASRTmr = 0x10;
  4476  0EC0  3010               	movlw	16
  4477  0EC1  00E4               	movwf	_NewASRTmr
  4478                           
  4479                           ;newmain.c: 349: EngSt = 7;
  4480  0EC2  3007               	movlw	7
  4481  0EC3  00CB               	movwf	_EngSt
  4482                           
  4483                           ;newmain.c: 351: WrLogEvent = 0;
  4484  0EC4  01A8               	clrf	EngBinState@WrLogEvent
  4485  0EC5                     l3587:	
  4486                           
  4487                           ;newmain.c: 352: }
  4488                           ;newmain.c: 353: EngSt = 7;
  4489  0EC5  3007               	movlw	7
  4490  0EC6  00CB               	movwf	_EngSt
  4491                           
  4492                           ;newmain.c: 355: IntSvcSync &= ~0b00010000;
  4493  0EC7  124C               	bcf	_IntSvcSync,4
  4494                           
  4495                           ;newmain.c: 356: IntSvcSync &= ~0b01000000;
  4496  0EC8  134C               	bcf	_IntSvcSync,6
  4497                           
  4498                           ;newmain.c: 357: }
  4499  0EC9  2EE3               	goto	l3611
  4500  0ECA                     l3593:	
  4501                           
  4502                           ;newmain.c: 358: else
  4503                           ;newmain.c: 359: {
  4504                           ;newmain.c: 360: if (EngSt == 2)
  4505  0ECA  084B               	movf	_EngSt,w
  4506  0ECB  3A02               	xorlw	2
  4507  0ECC  1D03               	skipz
  4508  0ECD  2ED3               	goto	l3599
  4509                           
  4510                           ;newmain.c: 361: {
  4511                           ;newmain.c: 362: NewASRTmr = 0x10;
  4512  0ECE  3010               	movlw	16
  4513  0ECF  00E4               	movwf	_NewASRTmr
  4514                           
  4515                           ;newmain.c: 363: EngSt = 3;
  4516  0ED0  3003               	movlw	3
  4517  0ED1  00CB               	movwf	_EngSt
  4518                           
  4519                           ;newmain.c: 364: WrLogEvent = 0;
  4520  0ED2  01A8               	clrf	EngBinState@WrLogEvent
  4521  0ED3                     l3599:	
  4522                           
  4523                           ;newmain.c: 366: }
  4524                           ;newmain.c: 367: EngSt = 3;
  4525  0ED3  3003               	movlw	3
  4526  0ED4  00CB               	movwf	_EngSt
  4527  0ED5  2EE3               	goto	l3611
  4528  0ED6                     l3601:	
  4529                           
  4530                           ;newmain.c: 371: else
  4531                           ;newmain.c: 372: {
  4532                           ;newmain.c: 373: if (EngSt != 2 && EngSt != 1 && EngSt != 0)
  4533  0ED6  084B               	movf	_EngSt,w
  4534  0ED7  3A02               	xorlw	2
  4535  0ED8  1903               	skipnz
  4536  0ED9  2EE3               	goto	l3611
  4537  0EDA  034B               	decf	_EngSt,w
  4538  0EDB  1903               	skipnz
  4539  0EDC  2EE3               	goto	l3611
  4540  0EDD  084B               	movf	_EngSt,w
  4541  0EDE  1903               	btfsc	3,2
  4542  0EDF  2EE3               	goto	l3611
  4543                           
  4544                           ;newmain.c: 374: {
  4545                           ;newmain.c: 375: EngStartTmr = 0x10;
  4546  0EE0  3010               	movlw	16
  4547  0EE1  00E3               	movwf	_EngStartTmr
  4548                           
  4549                           ;newmain.c: 376: EngSt = 0;
  4550  0EE2  01CB               	clrf	_EngSt
  4551  0EE3                     l3611:	
  4552                           
  4553                           ;newmain.c: 377: }
  4554                           ;newmain.c: 378: }
  4555                           ;newmain.c: 385: if (PinState & (1 << 2))
  4556  0EE3  1D4E               	btfss	_PinState,2
  4557  0EE4  2EF7               	goto	l3623
  4558                           
  4559                           ;newmain.c: 386: {
  4560                           ;newmain.c: 387: if (BinSt != 0x14 && BinSt != 0x15 && BinSt != 0x13)
  4561  0EE5  0849               	movf	_BinSt,w
  4562  0EE6  3A14               	xorlw	20
  4563  0EE7  1903               	skipnz
  4564  0EE8  2F0D               	goto	l3639
  4565  0EE9  0849               	movf	_BinSt,w
  4566  0EEA  3A15               	xorlw	21
  4567  0EEB  1903               	skipnz
  4568  0EEC  2F0D               	goto	l3639
  4569  0EED  0849               	movf	_BinSt,w
  4570  0EEE  3A13               	xorlw	19
  4571  0EEF  1903               	skipnz
  4572  0EF0  2F0D               	goto	l3639
  4573                           
  4574                           ;newmain.c: 388: {
  4575                           ;newmain.c: 389: NewBinTmr = 0xFF;
  4576  0EF1  30FF               	movlw	255
  4577  0EF2  00E5               	movwf	_NewBinTmr
  4578                           
  4579                           ;newmain.c: 390: ASRONTmr = 0xFF;
  4580  0EF3  00E1               	movwf	_ASRONTmr
  4581                           
  4582                           ;newmain.c: 391: BinSt = 0x13;
  4583  0EF4  3013               	movlw	19
  4584  0EF5  00C9               	movwf	_BinSt
  4585  0EF6  2F0C               	goto	l3621
  4586  0EF7                     l3623:	
  4587                           
  4588                           ;newmain.c: 396: else
  4589                           ;newmain.c: 397: {
  4590                           ;newmain.c: 398: if (BinSt != 0x12 && BinSt != 0x11 && BinSt != 0)
  4591  0EF7  0849               	movf	_BinSt,w
  4592  0EF8  3A12               	xorlw	18
  4593  0EF9  1903               	skipnz
  4594  0EFA  2F0D               	goto	l3639
  4595  0EFB  0849               	movf	_BinSt,w
  4596  0EFC  3A11               	xorlw	17
  4597  0EFD  1903               	skipnz
  4598  0EFE  2F0D               	goto	l3639
  4599  0EFF  0849               	movf	_BinSt,w
  4600  0F00  1903               	btfsc	3,2
  4601  0F01  2F0D               	goto	l3639
  4602                           
  4603                           ;newmain.c: 399: {
  4604                           ;newmain.c: 400: if (BinSt == 0x13)
  4605  0F02  0849               	movf	_BinSt,w
  4606  0F03  3A13               	xorlw	19
  4607  0F04  1D03               	skipz
  4608  0F05  2F08               	goto	l227
  4609                           
  4610                           ;newmain.c: 401: ASRONTmr = 16;
  4611  0F06  3010               	movlw	16
  4612  0F07  00E1               	movwf	_ASRONTmr
  4613  0F08                     l227:	
  4614                           
  4615                           ;newmain.c: 402: NewBinTmr = 0xFF;
  4616  0F08  30FF               	movlw	255
  4617  0F09  00E5               	movwf	_NewBinTmr
  4618                           
  4619                           ;newmain.c: 403: BinSt = 0;
  4620  0F0A  01C9               	clrf	_BinSt
  4621                           
  4622                           ;newmain.c: 404: PORTCbits.RC3 = 0;
  4623  0F0B  1187               	bcf	7,3	;volatile
  4624  0F0C                     l3621:	
  4625                           
  4626                           ;newmain.c: 392: WrLogEvent = 0;
  4627  0F0C  01A8               	clrf	EngBinState@WrLogEvent
  4628  0F0D                     l3639:	
  4629                           
  4630                           ;newmain.c: 407: }
  4631                           ;newmain.c: 408: }
  4632                           ;newmain.c: 414: if (!(PinState & (1 << 1)))
  4633  0F0D  18CE               	btfsc	_PinState,1
  4634  0F0E  2F1A               	goto	l3647
  4635                           
  4636                           ;newmain.c: 415: {
  4637                           ;newmain.c: 418: if (EngSt != 7)
  4638  0F0F  084B               	movf	_EngSt,w
  4639  0F10  3A07               	xorlw	7
  4640  0F11  1903               	skipnz
  4641  0F12  2F5E               	goto	l3671
  4642                           
  4643                           ;newmain.c: 419: {
  4644                           ;newmain.c: 420: if (TEB >= 0x7F)
  4645  0F13  307F               	movlw	127
  4646  0F14  025B               	subwf	_TEB,w
  4647  0F15  1C03               	skipc
  4648  0F16  2F5E               	goto	l3671
  4649                           
  4650                           ;newmain.c: 421: {
  4651                           ;newmain.c: 422: StateTest = 1;
  4652  0F17  01CF               	clrf	_StateTest
  4653  0F18  0ACF               	incf	_StateTest,f
  4654  0F19  2F5E               	goto	l3671
  4655  0F1A                     l3647:	
  4656                           
  4657                           ;newmain.c: 439: else
  4658                           ;newmain.c: 440: {
  4659                           ;newmain.c: 441: if (StateTest == 1)
  4660  0F1A  0B4F               	decfsz	_StateTest,w
  4661  0F1B  2F3D               	goto	l3659
  4662  0F1C  300B               	movlw	11
  4663                           
  4664                           ;newmain.c: 442: {
  4665                           ;newmain.c: 443: StateTest = 0;
  4666  0F1D  01CF               	clrf	_StateTest
  4667                           
  4668                           ;newmain.c: 444: _delay((unsigned long)((2000)*(4000000/4000.0)));
  4669  0F1E  00A7               	movwf	??_EngBinState+2
  4670  0F1F  3026               	movlw	38
  4671  0F20  00A6               	movwf	??_EngBinState+1
  4672  0F21  3066               	movlw	102
  4673  0F22  00A5               	movwf	??_EngBinState
  4674  0F23                     u5327:	
  4675  0F23  0BA5               	decfsz	??_EngBinState,f
  4676  0F24  2F23               	goto	u5327
  4677  0F25  0BA6               	decfsz	??_EngBinState+1,f
  4678  0F26  2F23               	goto	u5327
  4679  0F27  0BA7               	decfsz	??_EngBinState+2,f
  4680  0F28  2F23               	goto	u5327
  4681  0F29  2F2A               	nop2
  4682                           
  4683                           ;newmain.c: 445: PORTCbits.RC2 = 1;
  4684  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  4685  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  4686  0F2C  1507               	bsf	7,2	;volatile
  4687                           
  4688                           ;newmain.c: 446: _delay((unsigned long)((2000)*(4000000/4000.0)));
  4689  0F2D  300B               	movlw	11
  4690  0F2E  00A7               	movwf	??_EngBinState+2
  4691  0F2F  3026               	movlw	38
  4692  0F30  00A6               	movwf	??_EngBinState+1
  4693  0F31  3066               	movlw	102
  4694  0F32  00A5               	movwf	??_EngBinState
  4695  0F33                     u5337:	
  4696  0F33  0BA5               	decfsz	??_EngBinState,f
  4697  0F34  2F33               	goto	u5337
  4698  0F35  0BA6               	decfsz	??_EngBinState+1,f
  4699  0F36  2F33               	goto	u5337
  4700  0F37  0BA7               	decfsz	??_EngBinState+2,f
  4701  0F38  2F33               	goto	u5337
  4702  0F39  2F3A               	nop2
  4703                           
  4704                           ;newmain.c: 447: PORTCbits.RC2 = 0;
  4705  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  4706  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  4707  0F3C  1107               	bcf	7,2	;volatile
  4708  0F3D                     l3659:	
  4709                           
  4710                           ;newmain.c: 448: }
  4711                           ;newmain.c: 449: if (BinSt == 0x15)
  4712  0F3D  0849               	movf	_BinSt,w
  4713  0F3E  3A15               	xorlw	21
  4714  0F3F  1D03               	skipz
  4715  0F40  2F46               	goto	l233
  4716                           
  4717                           ;newmain.c: 450: {
  4718                           ;newmain.c: 451: PORTCbits.RC3 = 0;
  4719  0F41  1187               	bcf	7,3	;volatile
  4720                           
  4721                           ;newmain.c: 452: BinSt = 0x14;
  4722  0F42  3014               	movlw	20
  4723  0F43  00C9               	movwf	_BinSt
  4724                           
  4725                           ;newmain.c: 453: NewBinTmr = 0x4;
  4726  0F44  3004               	movlw	4
  4727  0F45  00E5               	movwf	_NewBinTmr
  4728  0F46                     l233:	
  4729                           
  4730                           ;newmain.c: 454: }
  4731                           ;newmain.c: 455: if (EngSt == 5)
  4732  0F46  084B               	movf	_EngSt,w
  4733  0F47  3A05               	xorlw	5
  4734  0F48  1D03               	skipz
  4735  0F49  2F5E               	goto	l3671
  4736                           
  4737                           ;newmain.c: 456: {
  4738                           ;newmain.c: 457: EngSt = 4;
  4739  0F4A  3004               	movlw	4
  4740  0F4B  00CB               	movwf	_EngSt
  4741                           
  4742                           ;newmain.c: 458: NewASRTmr = 0x4;
  4743  0F4C  00E4               	movwf	_NewASRTmr
  4744                           
  4745                           ;newmain.c: 459: PORTCbits.RC1 = 1;
  4746  0F4D  1487               	bsf	7,1	;volatile
  4747                           
  4748                           ;newmain.c: 460: _delay((unsigned long)((500)*(4000000/4000.0)));
  4749  0F4E  3003               	movlw	3
  4750  0F4F  00A7               	movwf	??_EngBinState+2
  4751  0F50  308A               	movlw	138
  4752  0F51  00A6               	movwf	??_EngBinState+1
  4753  0F52  3056               	movlw	86
  4754  0F53  00A5               	movwf	??_EngBinState
  4755  0F54                     u5347:	
  4756  0F54  0BA5               	decfsz	??_EngBinState,f
  4757  0F55  2F54               	goto	u5347
  4758  0F56  0BA6               	decfsz	??_EngBinState+1,f
  4759  0F57  2F54               	goto	u5347
  4760  0F58  0BA7               	decfsz	??_EngBinState+2,f
  4761  0F59  2F54               	goto	u5347
  4762  0F5A  2F5B               	nop2
  4763                           
  4764                           ;newmain.c: 461: PORTCbits.RC1 = 0;
  4765  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  4766  0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  4767  0F5D  1087               	bcf	7,1	;volatile
  4768  0F5E                     l3671:	
  4769                           
  4770                           ;newmain.c: 462: }
  4771                           ;newmain.c: 463: }
  4772                           ;newmain.c: 469: if (!(PinState & (1 << 5)))
  4773  0F5E  1ACE               	btfsc	_PinState,5
  4774  0F5F  2F81               	goto	l3691
  4775                           
  4776                           ;newmain.c: 470: {
  4777                           ;newmain.c: 471: if (BinSt == 0 && EngSt == 0 &&
  4778                           ;newmain.c: 472: ASRONTmr == 0xFF && NewBinTmr == 0xFF && NewASRTmr == 0xFF)
  4779  0F60  08C9               	movf	_BinSt,f
  4780  0F61  1D03               	skipz
  4781  0F62  2FA2               	goto	l3709
  4782  0F63  08CB               	movf	_EngSt,f
  4783  0F64  1D03               	skipz
  4784  0F65  2FA2               	goto	l3709
  4785  0F66  0861               	movf	_ASRONTmr,w
  4786  0F67  3AFF               	xorlw	255
  4787  0F68  1D03               	skipz
  4788  0F69  2FA2               	goto	l3709
  4789  0F6A  0865               	movf	_NewBinTmr,w
  4790  0F6B  3AFF               	xorlw	255
  4791  0F6C  1D03               	skipz
  4792  0F6D  2FA2               	goto	l3709
  4793  0F6E  0864               	movf	_NewASRTmr,w
  4794  0F6F  3AFF               	xorlw	255
  4795  0F70  1D03               	skipz
  4796  0F71  2FA2               	goto	l3709
  4797  0F72  3080               	movlw	128
  4798                           
  4799                           ;newmain.c: 473: {
  4800                           ;newmain.c: 474: IntSvcSync &= ~0b00010000;
  4801  0F73  124C               	bcf	_IntSvcSync,4
  4802                           
  4803                           ;newmain.c: 476: if (TEB <= 0x7F)
  4804  0F74  025B               	subwf	_TEB,w
  4805  0F75  1803               	skipnc
  4806  0F76  2F7C               	goto	l237
  4807                           
  4808                           ;newmain.c: 477: {
  4809                           ;newmain.c: 478: BinSt = 0x11;
  4810  0F77  3011               	movlw	17
  4811  0F78  00C9               	movwf	_BinSt
  4812                           
  4813                           ;newmain.c: 479: NewBinTmr = 0x4;
  4814  0F79  3004               	movlw	4
  4815  0F7A  00E5               	movwf	_NewBinTmr
  4816                           
  4817                           ;newmain.c: 480: }
  4818  0F7B  2FA2               	goto	l3709
  4819  0F7C                     l237:	
  4820  0F7C  3004               	movlw	4
  4821                           
  4822                           ;newmain.c: 481: else
  4823                           ;newmain.c: 482: {
  4824                           ;newmain.c: 483: EngSt = 1;
  4825  0F7D  01CB               	clrf	_EngSt
  4826  0F7E  0ACB               	incf	_EngSt,f
  4827                           
  4828                           ;newmain.c: 484: NewASRTmr = 0x4;
  4829  0F7F  00E4               	movwf	_NewASRTmr
  4830  0F80  2FA2               	goto	l3709
  4831  0F81                     l3691:	
  4832                           
  4833                           ;newmain.c: 489: else
  4834                           ;newmain.c: 490: {
  4835                           ;newmain.c: 491: if (BinSt == 0x11)
  4836  0F81  0849               	movf	_BinSt,w
  4837  0F82  3A11               	xorlw	17
  4838  0F83  1D03               	skipz
  4839  0F84  2F8B               	goto	l3699
  4840                           
  4841                           ;newmain.c: 492: {
  4842                           ;newmain.c: 493: PORTCbits.RC3 = 1;
  4843  0F85  1587               	bsf	7,3	;volatile
  4844                           
  4845                           ;newmain.c: 494: NewBinTmr = 0x4;
  4846  0F86  3004               	movlw	4
  4847  0F87  00E5               	movwf	_NewBinTmr
  4848                           
  4849                           ;newmain.c: 495: BinSt = 0x12;
  4850  0F88  3012               	movlw	18
  4851  0F89  00C9               	movwf	_BinSt
  4852                           
  4853                           ;newmain.c: 496: WrLogEvent = 0;
  4854  0F8A  01A8               	clrf	EngBinState@WrLogEvent
  4855  0F8B                     l3699:	
  4856                           
  4857                           ;newmain.c: 498: }
  4858                           ;newmain.c: 499: if (EngSt == 1)
  4859  0F8B  034B               	decf	_EngSt,w
  4860  0F8C  1D03               	skipz
  4861  0F8D  2FA2               	goto	l3709
  4862                           
  4863                           ;newmain.c: 500: {
  4864                           ;newmain.c: 501: EngSt = 2;
  4865  0F8E  3002               	movlw	2
  4866                           
  4867                           ;newmain.c: 502: NewASRTmr = 0x4;
  4868                           
  4869                           ;newmain.c: 503: PORTCbits.RC1 = 1;
  4870  0F8F  27FB  158A         	fcall	PL28	;call to abstracted procedure
  4871                           
  4872                           ;newmain.c: 504: _delay((unsigned long)((500)*(4000000/4000.0)));
  4873  0F91  3003               	movlw	3
  4874  0F92  00A7               	movwf	??_EngBinState+2
  4875  0F93  308A               	movlw	138
  4876  0F94  00A6               	movwf	??_EngBinState+1
  4877  0F95  3056               	movlw	86
  4878  0F96  00A5               	movwf	??_EngBinState
  4879  0F97                     u5357:	
  4880  0F97  0BA5               	decfsz	??_EngBinState,f
  4881  0F98  2F97               	goto	u5357
  4882  0F99  0BA6               	decfsz	??_EngBinState+1,f
  4883  0F9A  2F97               	goto	u5357
  4884  0F9B  0BA7               	decfsz	??_EngBinState+2,f
  4885  0F9C  2F97               	goto	u5357
  4886  0F9D  2F9E               	nop2
  4887                           
  4888                           ;newmain.c: 505: PORTCbits.RC1 = 0;
  4889  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  4890  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  4891  0FA0  1087               	bcf	7,1	;volatile
  4892                           
  4893                           ;newmain.c: 506: WrLogEvent = 0;
  4894  0FA1  01A8               	clrf	EngBinState@WrLogEvent
  4895  0FA2                     l3709:	
  4896                           
  4897                           ;newmain.c: 508: }
  4898                           ;newmain.c: 509: }
  4899                           ;newmain.c: 515: if (ASRONTmr == 0)
  4900  0FA2  08E1               	movf	_ASRONTmr,f
  4901  0FA3  1D03               	skipz
  4902  0FA4  2FC3               	goto	l3725
  4903                           
  4904                           ;newmain.c: 516: {
  4905                           ;newmain.c: 517: ASRONTmr = 0xFF;
  4906  0FA5  30FF               	movlw	255
  4907  0FA6  00E1               	movwf	_ASRONTmr
  4908                           
  4909                           ;newmain.c: 518: if (EngSt == 0 && BinSt == 0)
  4910  0FA7  08CB               	movf	_EngSt,f
  4911  0FA8  1D03               	skipz
  4912  0FA9  2FC3               	goto	l3725
  4913  0FAA  08C9               	movf	_BinSt,f
  4914  0FAB  1D03               	skipz
  4915  0FAC  2FC3               	goto	l3725
  4916                           
  4917                           ;newmain.c: 519: {
  4918                           ;newmain.c: 520: EngSt = 2;
  4919  0FAD  3002               	movlw	2
  4920  0FAE  00CB               	movwf	_EngSt
  4921                           
  4922                           ;newmain.c: 521: PORTCbits.RC1 = 1;
  4923  0FAF  1487               	bsf	7,1	;volatile
  4924                           
  4925                           ;newmain.c: 522: _delay((unsigned long)((500)*(4000000/4000.0)));
  4926  0FB0  3003               	movlw	3
  4927  0FB1  00A7               	movwf	??_EngBinState+2
  4928  0FB2  308A               	movlw	138
  4929  0FB3  00A6               	movwf	??_EngBinState+1
  4930  0FB4  3056               	movlw	86
  4931  0FB5  00A5               	movwf	??_EngBinState
  4932  0FB6                     u5367:	
  4933  0FB6  0BA5               	decfsz	??_EngBinState,f
  4934  0FB7  2FB6               	goto	u5367
  4935  0FB8  0BA6               	decfsz	??_EngBinState+1,f
  4936  0FB9  2FB6               	goto	u5367
  4937  0FBA  0BA7               	decfsz	??_EngBinState+2,f
  4938  0FBB  2FB6               	goto	u5367
  4939  0FBC  2FBD               	nop2
  4940                           
  4941                           ;newmain.c: 523: PORTCbits.RC1 = 0;
  4942  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  4943  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  4944  0FBF  1087               	bcf	7,1	;volatile
  4945                           
  4946                           ;newmain.c: 524: NewASRTmr = 0x4;
  4947  0FC0  3004               	movlw	4
  4948  0FC1  00E4               	movwf	_NewASRTmr
  4949                           
  4950                           ;newmain.c: 525: WrLogEvent = 0;
  4951  0FC2  01A8               	clrf	EngBinState@WrLogEvent
  4952  0FC3                     l3725:	
  4953                           
  4954                           ;newmain.c: 527: }
  4955                           ;newmain.c: 528: }
  4956                           ;newmain.c: 534: if (UbattTmr == 0xF8 && BinSt == 0 && EngSt == 0 &&
  4957                           ;newmain.c: 535: ASRONTmr == 0xFF && NewBinTmr == 0xFF && NewASRTmr == 0xFF)
  4958  0FC3  0866               	movf	_UbattTmr,w
  4959  0FC4  3AF8               	xorlw	248
  4960  0FC5  1D03               	skipz
  4961  0FC6  2FF9               	goto	l244
  4962  0FC7  08C9               	movf	_BinSt,f
  4963  0FC8  1D03               	skipz
  4964  0FC9  2FF9               	goto	l244
  4965  0FCA  08CB               	movf	_EngSt,f
  4966  0FCB  1D03               	skipz
  4967  0FCC  2FF9               	goto	l244
  4968  0FCD  0861               	movf	_ASRONTmr,w
  4969  0FCE  3AFF               	xorlw	255
  4970  0FCF  1D03               	skipz
  4971  0FD0  2FF9               	goto	l244
  4972  0FD1  0865               	movf	_NewBinTmr,w
  4973  0FD2  3AFF               	xorlw	255
  4974  0FD3  1D03               	skipz
  4975  0FD4  2FF9               	goto	l244
  4976  0FD5  0864               	movf	_NewASRTmr,w
  4977  0FD6  3AFF               	xorlw	255
  4978  0FD7  1D03               	skipz
  4979  0FD8  2FF9               	goto	l244
  4980  0FD9  3080               	movlw	128
  4981                           
  4982                           ;newmain.c: 536: {
  4983                           ;newmain.c: 537: IntSvcSync |= 0b00010000;
  4984  0FDA  164C               	bsf	_IntSvcSync,4
  4985                           
  4986                           ;newmain.c: 538: if (TEB <= 0x7F)
  4987  0FDB  025B               	subwf	_TEB,w
  4988  0FDC  1803               	skipnc
  4989  0FDD  2FE4               	goto	l3745
  4990                           
  4991                           ;newmain.c: 539: {
  4992                           ;newmain.c: 540: PORTCbits.RC3 = 1;
  4993  0FDE  1587               	bsf	7,3	;volatile
  4994                           
  4995                           ;newmain.c: 541: NewBinTmr = 0x4;
  4996  0FDF  3004               	movlw	4
  4997  0FE0  00E5               	movwf	_NewBinTmr
  4998                           
  4999                           ;newmain.c: 542: BinSt = 0x12;
  5000  0FE1  3012               	movlw	18
  5001  0FE2  00C9               	movwf	_BinSt
  5002  0FE3  2FF7               	goto	L31
  5003  0FE4                     l3745:	
  5004                           ;newmain.c: 545: }
  5005                           
  5006                           ;newmain.c: 543: WrLogEvent = 6;
  5007                           
  5008                           
  5009                           ;newmain.c: 546: else
  5010                           ;newmain.c: 547: {
  5011                           ;newmain.c: 548: EngSt = 2;
  5012  0FE4  3002               	movlw	2
  5013                           
  5014                           ;newmain.c: 549: NewASRTmr = 0x4;
  5015                           
  5016                           ;newmain.c: 550: PORTCbits.RC1 = 1;
  5017  0FE5  27FB  158A         	fcall	PL28	;call to abstracted procedure
  5018                           
  5019                           ;newmain.c: 551: _delay((unsigned long)((500)*(4000000/4000.0)));
  5020  0FE7  3003               	movlw	3
  5021  0FE8  00A7               	movwf	??_EngBinState+2
  5022  0FE9  308A               	movlw	138
  5023  0FEA  00A6               	movwf	??_EngBinState+1
  5024  0FEB  3056               	movlw	86
  5025  0FEC  00A5               	movwf	??_EngBinState
  5026  0FED                     u5377:	
  5027  0FED  0BA5               	decfsz	??_EngBinState,f
  5028  0FEE  2FED               	goto	u5377
  5029  0FEF  0BA6               	decfsz	??_EngBinState+1,f
  5030  0FF0  2FED               	goto	u5377
  5031  0FF1  0BA7               	decfsz	??_EngBinState+2,f
  5032  0FF2  2FED               	goto	u5377
  5033  0FF3  2FF4               	nop2
  5034                           
  5035                           ;newmain.c: 552: PORTCbits.RC1 = 0;
  5036  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0FF6  1087               	bcf	7,1	;volatile
  5039  0FF7                     L31:	
  5040                           
  5041                           ;newmain.c: 553: WrLogEvent = 6;
  5042  0FF7  3006               	movlw	6
  5043  0FF8  00A8               	movwf	EngBinState@WrLogEvent
  5044  0FF9                     l244:	
  5045                           
  5046                           ;newmain.c: 555: }
  5047                           ;newmain.c: 556: }
  5048                           ;newmain.c: 557: return (WrLogEvent);
  5049  0FF9  0828               	movf	EngBinState@WrLogEvent,w
  5050  0FFA  0008               	return
  5051  0FFB                     __end_of_EngBinState:	
  5052  0FFB                     PL28:	
  5053  0FFB  00CB               	movwf	_EngSt
  5054  0FFC  3004               	movlw	4
  5055  0FFD  00E4               	movwf	_NewASRTmr
  5056  0FFE  1487               	bsf	7,1	;volatile
  5057  0FFF  0008               	return
  5058  1000                     __end_ofPL28:	
  5059                           
  5060                           	psect	text15
  5061  07D3                     __ptext15:	
  5062 ;; *************** function _DetectReset *****************
  5063 ;; Defined at:
  5064 ;;		line 1049 in file "newmain.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      unsigned char 
  5071 ;; Registers used:
  5072 ;;		wreg
  5073 ;; Tracked objects:
  5074 ;;		On entry : 60/0
  5075 ;;		On exit  : 60/20
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5078 ;;      Params:         0       0       0       0
  5079 ;;      Locals:         0       0       0       0
  5080 ;;      Temps:          0       0       0       0
  5081 ;;      Totals:         0       0       0       0
  5082 ;;Total ram usage:        0 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    4
  5085 ;; This function calls:
  5086 ;;		Nothing
  5087 ;; This function is called by:
  5088 ;;		_main
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           
  5093                           ;psect for function _DetectReset
  5094  07D3                     _DetectReset:	
  5095                           
  5096                           ;newmain.c: 1051: if (!PCONbits.nPOR && STATUSbits.nTO && STATUSbits.nPD)
  5097                           
  5098                           ;incstack = 0
  5099                           ; Regs used in _DetectReset: [wreg]
  5100  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  5101  07D4  1C8E               	btfss	14,1	;volatile
  5102  07D5  1E03               	btfss	3,4	;volatile
  5103  07D6  2FD9               	goto	l396
  5104  07D7  1983               	btfsc	3,3	;volatile
  5105                           
  5106                           ;newmain.c: 1052: return 1;
  5107  07D8  3401               	retlw	1
  5108  07D9                     l396:	
  5109                           
  5110                           ;newmain.c: 1053: if (!PCONbits.nBOR && STATUSbits.nTO && STATUSbits.nPD)
  5111  07D9  1C0E               	btfss	14,0	;volatile
  5112  07DA  1E03               	btfss	3,4	;volatile
  5113  07DB  2FDE               	goto	l398
  5114  07DC  1983               	btfsc	3,3	;volatile
  5115                           
  5116                           ;newmain.c: 1054: return 2;
  5117  07DD  3402               	retlw	2
  5118  07DE                     l398:	
  5119                           
  5120                           ;newmain.c: 1055: if (!STATUSbits.nTO && !STATUSbits.nPD)
  5121  07DE  1E03               	btfss	3,4	;volatile
  5122  07DF  1983               	btfsc	3,3	;volatile
  5123  07E0  2FE2               	goto	l399
  5124                           
  5125                           ;newmain.c: 1056: return 4;
  5126  07E1  3404               	retlw	4
  5127  07E2                     l399:	
  5128                           
  5129                           ;newmain.c: 1057: if (STATUSbits.nTO && !STATUSbits.nPD)
  5130  07E2  1A03               	btfsc	3,4	;volatile
  5131  07E3  1983               	btfsc	3,3	;volatile
  5132  07E4  2FE6               	goto	l400
  5133                           
  5134                           ;newmain.c: 1058: return 5;
  5135  07E5  3405               	retlw	5
  5136  07E6                     l400:	
  5137                           
  5138                           ;newmain.c: 1059: if (!STATUSbits.nTO)
  5139  07E6  1E03               	btfss	3,4	;volatile
  5140                           
  5141                           ;newmain.c: 1060: return 3;
  5142  07E7  3403               	retlw	3
  5143  07E8  3406               	retlw	6
  5144  07E9                     __end_of_DetectReset:	
  5145                           ;newmain.c: 1061: return 6;
  5146                           
  5147                           
  5148                           	psect	text16
  5149  063E                     __ptext16:	
  5150 ;; *************** function _CheckRes *****************
  5151 ;; Defined at:
  5152 ;;		line 97 in file "PinsCheck.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  Te              1   16[BANK0 ] unsigned char 
  5157 ;;  Ub              1   15[BANK0 ] unsigned char 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;		None               void
  5160 ;; Registers used:
  5161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 60/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5167 ;;      Params:         0       0       0       0
  5168 ;;      Locals:         0       2       0       0
  5169 ;;      Temps:          0       2       0       0
  5170 ;;      Totals:         0       4       0       0
  5171 ;;Total ram usage:        4 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    6
  5174 ;; This function calls:
  5175 ;;		_StartCheck
  5176 ;;		___awdiv
  5177 ;;		_decr_check_times
  5178 ;; This function is called by:
  5179 ;;		_main
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           
  5184                           ;psect for function _CheckRes
  5185  063E                     _CheckRes:	
  5186                           
  5187                           ;PinsCheck.c: 99: if (CheckedNow == 1 || CheckedNow == 5 || CheckedNow == 3 || CheckedNo
      +                          w == 4 || CheckedNow == 6 || CheckedNow == 2)
  5188                           
  5189                           ;incstack = 0
  5190                           ; Regs used in _CheckRes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5191  063E  0362               	decf	_CheckedNow,w
  5192  063F  1903               	skipnz
  5193  0640  2E6B               	goto	l4059
  5194  0641  0862               	movf	_CheckedNow,w
  5195  0642  3A05               	xorlw	5
  5196  0643  1903               	skipnz
  5197  0644  2E6B               	goto	l4059
  5198  0645  0862               	movf	_CheckedNow,w
  5199  0646  3A03               	xorlw	3
  5200  0647  1903               	skipnz
  5201  0648  2E6B               	goto	l4059
  5202  0649  0862               	movf	_CheckedNow,w
  5203  064A  3A04               	xorlw	4
  5204  064B  1903               	skipnz
  5205  064C  2E6B               	goto	l4059
  5206  064D  0862               	movf	_CheckedNow,w
  5207  064E  3A06               	xorlw	6
  5208  064F  1903               	skipnz
  5209  0650  2E6B               	goto	l4059
  5210  0651  0862               	movf	_CheckedNow,w
  5211  0652  3A02               	xorlw	2
  5212  0653  1903               	btfsc	3,2
  5213  0654  2E6B               	goto	l4059
  5214  0655  2E87               	goto	l4065
  5215  0656                     l484:	
  5216                           ;PinsCheck.c: 102: {
  5217                           ;PinsCheck.c: 103: case 1:
  5218                           
  5219                           
  5220                           ;PinsCheck.c: 104: if (PORTBbits.RB7)
  5221  0656  1F86               	btfss	6,7	;volatile
  5222  0657  2E5A               	goto	l4035
  5223  0658                     l4033:	
  5224                           
  5225                           ;PinsCheck.c: 105: NewState++;
  5226  0658  0ACD               	incf	_NewState,f
  5227  0659  2E7F               	goto	l4061
  5228  065A                     l4035:	
  5229                           
  5230                           ;PinsCheck.c: 106: else
  5231                           ;PinsCheck.c: 107: NewState--;
  5232  065A  03CD               	decf	_NewState,f
  5233  065B  2E7F               	goto	l4061
  5234  065C                     l488:	
  5235                           ;PinsCheck.c: 109: case 5:
  5236                           
  5237                           
  5238                           ;PinsCheck.c: 110: if (PORTBbits.RB5)
  5239  065C  1A86               	btfsc	6,5	;volatile
  5240  065D  2E58               	goto	l4033
  5241  065E  2E5A               	goto	l4035
  5242  065F                     l491:	
  5243                           ;PinsCheck.c: 115: case 3:
  5244                           
  5245                           
  5246                           ;PinsCheck.c: 116: if (!PORTCbits.RC5)
  5247  065F  1E87               	btfss	7,5	;volatile
  5248  0660  2E58               	goto	l4033
  5249  0661  2E5A               	goto	l4035
  5250  0662                     l494:	
  5251                           ;PinsCheck.c: 121: case 4:
  5252                           
  5253                           
  5254                           ;PinsCheck.c: 122: if (!PORTCbits.RC4)
  5255  0662  1E07               	btfss	7,4	;volatile
  5256  0663  2E58               	goto	l4033
  5257  0664  2E5A               	goto	l4035
  5258  0665                     l497:	
  5259                           ;PinsCheck.c: 127: case 6:
  5260                           
  5261                           
  5262                           ;PinsCheck.c: 128: if (!PORTAbits.RA2)
  5263  0665  1D05               	btfss	5,2	;volatile
  5264  0666  2E58               	goto	l4033
  5265  0667  2E5A               	goto	l4035
  5266  0668                     l500:	
  5267                           ;PinsCheck.c: 133: case 2:
  5268                           
  5269                           
  5270                           ;PinsCheck.c: 134: if (!PORTCbits.RC6)
  5271  0668  1F07               	btfss	7,6	;volatile
  5272  0669  2E58               	goto	l4033
  5273  066A  2E5A               	goto	l4035
  5274  066B                     l4059:	
  5275  066B  0862               	movf	_CheckedNow,w
  5276                           
  5277                           ; Switch size 1, requested type "space"
  5278                           ; Number of cases is 6, Range of values is 1 to 6
  5279                           ; switch strategies available:
  5280                           ; Name         Instructions Cycles
  5281                           ; simple_byte           19    10 (average)
  5282                           ; direct_byte           22    10 (fixed)
  5283                           ; jumptable            263     9 (fixed)
  5284                           ;	Chosen strategy is simple_byte
  5285  066C  3A01               	xorlw	1	; case 1
  5286  066D  1903               	skipnz
  5287  066E  2E56               	goto	l484
  5288  066F  3A03               	xorlw	3	; case 2
  5289  0670  1903               	skipnz
  5290  0671  2E68               	goto	l500
  5291  0672  3A01               	xorlw	1	; case 3
  5292  0673  1903               	skipnz
  5293  0674  2E5F               	goto	l491
  5294  0675  3A07               	xorlw	7	; case 4
  5295  0676  1903               	skipnz
  5296  0677  2E62               	goto	l494
  5297  0678  3A01               	xorlw	1	; case 5
  5298  0679  1903               	skipnz
  5299  067A  2E5C               	goto	l488
  5300  067B  3A03               	xorlw	3	; case 6
  5301  067C  1903               	skipnz
  5302  067D  2E65               	goto	l497
  5303  067E  2E7F               	goto	l4061
  5304  067F                     l4061:	
  5305                           
  5306                           ;PinsCheck.c: 140: if (decr_check_times ())
  5307  067F  2710  118A         	fcall	_decr_check_times
  5308  0681  3A00               	xorlw	0
  5309  0682  1903               	skipnz
  5310  0683  2E87               	goto	l4065
  5311                           
  5312                           ;PinsCheck.c: 141: {
  5313                           ;PinsCheck.c: 142: StartCheck (1);
  5314  0684  3001               	movlw	1
  5315  0685  274A  118A         	fcall	_StartCheck
  5316  0687                     l4065:	
  5317                           
  5318                           ;PinsCheck.c: 145: }
  5319                           ;PinsCheck.c: 147: }
  5320                           ;PinsCheck.c: 150: if (PIR1bits.ADIF)
  5321  0687  1283               	bcf	3,5	;RP0=0, select bank0
  5322  0688  1303               	bcf	3,6	;RP1=0, select bank0
  5323  0689  1F0C               	btfss	12,6	;volatile
  5324  068A  0008               	return
  5325                           
  5326                           ;PinsCheck.c: 151: {
  5327                           ;PinsCheck.c: 152: PIR1bits.ADIF = 0;
  5328  068B  130C               	bcf	12,6	;volatile
  5329                           
  5330                           ;PinsCheck.c: 153: if (CheckedNow == 0 || CheckedNow == 7)
  5331  068C  0862               	movf	_CheckedNow,w
  5332  068D  1903               	btfsc	3,2
  5333  068E  2E93               	goto	l4073
  5334  068F  0862               	movf	_CheckedNow,w
  5335  0690  3A07               	xorlw	7
  5336  0691  1D03               	skipz
  5337  0692  2EC4               	goto	l505
  5338  0693                     l4073:	
  5339                           
  5340                           ;PinsCheck.c: 154: {
  5341                           ;PinsCheck.c: 155: unsigned char Ub, Te;
  5342                           ;PinsCheck.c: 156: if (CheckedNow == 0)
  5343  0693  08E2               	movf	_CheckedNow,f
  5344  0694  1D03               	skipz
  5345  0695  2EAB               	goto	l4083
  5346                           
  5347                           ;PinsCheck.c: 157: {
  5348                           ;PinsCheck.c: 158: Ub = (ADRESH << 7) | (ADRESL >> 1);
  5349  0696  1683               	bsf	3,5	;RP0=1, select bank1
  5350  0697  081E               	movf	30,w	;volatile
  5351  0698  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0699  27BD  118A         	fcall	PL6	;call to abstracted procedure
  5353  069B  00AF               	movwf	CheckRes@Ub
  5354                           
  5355                           ;PinsCheck.c: 159: if (Ubatt == 0)
  5356  069C  08DE               	movf	_Ubatt,f
  5357  069D  1D03               	skipz
  5358  069E  2EA1               	goto	l4081
  5359                           
  5360                           ;PinsCheck.c: 160: Ubatt = Ub;
  5361  069F  082F               	movf	CheckRes@Ub,w
  5362  06A0  2EAA               	goto	L34
  5363  06A1                     l4081:	
  5364                           
  5365                           ;PinsCheck.c: 161: else
  5366                           ;PinsCheck.c: 162: Ubatt = (Ub + Ubatt) / 2;
  5367  06A1  082F               	movf	CheckRes@Ub,w
  5368  06A2  00A7               	movwf	___awdiv@dividend
  5369  06A3  01A8               	clrf	___awdiv@dividend+1
  5370  06A4  085E               	movf	_Ubatt,w
  5371  06A5  27CC  118A         	fcall	PL22	;call to abstracted procedure
  5372  06A7  26CB  118A         	fcall	___awdiv
  5373  06A9  0825               	movf	?___awdiv,w
  5374  06AA                     L34:	
  5375  06AA  00DE               	movwf	_Ubatt
  5376  06AB                     l4083:	
  5377                           
  5378                           ;PinsCheck.c: 163: }
  5379                           ;PinsCheck.c: 164: if (CheckedNow == 7)
  5380  06AB  0862               	movf	_CheckedNow,w
  5381  06AC  3A07               	xorlw	7
  5382  06AD  1D03               	skipz
  5383  06AE  2EC4               	goto	l505
  5384                           
  5385                           ;PinsCheck.c: 165: {
  5386                           ;PinsCheck.c: 166: Te = (ADRESH << 7) | (ADRESL >> 1);
  5387  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  5388  06B0  081E               	movf	30,w	;volatile
  5389  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  5390  06B2  27BD  118A         	fcall	PL6	;call to abstracted procedure
  5391  06B4  00B0               	movwf	CheckRes@Te
  5392                           
  5393                           ;PinsCheck.c: 167: if (Teng == 0)
  5394  06B5  08DD               	movf	_Teng,f
  5395  06B6  1D03               	skipz
  5396  06B7  2EBA               	goto	l4091
  5397                           
  5398                           ;PinsCheck.c: 168: Teng = Te;
  5399  06B8  0830               	movf	CheckRes@Te,w
  5400  06B9  2EC3               	goto	L35
  5401  06BA                     l4091:	
  5402                           
  5403                           ;PinsCheck.c: 169: else
  5404                           ;PinsCheck.c: 170: Teng = (Te + Teng) / 2;
  5405  06BA  0830               	movf	CheckRes@Te,w
  5406  06BB  00A7               	movwf	___awdiv@dividend
  5407  06BC  01A8               	clrf	___awdiv@dividend+1
  5408  06BD  085D               	movf	_Teng,w
  5409  06BE  27CC  118A         	fcall	PL22	;call to abstracted procedure
  5410  06C0  26CB  118A         	fcall	___awdiv
  5411  06C2  0825               	movf	?___awdiv,w
  5412  06C3                     L35:	
  5413  06C3  00DD               	movwf	_Teng
  5414  06C4                     l505:	
  5415                           
  5416                           ;PinsCheck.c: 171: }
  5417                           ;PinsCheck.c: 172: }
  5418                           ;PinsCheck.c: 180: if (decr_check_times ())
  5419  06C4  2710  118A         	fcall	_decr_check_times
  5420  06C6  3A00               	xorlw	0
  5421  06C7  1903               	skipnz
  5422  06C8  0008               	return
  5423                           
  5424                           ;PinsCheck.c: 181: {
  5425                           ;PinsCheck.c: 182: StartCheck (1);
  5426  06C9  3001               	movlw	1
  5427  06CA  2F4A               	ljmp	_StartCheck
  5428  06CB                     __end_of_CheckRes:	
  5429  06CB                     __ptext18:	
  5430 ;; *************** function ___awdiv *****************
  5431 ;; Defined at:
  5432 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  divisor         2    5[BANK0 ] int 
  5435 ;;  dividend        2    7[BANK0 ] int 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  quotient        2   11[BANK0 ] int 
  5438 ;;  sign            1   10[BANK0 ] unsigned char 
  5439 ;;  counter         1    9[BANK0 ] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  2    5[BANK0 ] int 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 60/0
  5446 ;;		On exit  : 60/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5449 ;;      Params:         0       4       0       0
  5450 ;;      Locals:         0       4       0       0
  5451 ;;      Temps:          0       0       0       0
  5452 ;;      Totals:         0       8       0       0
  5453 ;;Total ram usage:        8 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    4
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_CheckRes
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           
  5464                           ;psect for function ___awdiv
  5465  06CB                     ___awdiv:	
  5466                           
  5467                           ;incstack = 0
  5468                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5469  06CB  01AA               	clrf	___awdiv@sign
  5470  06CC  1FA6               	btfss	___awdiv@divisor+1,7
  5471  06CD  2ED5               	goto	l3155
  5472  06CE  09A5               	comf	___awdiv@divisor,f
  5473  06CF  09A6               	comf	___awdiv@divisor+1,f
  5474  06D0  0AA5               	incf	___awdiv@divisor,f
  5475  06D1  1903               	skipnz
  5476  06D2  0AA6               	incf	___awdiv@divisor+1,f
  5477  06D3  01AA               	clrf	___awdiv@sign
  5478  06D4  0AAA               	incf	___awdiv@sign,f
  5479  06D5                     l3155:	
  5480  06D5  1FA8               	btfss	___awdiv@dividend+1,7
  5481  06D6  2EDE               	goto	l3161
  5482  06D7  09A7               	comf	___awdiv@dividend,f
  5483  06D8  09A8               	comf	___awdiv@dividend+1,f
  5484  06D9  0AA7               	incf	___awdiv@dividend,f
  5485  06DA  1903               	skipnz
  5486  06DB  0AA8               	incf	___awdiv@dividend+1,f
  5487  06DC  3001               	movlw	1
  5488  06DD  06AA               	xorwf	___awdiv@sign,f
  5489  06DE                     l3161:	
  5490  06DE  01AB               	clrf	___awdiv@quotient
  5491  06DF  01AC               	clrf	___awdiv@quotient+1
  5492  06E0  0826               	movf	___awdiv@divisor+1,w
  5493  06E1  0425               	iorwf	___awdiv@divisor,w
  5494  06E2  1903               	skipnz
  5495  06E3  2F03               	goto	l3183
  5496  06E4  01A9               	clrf	___awdiv@counter
  5497  06E5                     L37:	
  5498  06E5  0AA9               	incf	___awdiv@counter,f
  5499  06E6  1BA6               	btfsc	___awdiv@divisor+1,7
  5500  06E7  2EEC               	goto	l3171
  5501  06E8  1003               	clrc
  5502  06E9  0DA5               	rlf	___awdiv@divisor,f
  5503  06EA  0DA6               	rlf	___awdiv@divisor+1,f
  5504  06EB  2EE5               	goto	L37
  5505  06EC                     l3171:	
  5506  06EC  1003               	clrc
  5507  06ED  0DAB               	rlf	___awdiv@quotient,f
  5508  06EE  0DAC               	rlf	___awdiv@quotient+1,f
  5509  06EF  0826               	movf	___awdiv@divisor+1,w
  5510  06F0  0228               	subwf	___awdiv@dividend+1,w
  5511  06F1  1D03               	skipz
  5512  06F2  2EF5               	goto	u3375
  5513  06F3  0825               	movf	___awdiv@divisor,w
  5514  06F4  0227               	subwf	___awdiv@dividend,w
  5515  06F5                     u3375:	
  5516  06F5  1C03               	skipc
  5517  06F6  2EFF               	goto	L38
  5518  06F7  0825               	movf	___awdiv@divisor,w
  5519  06F8  02A7               	subwf	___awdiv@dividend,f
  5520  06F9  0826               	movf	___awdiv@divisor+1,w
  5521  06FA  1C03               	skipc
  5522  06FB  03A8               	decf	___awdiv@dividend+1,f
  5523  06FC  02A8               	subwf	___awdiv@dividend+1,f
  5524  06FD  142B               	bsf	___awdiv@quotient,0
  5525  06FE  1003               	clrc
  5526  06FF                     L38:	
  5527  06FF  0CA6               	rrf	___awdiv@divisor+1,f
  5528  0700  0CA5               	rrf	___awdiv@divisor,f
  5529  0701  0BA9               	decfsz	___awdiv@counter,f
  5530  0702  2EEC               	goto	l3171
  5531  0703                     l3183:	
  5532  0703  082A               	movf	___awdiv@sign,w
  5533  0704  1903               	btfsc	3,2
  5534  0705  2F0B               	goto	l3187
  5535  0706  09AB               	comf	___awdiv@quotient,f
  5536  0707  09AC               	comf	___awdiv@quotient+1,f
  5537  0708  0AAB               	incf	___awdiv@quotient,f
  5538  0709  1903               	skipnz
  5539  070A  0AAC               	incf	___awdiv@quotient+1,f
  5540  070B                     l3187:	
  5541  070B  082C               	movf	___awdiv@quotient+1,w
  5542  070C  00A6               	movwf	?___awdiv+1
  5543  070D  082B               	movf	___awdiv@quotient,w
  5544  070E  00A5               	movwf	?___awdiv
  5545  070F  0008               	return
  5546  0710                     __end_of___awdiv:	
  5547  0710                     __ptext17:	
  5548 ;; *************** function _decr_check_times *****************
  5549 ;; Defined at:
  5550 ;;		line 76 in file "PinsCheck.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;		None
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      unsigned char 
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0
  5559 ;; Tracked objects:
  5560 ;;		On entry : 60/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5564 ;;      Params:         0       0       0       0
  5565 ;;      Locals:         0       0       0       0
  5566 ;;      Temps:          0       2       0       0
  5567 ;;      Totals:         0       2       0       0
  5568 ;;Total ram usage:        2 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    4
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_CheckRes
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _decr_check_times
  5580  0710                     _decr_check_times:	
  5581                           
  5582                           ;PinsCheck.c: 78: CheckTimes--;
  5583                           
  5584                           ;incstack = 0
  5585                           ; Regs used in _decr_check_times: [wreg+status,2+status,0]
  5586  0710  0BCA               	decfsz	_CheckTimes,f
  5587                           
  5588                           ;PinsCheck.c: 79: if (!CheckTimes)
  5589  0711  2F40               	goto	l3143
  5590                           
  5591                           ;PinsCheck.c: 80: {
  5592                           ;PinsCheck.c: 81: if (NewState >= 0x80 + 3)
  5593  0712  3083               	movlw	131
  5594  0713  024D               	subwf	_NewState,w
  5595  0714  1C03               	skipc
  5596  0715  2F21               	goto	l3131
  5597                           
  5598                           ;PinsCheck.c: 82: ((PinState) |= 1UL << (CheckedNow));
  5599  0716  3001               	movlw	1
  5600  0717  00A5               	movwf	??_decr_check_times
  5601  0718  0A62               	incf	_CheckedNow,w
  5602  0719  2F1C               	goto	u3294
  5603  071A                     u3295:	
  5604  071A  1003               	clrc
  5605  071B  0DA5               	rlf	??_decr_check_times,f
  5606  071C                     u3294:	
  5607  071C  3EFF               	addlw	-1
  5608  071D  1D03               	skipz
  5609  071E  2F1A               	goto	u3295
  5610  071F  0825               	movf	??_decr_check_times,w
  5611  0720  04CE               	iorwf	_PinState,f
  5612  0721                     l3131:	
  5613                           
  5614                           ;PinsCheck.c: 83: if (NewState <= 0x80 - 3)
  5615  0721  307E               	movlw	126
  5616  0722  024D               	subwf	_NewState,w
  5617                           
  5618                           ;PinsCheck.c: 84: ((PinState) &= ~(1UL << (CheckedNow)));
  5619  0723  3001               	movlw	1
  5620  0724  00A5               	movwf	??_decr_check_times
  5621  0725  0A62               	incf	_CheckedNow,w
  5622  0726  1803               	skipnc
  5623  0727  2F37               	goto	u3324
  5624  0728  2F2B               	goto	u3314
  5625  0729                     u3315:	
  5626  0729  1003               	clrc
  5627  072A  0DA5               	rlf	??_decr_check_times,f
  5628  072B                     u3314:	
  5629  072B  3EFF               	addlw	-1
  5630  072C  1D03               	skipz
  5631  072D  2F29               	goto	u3315
  5632  072E  0825               	movf	??_decr_check_times,w
  5633  072F  3AFF               	xorlw	255
  5634  0730  05CE               	andwf	_PinState,f
  5635                           
  5636                           ;PinsCheck.c: 86: ((ToCheck) &= ~(1UL << (CheckedNow)));
  5637  0731  3001               	movlw	1
  5638  0732  00A5               	movwf	??_decr_check_times
  5639  0733  0A62               	incf	_CheckedNow,w
  5640  0734  2F37               	goto	u3324
  5641  0735                     u3325:	
  5642  0735  1003               	clrc
  5643  0736  0DA5               	rlf	??_decr_check_times,f
  5644  0737                     u3324:	
  5645  0737  3EFF               	addlw	-1
  5646  0738  1D03               	skipz
  5647  0739  2F35               	goto	u3325
  5648  073A  0825               	movf	??_decr_check_times,w
  5649  073B  3AFF               	xorlw	255
  5650  073C  05D1               	andwf	_ToCheck,f
  5651                           
  5652                           ;PinsCheck.c: 87: CheckedNow = 9;
  5653  073D  3009               	movlw	9
  5654  073E  00E2               	movwf	_CheckedNow
  5655                           
  5656                           ;PinsCheck.c: 88: return 0;
  5657  073F  3400               	retlw	0
  5658  0740                     l3143:	
  5659                           
  5660                           ;PinsCheck.c: 90: else
  5661                           ;PinsCheck.c: 91: {
  5662                           ;PinsCheck.c: 92: _delay((unsigned long)((3*3/3)*(4000000/4000.0)));
  5663  0740  3004               	movlw	4
  5664  0741  00A6               	movwf	??_decr_check_times+1
  5665  0742  30E4               	movlw	228
  5666  0743  00A5               	movwf	??_decr_check_times
  5667  0744                     u5387:	
  5668  0744  0BA5               	decfsz	??_decr_check_times,f
  5669  0745  2F44               	goto	u5387
  5670  0746  0BA6               	decfsz	??_decr_check_times+1,f
  5671  0747  2F44               	goto	u5387
  5672  0748  0000               	nop
  5673                           
  5674                           ;PinsCheck.c: 93: return 1;
  5675  0749  3401               	retlw	1
  5676  074A                     __end_of_decr_check_times:	
  5677  074A                     __ptext19:	
  5678 ;; *************** function _StartCheck *****************
  5679 ;; Defined at:
  5680 ;;		line 9 in file "PinsCheck.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  OnceMore        1    wreg     unsigned char 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  OnceMore        1   10[BANK0 ] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      unsigned char 
  5687 ;; Registers used:
  5688 ;;		wreg, status,2, status,0, pclath, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 60/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5694 ;;      Params:         0       0       0       0
  5695 ;;      Locals:         0       1       0       0
  5696 ;;      Temps:          0       0       0       0
  5697 ;;      Totals:         0       1       0       0
  5698 ;;Total ram usage:        1 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    5
  5701 ;; This function calls:
  5702 ;;		_ADC_Start
  5703 ;; This function is called by:
  5704 ;;		_main
  5705 ;;		_CheckRes
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           
  5710                           ;psect for function _StartCheck
  5711  074A                     _StartCheck:	
  5712                           
  5713                           ;incstack = 0
  5714                           ; Regs used in _StartCheck: [wreg+status,2+status,0+pclath+cstack]
  5715                           ;StartCheck@OnceMore stored from wreg
  5716  074A  1283               	bcf	3,5	;RP0=0, select bank0
  5717  074B  1303               	bcf	3,6	;RP1=0, select bank0
  5718  074C  00AA               	movwf	StartCheck@OnceMore
  5719                           
  5720                           ;PinsCheck.c: 12: if (!ToCheck || (!OnceMore && CheckedNow != 9))
  5721  074D  0851               	movf	_ToCheck,w
  5722  074E  1903               	btfsc	3,2
  5723  074F  0008               	return
  5724  0750  08AA               	movf	StartCheck@OnceMore,f
  5725  0751  1D03               	skipz
  5726  0752  2F57               	goto	l3081
  5727  0753  0862               	movf	_CheckedNow,w
  5728  0754  3A09               	xorlw	9
  5729  0755  1D03               	btfss	3,2
  5730  0756  0008               	return
  5731  0757                     l3081:	
  5732                           
  5733                           ;PinsCheck.c: 16: if (CheckTimes == 0)
  5734  0757  08CA               	movf	_CheckTimes,f
  5735  0758  1D03               	skipz
  5736  0759  2F5E               	goto	l3085
  5737                           
  5738                           ;PinsCheck.c: 17: {
  5739                           ;PinsCheck.c: 18: CheckTimes = 3;
  5740  075A  3003               	movlw	3
  5741  075B  00CA               	movwf	_CheckTimes
  5742                           
  5743                           ;PinsCheck.c: 19: NewState = 0x80;
  5744  075C  3080               	movlw	128
  5745  075D  00CD               	movwf	_NewState
  5746  075E                     l3085:	
  5747                           
  5748                           ;PinsCheck.c: 20: }
  5749                           ;PinsCheck.c: 22: if (ToCheck & (1 << 1))
  5750  075E  1CD1               	btfss	_ToCheck,1
  5751  075F  2F63               	goto	l463
  5752                           
  5753                           ;PinsCheck.c: 23: {
  5754                           ;PinsCheck.c: 24: CheckedNow = 1;
  5755  0760  01E2               	clrf	_CheckedNow
  5756  0761  0AE2               	incf	_CheckedNow,f
  5757                           
  5758                           ;PinsCheck.c: 25: return 1;;
  5759                           ;	Return value of _StartCheck is never used
  5760  0762  0008               	return
  5761  0763                     l463:	
  5762                           
  5763                           ;PinsCheck.c: 26: }
  5764                           ;PinsCheck.c: 27: if (ToCheck & (1 << 5))
  5765  0763  1ED1               	btfss	_ToCheck,5
  5766  0764  2F68               	goto	l464
  5767                           
  5768                           ;PinsCheck.c: 28: {
  5769                           ;PinsCheck.c: 29: CheckedNow = 5;
  5770  0765  3005               	movlw	5
  5771  0766  00E2               	movwf	_CheckedNow
  5772  0767  0008               	return
  5773  0768                     l464:	
  5774                           
  5775                           ;PinsCheck.c: 31: }
  5776                           ;PinsCheck.c: 33: if (ToCheck & (1 << 2))
  5777  0768  1D51               	btfss	_ToCheck,2
  5778  0769  2F6D               	goto	l465
  5779                           
  5780                           ;PinsCheck.c: 34: {
  5781                           ;PinsCheck.c: 35: CheckedNow = 2;
  5782  076A  3002               	movlw	2
  5783  076B  00E2               	movwf	_CheckedNow
  5784  076C  0008               	return
  5785  076D                     l465:	
  5786                           
  5787                           ;PinsCheck.c: 37: }
  5788                           ;PinsCheck.c: 39: if (ToCheck & (1 << 3))
  5789  076D  1DD1               	btfss	_ToCheck,3
  5790  076E  2F72               	goto	l466
  5791                           
  5792                           ;PinsCheck.c: 40: {
  5793                           ;PinsCheck.c: 41: CheckedNow = 3;
  5794  076F  3003               	movlw	3
  5795  0770  00E2               	movwf	_CheckedNow
  5796  0771  0008               	return
  5797  0772                     l466:	
  5798                           
  5799                           ;PinsCheck.c: 44: }
  5800                           ;PinsCheck.c: 45: if (ToCheck & (1 << 4))
  5801  0772  1E51               	btfss	_ToCheck,4
  5802  0773  2F77               	goto	l467
  5803                           
  5804                           ;PinsCheck.c: 46: {
  5805                           ;PinsCheck.c: 47: CheckedNow = 4;
  5806  0774  3004               	movlw	4
  5807  0775  00E2               	movwf	_CheckedNow
  5808  0776  0008               	return
  5809  0777                     l467:	
  5810                           
  5811                           ;PinsCheck.c: 50: }
  5812                           ;PinsCheck.c: 51: if (ToCheck & (1 << 6))
  5813  0777  1F51               	btfss	_ToCheck,6
  5814  0778  2F7C               	goto	l468
  5815                           
  5816                           ;PinsCheck.c: 52: {
  5817                           ;PinsCheck.c: 53: CheckedNow = 6;
  5818  0779  3006               	movlw	6
  5819  077A  00E2               	movwf	_CheckedNow
  5820  077B  0008               	return
  5821  077C                     l468:	
  5822                           
  5823                           ;PinsCheck.c: 56: }
  5824                           ;PinsCheck.c: 57: if (ToCheck & (1 << 0))
  5825  077C  1C51               	btfss	_ToCheck,0
  5826  077D  2F83               	goto	l469
  5827  077E  3004               	movlw	4
  5828                           
  5829                           ;PinsCheck.c: 58: {
  5830                           ;PinsCheck.c: 60: CheckedNow = 0;
  5831  077F  01E2               	clrf	_CheckedNow
  5832                           
  5833                           ;PinsCheck.c: 61: ADC_Start(4);
  5834  0780  278B               	fcall	_ADC_Start
  5835                           
  5836                           ;PinsCheck.c: 62: Ubatt = 0;
  5837  0781  01DE               	clrf	_Ubatt
  5838  0782  0008               	return
  5839  0783                     l469:	
  5840                           
  5841                           ;PinsCheck.c: 64: }
  5842                           ;PinsCheck.c: 65: if (ToCheck & (1 << 7))
  5843  0783  1FD1               	btfss	_ToCheck,7
  5844  0784  0008               	return
  5845                           
  5846                           ;PinsCheck.c: 66: {
  5847                           ;PinsCheck.c: 67: CheckedNow = 7;
  5848  0785  3007               	movlw	7
  5849  0786  00E2               	movwf	_CheckedNow
  5850                           
  5851                           ;PinsCheck.c: 68: ADC_Start(9);
  5852  0787  3009               	movlw	9
  5853  0788  278B               	fcall	_ADC_Start
  5854                           
  5855                           ;PinsCheck.c: 69: Teng = 0;
  5856  0789  01DD               	clrf	_Teng
  5857  078A  0008               	return
  5858  078B                     __end_of_StartCheck:	
  5859  078B                     __ptext20:	
  5860 ;; *************** function _ADC_Start *****************
  5861 ;; Defined at:
  5862 ;;		line 207 in file "PinsCheck.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  ANCh            1    wreg     unsigned char 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  ANCh            1    9[BANK0 ] unsigned char 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;		None               void
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0
  5871 ;; Tracked objects:
  5872 ;;		On entry : 60/0
  5873 ;;		On exit  : 60/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5876 ;;      Params:         0       0       0       0
  5877 ;;      Locals:         0       1       0       0
  5878 ;;      Temps:          0       4       0       0
  5879 ;;      Totals:         0       5       0       0
  5880 ;;Total ram usage:        5 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    4
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_StartCheck
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function _ADC_Start
  5892  078B                     _ADC_Start:	
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in _ADC_Start: [wreg+status,2+status,0]
  5896                           ;ADC_Start@ANCh stored from wreg
  5897  078B  00A9               	movwf	ADC_Start@ANCh
  5898                           
  5899                           ;PinsCheck.c: 209: if (ADCON0bits.GO_DONE)
  5900  078C  189F               	btfsc	31,1	;volatile
  5901  078D  0008               	return
  5902                           
  5903                           ;PinsCheck.c: 212: ADRESH = 0;
  5904  078E  019E               	clrf	30	;volatile
  5905                           
  5906                           ;PinsCheck.c: 213: ADRESL = 0;
  5907  078F  1683               	bsf	3,5	;RP0=1, select bank1
  5908  0790  019E               	clrf	30	;volatile
  5909                           
  5910                           ;PinsCheck.c: 214: if ((ADCON0 & 0b00111100) != (ANCh << 2))
  5911  0791  1283               	bcf	3,5	;RP0=0, select bank0
  5912  0792  0829               	movf	ADC_Start@ANCh,w
  5913  0793  00A5               	movwf	??_ADC_Start
  5914  0794  01A6               	clrf	??_ADC_Start+1
  5915  0795  1003               	clrc
  5916  0796  0DA5               	rlf	??_ADC_Start,f
  5917  0797  0DA6               	rlf	??_ADC_Start+1,f
  5918  0798  1003               	clrc
  5919  0799  0DA5               	rlf	??_ADC_Start,f
  5920  079A  0DA6               	rlf	??_ADC_Start+1,f
  5921  079B  081F               	movf	31,w	;volatile
  5922  079C  393C               	andlw	60
  5923  079D  00A7               	movwf	??_ADC_Start+2
  5924  079E  01A8               	clrf	??_ADC_Start+3
  5925  079F  0826               	movf	??_ADC_Start+1,w
  5926  07A0  0628               	xorwf	??_ADC_Start+3,w
  5927  07A1  1D03               	skipz
  5928  07A2  2FA5               	goto	u2645
  5929  07A3  0825               	movf	??_ADC_Start,w
  5930  07A4  0627               	xorwf	??_ADC_Start+2,w
  5931  07A5                     u2645:	
  5932  07A5  1903               	skipnz
  5933  07A6  2FB8               	goto	l2765
  5934                           
  5935                           ;PinsCheck.c: 215: {
  5936                           ;PinsCheck.c: 216: ADCON0 &= 0b11000011;
  5937  07A7  30C3               	movlw	195
  5938  07A8  059F               	andwf	31,f	;volatile
  5939                           
  5940                           ;PinsCheck.c: 217: ADCON0 |= (ANCh << 2);
  5941  07A9  0829               	movf	ADC_Start@ANCh,w
  5942  07AA  00A5               	movwf	??_ADC_Start
  5943  07AB  3001               	movlw	1
  5944  07AC  1003               	clrc
  5945  07AD                     L39:	
  5946  07AD  0DA5               	rlf	??_ADC_Start,f
  5947  07AE  3EFF               	addlw	-1
  5948  07AF  1003               	clrc
  5949  07B0  1D03               	skipz
  5950  07B1  2FAD               	goto	L39
  5951  07B2  0D25               	rlf	??_ADC_Start,w
  5952  07B3  049F               	iorwf	31,f	;volatile
  5953                           
  5954                           ;PinsCheck.c: 218: _delay((unsigned long)((16)*(4000000/4000000.0)));
  5955  07B4  3005               	movlw	5
  5956  07B5  00A5               	movwf	??_ADC_Start
  5957  07B6                     u5397:	
  5958  07B6  0BA5               	decfsz	??_ADC_Start,f
  5959  07B7  2FB6               	goto	u5397
  5960  07B8                     l2765:	
  5961                           
  5962                           ;PinsCheck.c: 219: }
  5963                           ;PinsCheck.c: 220: PIR1bits.ADIF = 0;
  5964  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  5965  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  5966  07BA  130C               	bcf	12,6	;volatile
  5967                           
  5968                           ;PinsCheck.c: 221: ADCON0bits.GO_DONE = 1;
  5969  07BB  149F               	bsf	31,1	;volatile
  5970  07BC  0008               	return
  5971  07BD                     __end_of_ADC_Start:	
  5972  07BD                     PL6:	
  5973  07BD  00AD               	movwf	??_CheckRes
  5974  07BE  1003               	clrc
  5975  07BF  0CAD               	rrf	??_CheckRes,f
  5976  07C0  081E               	movf	30,w	;volatile
  5977  07C1  00AE               	movwf	??_CheckRes+1
  5978  07C2  3006               	movlw	6
  5979  07C3  1003               	clrc
  5980  07C4                     L32:	
  5981  07C4  0DAE               	rlf	??_CheckRes+1,f
  5982  07C5  3EFF               	addlw	-1
  5983  07C6  1003               	clrc
  5984  07C7  1D03               	skipz
  5985  07C8  2FC4               	goto	L32
  5986  07C9  0D2E               	rlf	??_CheckRes+1,w
  5987  07CA  042D               	iorwf	??_CheckRes,w
  5988  07CB  0008               	return
  5989  07CC                     __end_ofPL6:	
  5990  07CC                     PL22:	
  5991  07CC  07A7               	addwf	___awdiv@dividend,f
  5992  07CD  1803               	skipnc
  5993  07CE  0AA8               	incf	___awdiv@dividend+1,f
  5994  07CF  3002               	movlw	2
  5995  07D0  00A5               	movwf	___awdiv@divisor
  5996  07D1  01A6               	clrf	___awdiv@divisor+1
  5997  07D2  0008               	return
  5998  07D3                     __end_ofPL22:	
  5999                           
  6000                           	psect	text21
  6001  03D5                     __ptext21:	
  6002 ;; *************** function _InterruptService *****************
  6003 ;; Defined at:
  6004 ;;		line 103 in file "newmain.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  n               1    0        unsigned char 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;		None               void
  6011 ;; Registers used:
  6012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 60/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6018 ;;      Params:         0       0       0       0
  6019 ;;      Locals:         0       0       0       0
  6020 ;;      Temps:          3       0       0       0
  6021 ;;      Totals:         3       0       0       0
  6022 ;;Total ram usage:        3 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    3
  6025 ;; This function calls:
  6026 ;;		_I2CSlaveSR
  6027 ;; This function is called by:
  6028 ;;		Interrupt level 1
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           
  6033                           ;psect for function _InterruptService
  6034  03D5                     _InterruptService:	
  6035                           
  6036                           ;newmain.c: 105: if (INTCONbits.RABIF)
  6037  03D5  1C0B               	btfss	11,0	;volatile
  6038  03D6  2BDE               	goto	i1l4103
  6039                           
  6040                           ;newmain.c: 106: {
  6041                           ;newmain.c: 107: char n = PORTBbits.RB7;
  6042  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  6043  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  6044  03D9  0806               	movf	6,w	;volatile
  6045                           
  6046                           ;newmain.c: 108: n = PORTBbits.RB5;
  6047  03DA  0806               	movf	6,w	;volatile
  6048                           
  6049                           ;newmain.c: 109: INTCONbits.RABIF = 0;
  6050  03DB  100B               	bcf	11,0	;volatile
  6051                           
  6052                           ;newmain.c: 110: ToCheck = 0xFF;
  6053  03DC  30FF               	movlw	255
  6054  03DD  00D1               	movwf	_ToCheck
  6055  03DE                     i1l4103:	
  6056                           
  6057                           ;newmain.c: 111: }
  6058                           ;newmain.c: 113: if (PIR1bits.TMR1IF)
  6059  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  6060  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  6061  03E0  1C0C               	btfss	12,0	;volatile
  6062  03E1  2BE6               	goto	i1l4111
  6063                           
  6064                           ;newmain.c: 114: {
  6065                           ;newmain.c: 115: PIR1bits.TMR1IF = 0;
  6066  03E2  100C               	bcf	12,0	;volatile
  6067                           
  6068                           ;newmain.c: 117: sec += 16;
  6069  03E3  3010               	movlw	16
  6070  03E4  07DA               	addwf	_sec,f
  6071                           
  6072                           ;newmain.c: 118: IntSvcSync |= 0b00000001;
  6073  03E5  144C               	bsf	_IntSvcSync,0
  6074  03E6                     i1l4111:	
  6075                           
  6076                           ;newmain.c: 119: }
  6077                           ;newmain.c: 120: if (PIR1bits.SSPIF)
  6078  03E6  1D8C               	btfss	12,3	;volatile
  6079  03E7  2BE9               	goto	i1l154
  6080                           
  6081                           ;newmain.c: 121: {
  6082                           ;newmain.c: 122: I2CSlaveSR ();
  6083  03E8  23F2               	fcall	_I2CSlaveSR
  6084  03E9                     i1l154:	
  6085  03E9  087D               	movf	??_InterruptService+2,w
  6086  03EA  008A               	movwf	10
  6087  03EB  087C               	movf	??_InterruptService+1,w
  6088  03EC  0084               	movwf	4
  6089  03ED  0E7B               	swapf	??_InterruptService^(0+-128),w
  6090  03EE  0083               	movwf	3
  6091  03EF  0EFE               	swapf	126,f
  6092  03F0  0E7E               	swapf	126,w
  6093  03F1  0009               	retfie
  6094  03F2                     __end_of_InterruptService:	
  6095  03F2                     __ptext22:	
  6096 ;; *************** function _I2CSlaveSR *****************
  6097 ;; Defined at:
  6098 ;;		line 568 in file "newmain.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  x               1   10[COMMON] unsigned char 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;		None               void
  6105 ;; Registers used:
  6106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 60/0
  6109 ;;		On exit  : 60/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6112 ;;      Params:         0       0       0       0
  6113 ;;      Locals:         1       0       0       0
  6114 ;;      Temps:          0       0       0       0
  6115 ;;      Totals:         1       0       0       0
  6116 ;;Total ram usage:        1 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    2
  6119 ;; This function calls:
  6120 ;;		i1_OutRet
  6121 ;;		i1_TEngUbattRW
  6122 ;; This function is called by:
  6123 ;;		_InterruptService
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           
  6128                           ;psect for function _I2CSlaveSR
  6129  03F2                     _I2CSlaveSR:	
  6130                           
  6131                           ;newmain.c: 570: char x;
  6132                           ;newmain.c: 572: if (PIR1bits.SSPIF == 0)
  6133                           
  6134                           ;incstack = 0
  6135                           ; Regs used in _I2CSlaveSR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6136  03F2  1D8C               	btfss	12,3	;volatile
  6137  03F3  0008               	return
  6138                           
  6139                           ;newmain.c: 575: SSPCONbits.SSPOV = 0;
  6140  03F4  1314               	bcf	20,6	;volatile
  6141                           
  6142                           ;newmain.c: 577: if (SSPSTATbits.R_W)
  6143  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  6144  03F6  1D14               	btfss	20,2	;volatile
  6145  03F7  2CB8               	goto	i1l254
  6146                           
  6147                           ;newmain.c: 578: {
  6148                           ;newmain.c: 585: if (SSPCONbits.CKP == 0)
  6149  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  6150  03F9  1E14               	btfss	20,4	;volatile
  6151  03FA  2C50               	goto	i1l3307
  6152  03FB  2DB3               	goto	i1l3399
  6153  03FC                     i1l3241:	
  6154                           
  6155                           ;newmain.c: 590: OutRet (i2cEEPROMAddr, &x, 1);
  6156  03FC  307A               	movlw	I2CSlaveSR@x& (0+255)
  6157  03FD  00F0               	movwf	i1OutRet@ret
  6158  03FE  01F1               	clrf	i1OutRet@Read
  6159  03FF  0AF1               	incf	i1OutRet@Read,f
  6160  0400  0856               	movf	_i2cEEPROMAddr,w
  6161  0401  25FD  118A         	fcall	i1_OutRet
  6162                           
  6163                           ;newmain.c: 591: SSPBUF = x;
  6164  0403  087A               	movf	I2CSlaveSR@x,w
  6165  0404  1283               	bcf	3,5	;RP0=0, select bank0
  6166  0405  1303               	bcf	3,6	;RP1=0, select bank0
  6167  0406  0093               	movwf	19	;volatile
  6168                           
  6169                           ;newmain.c: 592: i2cEEPROMAddr = 0x0;
  6170  0407  01D6               	clrf	_i2cEEPROMAddr
  6171                           
  6172                           ;newmain.c: 593: break;
  6173  0408  2CB5               	goto	i1l258
  6174  0409                     i1l3247:	
  6175                           
  6176                           ;newmain.c: 595: SSPBUF = day;
  6177  0409  0854               	movf	_day,w
  6178  040A  2C4C               	goto	L66
  6179  040B                     i1l3249:	
  6180                           ;newmain.c: 596: break;
  6181                           
  6182                           
  6183                           ;newmain.c: 598: SSPBUF = hour;
  6184  040B  0860               	movf	_hour,w
  6185  040C  2C4C               	goto	L66
  6186  040D                     i1l3251:	
  6187                           ;newmain.c: 599: break;
  6188                           
  6189                           
  6190                           ;newmain.c: 601: SSPBUF = min;
  6191  040D  0859               	movf	_min,w
  6192  040E  2C4C               	goto	L66
  6193  040F                     i1l3253:	
  6194                           ;newmain.c: 602: break;
  6195                           
  6196                           
  6197                           ;newmain.c: 604: SSPBUF = sec;
  6198  040F  085A               	movf	_sec,w
  6199  0410  2C4C               	goto	L66
  6200  0411                     i1l3255:	
  6201                           ;newmain.c: 605: break;
  6202                           
  6203                           
  6204                           ;newmain.c: 607: SSPBUF = addrh;
  6205  0411  0852               	movf	_addrh,w
  6206  0412  2C4C               	goto	L66
  6207  0413                     i1l3257:	
  6208                           ;newmain.c: 608: break;
  6209                           
  6210                           
  6211                           ;newmain.c: 610: SSPBUF = addrl;
  6212  0413  0853               	movf	_addrl,w
  6213  0414  2C4C               	goto	L66
  6214  0415                     i1l3259:	
  6215                           ;newmain.c: 611: break;
  6216                           
  6217                           
  6218                           ;newmain.c: 613: SSPBUF = Ubatt;
  6219  0415  085E               	movf	_Ubatt,w
  6220  0416  2C4C               	goto	L66
  6221  0417                     i1l3261:	
  6222                           ;newmain.c: 614: break;
  6223                           
  6224                           
  6225                           ;newmain.c: 616: SSPBUF = Teng;
  6226  0417  085D               	movf	_Teng,w
  6227  0418  2C4C               	goto	L66
  6228  0419                     i1l3263:	
  6229                           ;newmain.c: 617: break;
  6230                           
  6231                           
  6232                           ;newmain.c: 619: SSPBUF = PinState;
  6233  0419  084E               	movf	_PinState,w
  6234  041A  2C4C               	goto	L66
  6235  041B                     i1l3265:	
  6236                           ;newmain.c: 620: break;
  6237                           
  6238                           
  6239                           ;newmain.c: 622: SSPBUF = BinSt;
  6240  041B  0849               	movf	_BinSt,w
  6241  041C  2C4C               	goto	L66
  6242  041D                     i1l3267:	
  6243                           ;newmain.c: 623: break;
  6244                           
  6245                           
  6246                           ;newmain.c: 625: SSPBUF = EngSt;
  6247  041D  084B               	movf	_EngSt,w
  6248  041E  2C4C               	goto	L66
  6249  041F                     i1l3269:	
  6250                           ;newmain.c: 626: break;
  6251                           
  6252                           
  6253                           ;newmain.c: 628: SSPBUF = IntSvcSync;
  6254  041F  084C               	movf	_IntSvcSync,w
  6255  0420  2C4C               	goto	L66
  6256  0421                     i1l3271:	
  6257                           ;newmain.c: 629: break;
  6258                           
  6259                           
  6260                           ;newmain.c: 631: SSPBUF = NewBinTmr;
  6261  0421  0865               	movf	_NewBinTmr,w
  6262  0422  2C4C               	goto	L66
  6263  0423                     i1l3273:	
  6264                           ;newmain.c: 632: break;
  6265                           
  6266                           
  6267                           ;newmain.c: 634: SSPBUF = NewASRTmr;
  6268  0423  0864               	movf	_NewASRTmr,w
  6269  0424  2C4C               	goto	L66
  6270  0425                     i1l3275:	
  6271                           ;newmain.c: 635: break;
  6272                           
  6273                           
  6274                           ;newmain.c: 637: SSPBUF = ASRONTmr;
  6275  0425  0861               	movf	_ASRONTmr,w
  6276  0426  2C4C               	goto	L66
  6277  0427                     i1l3277:	
  6278                           ;newmain.c: 638: break;
  6279                           
  6280                           
  6281                           ;newmain.c: 640: SSPBUF = EngStartTmr;
  6282  0427  0863               	movf	_EngStartTmr,w
  6283  0428  2C4C               	goto	L66
  6284  0429                     i1l3279:	
  6285                           ;newmain.c: 641: break;
  6286                           
  6287                           
  6288                           ;newmain.c: 643: SSPBUF = UbattTmr;
  6289  0429  0866               	movf	_UbattTmr,w
  6290  042A  2C4C               	goto	L66
  6291  042B                     i1l3281:	
  6292                           ;newmain.c: 644: break;
  6293                           
  6294                           
  6295                           ;newmain.c: 646: SSPBUF = TEB;
  6296  042B  085B               	movf	_TEB,w
  6297  042C  2C4C               	goto	L66
  6298  042D                     i1l3283:	
  6299                           ;newmain.c: 647: break;
  6300                           
  6301                           
  6302                           ;newmain.c: 649: SSPBUF = PORTBbits.RB7;
  6303  042D  3000               	movlw	0
  6304  042E  1B86               	btfsc	6,7	;volatile
  6305  042F  3001               	movlw	1
  6306  0430  2C4C               	goto	L66
  6307  0431                     i1l3285:	
  6308                           ;newmain.c: 650: break;
  6309                           
  6310                           
  6311                           ;newmain.c: 652: SSPBUF = PORTCbits.RC5;
  6312  0431  3000               	movlw	0
  6313  0432  1A87               	btfsc	7,5	;volatile
  6314  0433  3001               	movlw	1
  6315  0434  2C4C               	goto	L66
  6316  0435                     i1l3287:	
  6317                           ;newmain.c: 653: break;
  6318                           
  6319                           
  6320                           ;newmain.c: 655: SSPBUF = PORTCbits.RC4;
  6321  0435  3000               	movlw	0
  6322  0436  1A07               	btfsc	7,4	;volatile
  6323  0437  3001               	movlw	1
  6324  0438  2C4C               	goto	L66
  6325  0439                     i1l3289:	
  6326                           ;newmain.c: 656: break;
  6327                           
  6328                           
  6329                           ;newmain.c: 658: SSPBUF = PORTBbits.RB5;
  6330  0439  3000               	movlw	0
  6331  043A  1A86               	btfsc	6,5	;volatile
  6332  043B  3001               	movlw	1
  6333  043C  2C4C               	goto	L66
  6334  043D                     i1l3291:	
  6335                           ;newmain.c: 659: break;
  6336                           
  6337                           
  6338                           ;newmain.c: 661: SSPBUF = 4;
  6339  043D  3004               	movlw	4
  6340  043E  2C4C               	goto	L66
  6341  043F                     i1l3293:	
  6342                           ;newmain.c: 662: break;
  6343                           
  6344                           
  6345                           ;newmain.c: 664: SSPBUF = 9;
  6346  043F  3009               	movlw	9
  6347  0440  2C4C               	goto	L66
  6348  0441                     i1l3295:	
  6349                           ;newmain.c: 665: break;
  6350                           
  6351                           
  6352                           ;newmain.c: 667: SSPBUF = PORTAbits.RA2;
  6353  0441  3000               	movlw	0
  6354  0442  1905               	btfsc	5,2	;volatile
  6355  0443  3001               	movlw	1
  6356  0444  2C4C               	goto	L66
  6357  0445                     i1l3297:	
  6358                           ;newmain.c: 668: break;
  6359                           
  6360                           
  6361                           ;newmain.c: 670: SSPBUF = PORTCbits.RC6;
  6362  0445  3000               	movlw	0
  6363  0446  1B07               	btfsc	7,6	;volatile
  6364  0447  3001               	movlw	1
  6365  0448  2C4C               	goto	L66
  6366  0449                     i1l3299:	
  6367                           ;newmain.c: 671: break;
  6368                           
  6369                           
  6370                           ;newmain.c: 677: SSPBUF = UbattMin;
  6371  0449  085F               	movf	_UbattMin,w
  6372  044A  2C4C               	goto	L66
  6373  044B                     i1l3301:	
  6374                           ;newmain.c: 678: break;
  6375                           
  6376                           
  6377                           ;newmain.c: 680: SSPBUF = TEngTemp;
  6378  044B  085C               	movf	_TEngTemp,w
  6379  044C                     L66:	
  6380  044C  0093               	movwf	19	;volatile
  6381                           
  6382                           ;newmain.c: 681: break;
  6383  044D  2CB5               	goto	i1l258
  6384  044E                     i1l3303:	
  6385                           
  6386                           ;newmain.c: 684: SSPBUF = 0x0;
  6387  044E  0193               	clrf	19	;volatile
  6388                           
  6389                           ;newmain.c: 685: break;
  6390  044F  2CB5               	goto	i1l258
  6391  0450                     i1l3307:	
  6392  0450  0855               	movf	_i2cCmd,w
  6393                           
  6394                           ; Switch size 1, requested type "space"
  6395                           ; Number of cases is 33, Range of values is 1 to 50
  6396                           ; switch strategies available:
  6397                           ; Name         Instructions Cycles
  6398                           ; simple_byte          100    51 (average)
  6399                           ; direct_byte          110    10 (fixed)
  6400                           ; jumptable            263     9 (fixed)
  6401                           ;	Chosen strategy is simple_byte
  6402  0451  3A01               	xorlw	1	; case 1
  6403  0452  1903               	skipnz
  6404  0453  2C09               	goto	i1l3247
  6405  0454  3A03               	xorlw	3	; case 2
  6406  0455  1903               	skipnz
  6407  0456  2C0B               	goto	i1l3249
  6408  0457  3A01               	xorlw	1	; case 3
  6409  0458  1903               	skipnz
  6410  0459  2C0D               	goto	i1l3251
  6411  045A  3A07               	xorlw	7	; case 4
  6412  045B  1903               	skipnz
  6413  045C  2C0F               	goto	i1l3253
  6414  045D  3A01               	xorlw	1	; case 5
  6415  045E  1903               	skipnz
  6416  045F  2C11               	goto	i1l3255
  6417  0460  3A03               	xorlw	3	; case 6
  6418  0461  1903               	skipnz
  6419  0462  2C13               	goto	i1l3257
  6420  0463  3A01               	xorlw	1	; case 7
  6421  0464  1903               	skipnz
  6422  0465  2C15               	goto	i1l3259
  6423  0466  3A0F               	xorlw	15	; case 8
  6424  0467  1903               	skipnz
  6425  0468  2C17               	goto	i1l3261
  6426  0469  3A01               	xorlw	1	; case 9
  6427  046A  1903               	skipnz
  6428  046B  2C19               	goto	i1l3263
  6429  046C  3A13               	xorlw	19	; case 26
  6430  046D  1903               	skipnz
  6431  046E  2C1B               	goto	i1l3265
  6432  046F  3A01               	xorlw	1	; case 27
  6433  0470  1903               	skipnz
  6434  0471  2C1D               	goto	i1l3267
  6435  0472  3A07               	xorlw	7	; case 28
  6436  0473  1903               	skipnz
  6437  0474  2C1F               	goto	i1l3269
  6438  0475  3A01               	xorlw	1	; case 29
  6439  0476  1903               	skipnz
  6440  0477  2C21               	goto	i1l3271
  6441  0478  3A03               	xorlw	3	; case 30
  6442  0479  1903               	skipnz
  6443  047A  2C23               	goto	i1l3273
  6444  047B  3A01               	xorlw	1	; case 31
  6445  047C  1903               	skipnz
  6446  047D  2C25               	goto	i1l3275
  6447  047E  3A3F               	xorlw	63	; case 32
  6448  047F  1903               	skipnz
  6449  0480  2C27               	goto	i1l3277
  6450  0481  3A01               	xorlw	1	; case 33
  6451  0482  1903               	skipnz
  6452  0483  2C29               	goto	i1l3279
  6453  0484  3A03               	xorlw	3	; case 34
  6454  0485  1903               	skipnz
  6455  0486  2C2B               	goto	i1l3281
  6456  0487  3A01               	xorlw	1	; case 35
  6457  0488  1903               	skipnz
  6458  0489  2C2D               	goto	i1l3283
  6459  048A  3A07               	xorlw	7	; case 36
  6460  048B  1903               	skipnz
  6461  048C  2C31               	goto	i1l3285
  6462  048D  3A01               	xorlw	1	; case 37
  6463  048E  1903               	skipnz
  6464  048F  2C35               	goto	i1l3287
  6465  0490  3A03               	xorlw	3	; case 38
  6466  0491  1903               	skipnz
  6467  0492  2C39               	goto	i1l3289
  6468  0493  3A01               	xorlw	1	; case 39
  6469  0494  1903               	skipnz
  6470  0495  2CB5               	goto	i1l258
  6471  0496  3A0F               	xorlw	15	; case 40
  6472  0497  1903               	skipnz
  6473  0498  2CB5               	goto	i1l258
  6474  0499  3A01               	xorlw	1	; case 41
  6475  049A  1903               	skipnz
  6476  049B  2C3D               	goto	i1l3291
  6477  049C  3A03               	xorlw	3	; case 42
  6478  049D  1903               	skipnz
  6479  049E  2C3F               	goto	i1l3293
  6480  049F  3A01               	xorlw	1	; case 43
  6481  04A0  1903               	skipnz
  6482  04A1  2C41               	goto	i1l3295
  6483  04A2  3A07               	xorlw	7	; case 44
  6484  04A3  1903               	skipnz
  6485  04A4  2C45               	goto	i1l3297
  6486  04A5  3A01               	xorlw	1	; case 45
  6487  04A6  1903               	skipnz
  6488  04A7  2CB5               	goto	i1l258
  6489  04A8  3A03               	xorlw	3	; case 46
  6490  04A9  1903               	skipnz
  6491  04AA  2C49               	goto	i1l3299
  6492  04AB  3A01               	xorlw	1	; case 47
  6493  04AC  1903               	skipnz
  6494  04AD  2C4B               	goto	i1l3301
  6495  04AE  3A1E               	xorlw	30	; case 49
  6496  04AF  1903               	skipnz
  6497  04B0  2C4E               	goto	i1l3303
  6498  04B1  3A03               	xorlw	3	; case 50
  6499  04B2  1903               	skipnz
  6500  04B3  2BFC               	goto	i1l3241
  6501  04B4  2C4E               	goto	i1l3303
  6502  04B5                     i1l258:	
  6503                           
  6504                           ;newmain.c: 687: SSPCONbits.CKP = 1;
  6505  04B5  1614               	bsf	20,4	;volatile
  6506  04B6                     i1l3309:	
  6507                           
  6508                           ;newmain.c: 688: i2cCmd = 0x0;
  6509  04B6  01D5               	clrf	_i2cCmd
  6510                           
  6511                           ;newmain.c: 690: }
  6512                           ;newmain.c: 692: }
  6513  04B7  2DB3               	goto	i1l3399
  6514  04B8                     i1l254:	
  6515                           
  6516                           ;newmain.c: 693: else
  6517                           ;newmain.c: 694: {
  6518                           ;newmain.c: 695: if (SSPSTATbits.BF)
  6519  04B8  1C14               	btfss	20,0	;volatile
  6520  04B9  2DB3               	goto	i1l3399
  6521                           
  6522                           ;newmain.c: 696: {
  6523                           ;newmain.c: 697: if (!SSPSTATbits.D_nA)
  6524  04BA  1A94               	btfsc	20,5	;volatile
  6525  04BB  2D3F               	goto	i1l3389
  6526  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  6527  04BD  0813               	movf	19,w	;volatile
  6528  04BE  2CB6               	goto	i1l3309
  6529  04BF                     i1l3317:	
  6530                           
  6531                           ;newmain.c: 707: day = SSPBUF;
  6532  04BF  0813               	movf	19,w	;volatile
  6533  04C0  00D4               	movwf	_day
  6534                           
  6535                           ;newmain.c: 708: break;
  6536  04C1  2DA8               	goto	i1l3391
  6537  04C2                     i1l3319:	
  6538                           
  6539                           ;newmain.c: 710: hour = SSPBUF;
  6540  04C2  0813               	movf	19,w	;volatile
  6541  04C3  00E0               	movwf	_hour
  6542                           
  6543                           ;newmain.c: 711: break;
  6544  04C4  2DA8               	goto	i1l3391
  6545  04C5                     i1l3321:	
  6546                           
  6547                           ;newmain.c: 713: min = SSPBUF;
  6548  04C5  0813               	movf	19,w	;volatile
  6549  04C6  00D9               	movwf	_min
  6550                           
  6551                           ;newmain.c: 714: break;
  6552  04C7  2DA8               	goto	i1l3391
  6553  04C8                     i1l3323:	
  6554                           
  6555                           ;newmain.c: 716: sec = SSPBUF;
  6556  04C8  0813               	movf	19,w	;volatile
  6557  04C9  00DA               	movwf	_sec
  6558                           
  6559                           ;newmain.c: 717: break;
  6560  04CA  2DA8               	goto	i1l3391
  6561  04CB                     i1l3325:	
  6562                           
  6563                           ;newmain.c: 719: addrh = SSPBUF;
  6564  04CB  0813               	movf	19,w	;volatile
  6565  04CC  00D2               	movwf	_addrh
  6566                           
  6567                           ;newmain.c: 720: break;
  6568  04CD  2DA8               	goto	i1l3391
  6569  04CE                     i1l3327:	
  6570                           
  6571                           ;newmain.c: 722: addrl = SSPBUF;
  6572  04CE  0813               	movf	19,w	;volatile
  6573  04CF  00D3               	movwf	_addrl
  6574                           
  6575                           ;newmain.c: 723: break;
  6576  04D0  2DA8               	goto	i1l3391
  6577  04D1                     i1l3329:	
  6578                           
  6579                           ;newmain.c: 725: Ubatt = SSPBUF;
  6580  04D1  0813               	movf	19,w	;volatile
  6581  04D2  00DE               	movwf	_Ubatt
  6582                           
  6583                           ;newmain.c: 726: TEngUbattRW (0x10 + 5, &Ubatt, 0);
  6584  04D3  305E               	movlw	_Ubatt& (0+255)
  6585  04D4  00F6               	movwf	i1TEngUbattRW@Teng
  6586  04D5  3015               	movlw	21
  6587  04D6  01F7               	clrf	i1TEngUbattRW@Read
  6588  04D7  25B6  118A         	fcall	i1_TEngUbattRW
  6589                           
  6590                           ;newmain.c: 727: break;
  6591  04D9  2DA8               	goto	i1l3391
  6592  04DA                     i1l3333:	
  6593                           
  6594                           ;newmain.c: 729: Teng = SSPBUF;
  6595  04DA  0813               	movf	19,w	;volatile
  6596  04DB  00DD               	movwf	_Teng
  6597                           
  6598                           ;newmain.c: 730: TEngUbattRW (0x10, &Teng, 0);
  6599  04DC  305D               	movlw	_Teng& (0+255)
  6600  04DD  00F6               	movwf	i1TEngUbattRW@Teng
  6601  04DE  3010               	movlw	16
  6602  04DF  01F7               	clrf	i1TEngUbattRW@Read
  6603  04E0  25B6  118A         	fcall	i1_TEngUbattRW
  6604                           
  6605                           ;newmain.c: 731: break;
  6606  04E2  2DA8               	goto	i1l3391
  6607  04E3                     i1l3337:	
  6608                           
  6609                           ;newmain.c: 733: case 0x1A:
  6610                           ;newmain.c: 734: BinSt = SSPBUF;
  6611  04E3  0813               	movf	19,w	;volatile
  6612  04E4  00C9               	movwf	_BinSt
  6613                           
  6614                           ;newmain.c: 735: break;
  6615  04E5  2DA8               	goto	i1l3391
  6616  04E6                     i1l3339:	
  6617                           
  6618                           ;newmain.c: 737: EngSt = SSPBUF;
  6619  04E6  0813               	movf	19,w	;volatile
  6620  04E7  00CB               	movwf	_EngSt
  6621                           
  6622                           ;newmain.c: 738: break;
  6623  04E8  2DA8               	goto	i1l3391
  6624  04E9                     i1l3341:	
  6625  04E9  0813               	movf	19,w	;volatile
  6626                           
  6627                           ;newmain.c: 741: break;
  6628  04EA  2DA8               	goto	i1l3391
  6629  04EB                     i1l3343:	
  6630                           
  6631                           ;newmain.c: 743: NewBinTmr = SSPBUF;
  6632  04EB  0813               	movf	19,w	;volatile
  6633  04EC  00E5               	movwf	_NewBinTmr
  6634                           
  6635                           ;newmain.c: 744: break;
  6636  04ED  2DA8               	goto	i1l3391
  6637  04EE                     i1l3345:	
  6638                           
  6639                           ;newmain.c: 746: NewASRTmr = SSPBUF;
  6640  04EE  0813               	movf	19,w	;volatile
  6641  04EF  00E4               	movwf	_NewASRTmr
  6642                           
  6643                           ;newmain.c: 747: break;
  6644  04F0  2DA8               	goto	i1l3391
  6645  04F1                     i1l3347:	
  6646                           
  6647                           ;newmain.c: 749: ASRONTmr = SSPBUF;
  6648  04F1  0813               	movf	19,w	;volatile
  6649  04F2  00E1               	movwf	_ASRONTmr
  6650                           
  6651                           ;newmain.c: 750: break;
  6652  04F3  2DA8               	goto	i1l3391
  6653  04F4                     i1l3349:	
  6654                           
  6655                           ;newmain.c: 752: EngStartTmr = SSPBUF;
  6656  04F4  0813               	movf	19,w	;volatile
  6657  04F5  00E3               	movwf	_EngStartTmr
  6658                           
  6659                           ;newmain.c: 753: break;
  6660  04F6  2DA8               	goto	i1l3391
  6661  04F7                     i1l3351:	
  6662                           
  6663                           ;newmain.c: 755: UbattTmr = SSPBUF;
  6664  04F7  0813               	movf	19,w	;volatile
  6665  04F8  00E6               	movwf	_UbattTmr
  6666                           
  6667                           ;newmain.c: 756: break;
  6668  04F9  2DA8               	goto	i1l3391
  6669  04FA                     i1l3353:	
  6670                           
  6671                           ;newmain.c: 758: TEB = SSPBUF;
  6672  04FA  0813               	movf	19,w	;volatile
  6673  04FB  00DB               	movwf	_TEB
  6674                           
  6675                           ;newmain.c: 759: break;
  6676  04FC  2DA8               	goto	i1l3391
  6677  04FD                     i1l319:	
  6678  04FD  2CE9               	goto	i1l3341
  6679  04FE                     i1l3357:	
  6680                           
  6681                           ;newmain.c: 771: x = SSPBUF;
  6682  04FE  0813               	movf	19,w	;volatile
  6683  04FF  00FA               	movwf	I2CSlaveSR@x
  6684                           
  6685                           ;newmain.c: 772: PORTCbits.RC1 = x;
  6686  0500  087A               	movf	I2CSlaveSR@x,w
  6687  0501  1D03               	skipz
  6688  0502  1487               	bsf	7,1	;volatile
  6689  0503  1903               	skipnz
  6690  0504  1087               	bcf	7,1	;volatile
  6691                           
  6692                           ;newmain.c: 773: break;
  6693  0505  2DA8               	goto	i1l3391
  6694  0506                     i1l3359:	
  6695                           
  6696                           ;newmain.c: 775: x = SSPBUF;
  6697  0506  0813               	movf	19,w	;volatile
  6698  0507  00FA               	movwf	I2CSlaveSR@x
  6699                           
  6700                           ;newmain.c: 776: PORTCbits.RC2 = x;
  6701  0508  087A               	movf	I2CSlaveSR@x,w
  6702  0509  1D03               	skipz
  6703  050A  1507               	bsf	7,2	;volatile
  6704  050B  1903               	skipnz
  6705  050C  1107               	bcf	7,2	;volatile
  6706                           
  6707                           ;newmain.c: 777: break;
  6708  050D  2DA8               	goto	i1l3391
  6709  050E                     i1l3361:	
  6710                           
  6711                           ;newmain.c: 779: x = SSPBUF;
  6712  050E  0813               	movf	19,w	;volatile
  6713  050F  00FA               	movwf	I2CSlaveSR@x
  6714                           
  6715                           ;newmain.c: 780: PORTCbits.RC3 = x;
  6716  0510  087A               	movf	I2CSlaveSR@x,w
  6717  0511  1D03               	skipz
  6718  0512  1587               	bsf	7,3	;volatile
  6719  0513  1903               	skipnz
  6720  0514  1187               	bcf	7,3	;volatile
  6721                           
  6722                           ;newmain.c: 781: break;
  6723  0515  2DA8               	goto	i1l3391
  6724  0516                     i1l3363:	
  6725                           
  6726                           ;newmain.c: 783: x = SSPBUF;
  6727  0516  0813               	movf	19,w	;volatile
  6728  0517  00FA               	movwf	I2CSlaveSR@x
  6729                           
  6730                           ;newmain.c: 784: UbattMin = x;
  6731  0518  00DF               	movwf	_UbattMin
  6732                           
  6733                           ;newmain.c: 785: TEngUbattRW (0x10 + 5, &x, 0);
  6734  0519  307A               	movlw	I2CSlaveSR@x& (0+255)
  6735  051A  00F6               	movwf	i1TEngUbattRW@Teng
  6736  051B  3015               	movlw	21
  6737  051C  01F7               	clrf	i1TEngUbattRW@Read
  6738  051D  25B6  118A         	fcall	i1_TEngUbattRW
  6739                           
  6740                           ;newmain.c: 786: break;
  6741  051F  2DA8               	goto	i1l3391
  6742  0520                     i1l3367:	
  6743                           
  6744                           ;newmain.c: 788: x = SSPBUF;
  6745  0520  0813               	movf	19,w	;volatile
  6746  0521  00FA               	movwf	I2CSlaveSR@x
  6747                           
  6748                           ;newmain.c: 789: TEngTemp = x;
  6749  0522  00DC               	movwf	_TEngTemp
  6750                           
  6751                           ;newmain.c: 790: TEngUbattRW (0x10, &x, 0);
  6752  0523  307A               	movlw	I2CSlaveSR@x& (0+255)
  6753  0524  00F6               	movwf	i1TEngUbattRW@Teng
  6754  0525  3010               	movlw	16
  6755  0526  01F7               	clrf	i1TEngUbattRW@Read
  6756  0527  25B6  118A         	fcall	i1_TEngUbattRW
  6757                           
  6758                           ;newmain.c: 791: break;
  6759  0529  2DA8               	goto	i1l3391
  6760  052A                     i1l3373:	
  6761                           
  6762                           ;newmain.c: 796: if (i2cEEPROMAddr == 0x0)
  6763  052A  08D6               	movf	_i2cEEPROMAddr,f
  6764  052B  1D03               	skipz
  6765  052C  2D30               	goto	i1l3377
  6766                           
  6767                           ;newmain.c: 797: {
  6768                           ;newmain.c: 798: i2cEEPROMAddr = SSPBUF;
  6769  052D  0813               	movf	19,w	;volatile
  6770  052E  00D6               	movwf	_i2cEEPROMAddr
  6771                           
  6772                           ;newmain.c: 799: }
  6773  052F  2DA8               	goto	i1l3391
  6774  0530                     i1l3377:	
  6775                           
  6776                           ;newmain.c: 800: else
  6777                           ;newmain.c: 801: {
  6778                           ;newmain.c: 802: x = SSPBUF;
  6779  0530  0813               	movf	19,w	;volatile
  6780  0531  00FA               	movwf	I2CSlaveSR@x
  6781                           
  6782                           ;newmain.c: 803: OutRet (i2cEEPROMAddr, &x, 0);
  6783  0532  307A               	movlw	I2CSlaveSR@x& (0+255)
  6784  0533  00F0               	movwf	i1OutRet@ret
  6785  0534  01F1               	clrf	i1OutRet@Read
  6786  0535  0856               	movf	_i2cEEPROMAddr,w
  6787  0536  25FD  118A         	fcall	i1_OutRet
  6788                           
  6789                           ;newmain.c: 804: i2cEEPROMAddr = 0x0;
  6790  0538  1283               	bcf	3,5	;RP0=0, select bank0
  6791  0539  1303               	bcf	3,6	;RP1=0, select bank0
  6792  053A  01D6               	clrf	_i2cEEPROMAddr
  6793  053B  2DA8               	goto	i1l3391
  6794  053C                     i1l3383:	
  6795                           
  6796                           ;newmain.c: 808: i2cHoldTmr = SSPBUF;
  6797  053C  0813               	movf	19,w	;volatile
  6798  053D  00D7               	movwf	_i2cHoldTmr
  6799                           
  6800                           ;newmain.c: 809: break;
  6801  053E  2DA8               	goto	i1l3391
  6802  053F                     i1l3389:	
  6803  053F  1283               	bcf	3,5	;RP0=0, select bank0
  6804  0540  0855               	movf	_i2cCmd,w
  6805                           
  6806                           ; Switch size 1, requested type "space"
  6807                           ; Number of cases is 34, Range of values is 1 to 51
  6808                           ; switch strategies available:
  6809                           ; Name         Instructions Cycles
  6810                           ; simple_byte          103    52 (average)
  6811                           ; direct_byte          112    10 (fixed)
  6812                           ; jumptable            263     9 (fixed)
  6813                           ;	Chosen strategy is simple_byte
  6814  0541  3A01               	xorlw	1	; case 1
  6815  0542  1903               	skipnz
  6816  0543  2CBF               	goto	i1l3317
  6817  0544  3A03               	xorlw	3	; case 2
  6818  0545  1903               	skipnz
  6819  0546  2CC2               	goto	i1l3319
  6820  0547  3A01               	xorlw	1	; case 3
  6821  0548  1903               	skipnz
  6822  0549  2CC5               	goto	i1l3321
  6823  054A  3A07               	xorlw	7	; case 4
  6824  054B  1903               	skipnz
  6825  054C  2CC8               	goto	i1l3323
  6826  054D  3A01               	xorlw	1	; case 5
  6827  054E  1903               	skipnz
  6828  054F  2CCB               	goto	i1l3325
  6829  0550  3A03               	xorlw	3	; case 6
  6830  0551  1903               	skipnz
  6831  0552  2CCE               	goto	i1l3327
  6832  0553  3A01               	xorlw	1	; case 7
  6833  0554  1903               	skipnz
  6834  0555  2CD1               	goto	i1l3329
  6835  0556  3A0F               	xorlw	15	; case 8
  6836  0557  1903               	skipnz
  6837  0558  2CDA               	goto	i1l3333
  6838  0559  3A01               	xorlw	1	; case 9
  6839  055A  1903               	skipnz
  6840  055B  2CE3               	goto	i1l3337
  6841  055C  3A13               	xorlw	19	; case 26
  6842  055D  1903               	skipnz
  6843  055E  2CE3               	goto	i1l3337
  6844  055F  3A01               	xorlw	1	; case 27
  6845  0560  1903               	skipnz
  6846  0561  2CE6               	goto	i1l3339
  6847  0562  3A07               	xorlw	7	; case 28
  6848  0563  1903               	skipnz
  6849  0564  2CE9               	goto	i1l3341
  6850  0565  3A01               	xorlw	1	; case 29
  6851  0566  1903               	skipnz
  6852  0567  2CEB               	goto	i1l3343
  6853  0568  3A03               	xorlw	3	; case 30
  6854  0569  1903               	skipnz
  6855  056A  2CEE               	goto	i1l3345
  6856  056B  3A01               	xorlw	1	; case 31
  6857  056C  1903               	skipnz
  6858  056D  2CF1               	goto	i1l3347
  6859  056E  3A3F               	xorlw	63	; case 32
  6860  056F  1903               	skipnz
  6861  0570  2CF4               	goto	i1l3349
  6862  0571  3A01               	xorlw	1	; case 33
  6863  0572  1903               	skipnz
  6864  0573  2CF7               	goto	i1l3351
  6865  0574  3A03               	xorlw	3	; case 34
  6866  0575  1903               	skipnz
  6867  0576  2CFA               	goto	i1l3353
  6868  0577  3A01               	xorlw	1	; case 35
  6869  0578  1903               	skipnz
  6870  0579  2CFD               	goto	i1l319
  6871  057A  3A07               	xorlw	7	; case 36
  6872  057B  1903               	skipnz
  6873  057C  2CE9               	goto	i1l3341
  6874  057D  3A01               	xorlw	1	; case 37
  6875  057E  1903               	skipnz
  6876  057F  2CE9               	goto	i1l3341
  6877  0580  3A03               	xorlw	3	; case 38
  6878  0581  1903               	skipnz
  6879  0582  2CE9               	goto	i1l3341
  6880  0583  3A01               	xorlw	1	; case 39
  6881  0584  1903               	skipnz
  6882  0585  2CFE               	goto	i1l3357
  6883  0586  3A0F               	xorlw	15	; case 40
  6884  0587  1903               	skipnz
  6885  0588  2D06               	goto	i1l3359
  6886  0589  3A01               	xorlw	1	; case 41
  6887  058A  1903               	skipnz
  6888  058B  2CE9               	goto	i1l3341
  6889  058C  3A03               	xorlw	3	; case 42
  6890  058D  1903               	skipnz
  6891  058E  2CE9               	goto	i1l3341
  6892  058F  3A01               	xorlw	1	; case 43
  6893  0590  1903               	skipnz
  6894  0591  2CE9               	goto	i1l3341
  6895  0592  3A07               	xorlw	7	; case 44
  6896  0593  1903               	skipnz
  6897  0594  2CE9               	goto	i1l3341
  6898  0595  3A01               	xorlw	1	; case 45
  6899  0596  1903               	skipnz
  6900  0597  2D0E               	goto	i1l3361
  6901  0598  3A03               	xorlw	3	; case 46
  6902  0599  1903               	skipnz
  6903  059A  2D16               	goto	i1l3363
  6904  059B  3A01               	xorlw	1	; case 47
  6905  059C  1903               	skipnz
  6906  059D  2D20               	goto	i1l3367
  6907  059E  3A1E               	xorlw	30	; case 49
  6908  059F  1903               	skipnz
  6909  05A0  2CE9               	goto	i1l3341
  6910  05A1  3A03               	xorlw	3	; case 50
  6911  05A2  1903               	skipnz
  6912  05A3  2D2A               	goto	i1l3373
  6913  05A4  3A01               	xorlw	1	; case 51
  6914  05A5  1903               	skipnz
  6915  05A6  2D3C               	goto	i1l3383
  6916  05A7  2CE9               	goto	i1l3341
  6917  05A8                     i1l3391:	
  6918                           
  6919                           ;newmain.c: 815: if (i2cCmd == 0x0)
  6920  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  6921  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  6922  05AA  08D5               	movf	_i2cCmd,f
  6923  05AB  1D03               	skipz
  6924  05AC  2DB0               	goto	i1l3395
  6925                           
  6926                           ;newmain.c: 816: {
  6927                           ;newmain.c: 817: i2cCmd = SSPBUF;
  6928  05AD  0813               	movf	19,w	;volatile
  6929  05AE  00D5               	movwf	_i2cCmd
  6930                           
  6931                           ;newmain.c: 818: }
  6932  05AF  2DB3               	goto	i1l3399
  6933  05B0                     i1l3395:	
  6934                           
  6935                           ;newmain.c: 819: else
  6936                           ;newmain.c: 820: {
  6937                           ;newmain.c: 821: if (i2cEEPROMAddr == 0)
  6938  05B0  08D6               	movf	_i2cEEPROMAddr,f
  6939  05B1  1903               	btfsc	3,2
  6940  05B2  2CB6               	goto	i1l3309
  6941  05B3                     i1l3399:	
  6942                           
  6943                           ;newmain.c: 825: }
  6944                           ;newmain.c: 826: }
  6945                           ;newmain.c: 827: }
  6946                           ;newmain.c: 828: }
  6947                           ;newmain.c: 829: }
  6948                           ;newmain.c: 831: PIR1bits.SSPIF = 0;
  6949  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  6950  05B4  118C               	bcf	12,3	;volatile
  6951  05B5  0008               	return
  6952  05B6                     __end_of_I2CSlaveSR:	
  6953  05B6                     __ptext23:	
  6954 ;; *************** function i1_TEngUbattRW *****************
  6955 ;; Defined at:
  6956 ;;		line 31 in file "EEPROMfunc.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  StartAddr       1    wreg     unsigned char 
  6959 ;;  Teng            1    6[COMMON] PTR unsigned char 
  6960 ;;		 -> TEngTemp(1), UbattMin(1), I2CSlaveSR@x(1), Teng(1), 
  6961 ;;		 -> Ubatt(1), 
  6962 ;;  Read            1    7[COMMON] unsigned char 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  StartAddr       1    3[BANK0 ] unsigned char 
  6965 ;;  TEngUbattRW     1    4[BANK0 ] unsigned char 
  6966 ;;  TEngUbattRW     1    0        unsigned char 
  6967 ;;  TEngUbattRW     1    1[BANK0 ] unsigned char 
  6968 ;;  TEngUbattRW     1    0[BANK0 ] unsigned char 
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  1    wreg      unsigned char 
  6971 ;; Registers used:
  6972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6973 ;; Tracked objects:
  6974 ;;		On entry : 60/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6978 ;;      Params:         2       0       0       0
  6979 ;;      Locals:         0       5       0       0
  6980 ;;      Temps:          2       0       0       0
  6981 ;;      Totals:         4       5       0       0
  6982 ;;Total ram usage:        9 bytes
  6983 ;; Hardware stack levels used:    1
  6984 ;; Hardware stack levels required when called:    1
  6985 ;; This function calls:
  6986 ;;		i1_OutRet
  6987 ;; This function is called by:
  6988 ;;		_I2CSlaveSR
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           
  6993                           ;psect for function i1_TEngUbattRW
  6994  05B6                     i1_TEngUbattRW:	
  6995                           
  6996                           ;incstack = 0
  6997                           ; Regs used in i1_TEngUbattRW: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6998                           ;i1TEngUbattRW@StartAddr stored from wreg
  6999  05B6  00A3               	movwf	i1TEngUbattRW@StartAddr
  7000                           
  7001                           ;EEPROMfunc.c: 33: char addr, lTeng, RTimes, EqTimes;
  7002                           ;EEPROMfunc.c: 34: if (!Read)
  7003  05B7  08F7               	movf	i1TEngUbattRW@Read,f
  7004  05B8  1D03               	skipz
  7005  05B9  2DD8               	goto	i1l3207
  7006                           
  7007                           ;EEPROMfunc.c: 35: {
  7008                           ;EEPROMfunc.c: 36: for (addr = StartAddr; addr < StartAddr + 5; addr++)
  7009  05BA  0823               	movf	i1TEngUbattRW@StartAddr,w
  7010  05BB  00A4               	movwf	i1TEngUbattRW@addr
  7011  05BC                     i1l3199:	
  7012  05BC  0823               	movf	i1TEngUbattRW@StartAddr,w
  7013  05BD  3E05               	addlw	5
  7014  05BE  00F8               	movwf	??i1_TEngUbattRW
  7015  05BF  3000               	movlw	0
  7016  05C0  1803               	skipnc
  7017  05C1  3001               	movlw	1
  7018  05C2  00F9               	movwf	??i1_TEngUbattRW+1
  7019  05C3  3A80               	xorlw	128
  7020  05C4  3C80               	sublw	128
  7021  05C5  1D03               	skipz
  7022  05C6  2DC9               	goto	u341_25
  7023  05C7  0878               	movf	??i1_TEngUbattRW,w
  7024  05C8  0224               	subwf	i1TEngUbattRW@addr,w
  7025  05C9                     u341_25:	
  7026  05C9  1803               	btfsc	3,0
  7027  05CA  0008               	return
  7028                           
  7029                           ;EEPROMfunc.c: 37: {
  7030                           ;EEPROMfunc.c: 38: OutRet (addr, Teng, Read);
  7031  05CB  0876               	movf	i1TEngUbattRW@Teng,w
  7032  05CC  00F0               	movwf	i1OutRet@ret
  7033  05CD  0877               	movf	i1TEngUbattRW@Read,w
  7034  05CE  00F1               	movwf	i1OutRet@Read
  7035  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  7036  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  7037  05D1  0824               	movf	i1TEngUbattRW@addr,w
  7038  05D2  25FD  118A         	fcall	i1_OutRet
  7039  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  7040  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  7041  05D6  0AA4               	incf	i1TEngUbattRW@addr,f
  7042  05D7  2DBC               	goto	i1l3199
  7043  05D8                     i1l3207:	
  7044                           
  7045                           ;EEPROMfunc.c: 44: {
  7046                           ;EEPROMfunc.c: 45: addr = StartAddr + RTimes - 1;
  7047  05D8  0823               	movf	i1TEngUbattRW@StartAddr,w
  7048  05D9  3E04               	addlw	4
  7049  05DA  00A4               	movwf	i1TEngUbattRW@addr
  7050                           
  7051                           ;EEPROMfunc.c: 46: OutRet (addr, Teng, Read);
  7052  05DB  2638  118A         	fcall	PL26	;call to abstracted procedure
  7053  05DD  25FD  118A         	fcall	i1_OutRet
  7054                           
  7055                           ;EEPROMfunc.c: 47: lTeng = *Teng;
  7056  05DF  2631  118A         	fcall	PL24	;call to abstracted procedure
  7057  05E1  00A1               	movwf	i1TEngUbattRW@lTeng
  7058                           
  7059                           ;EEPROMfunc.c: 48: EqTimes = 1;
  7060  05E2  01A0               	clrf	i1TEngUbattRW@EqTimes
  7061  05E3  0AA0               	incf	i1TEngUbattRW@EqTimes,f
  7062  05E4                     i1l3215:	
  7063                           
  7064                           ;EEPROMfunc.c: 50: {
  7065                           ;EEPROMfunc.c: 51: addr--;
  7066  05E4  03A4               	decf	i1TEngUbattRW@addr,f
  7067                           
  7068                           ;EEPROMfunc.c: 52: OutRet (addr, Teng, Read);
  7069  05E5  2638  118A         	fcall	PL26	;call to abstracted procedure
  7070  05E7  25FD  118A         	fcall	i1_OutRet
  7071                           
  7072                           ;EEPROMfunc.c: 53: EqTimes += (lTeng == *Teng);
  7073  05E9  2631  118A         	fcall	PL24	;call to abstracted procedure
  7074  05EB  0621               	xorwf	i1TEngUbattRW@lTeng,w
  7075  05EC  3000               	movlw	0
  7076  05ED  1903               	skipnz
  7077  05EE  3001               	movlw	1
  7078  05EF  07A0               	addwf	i1TEngUbattRW@EqTimes,f
  7079                           
  7080                           ;EEPROMfunc.c: 54: } while (addr >= StartAddr);
  7081  05F0  0823               	movf	i1TEngUbattRW@StartAddr,w
  7082  05F1  0224               	subwf	i1TEngUbattRW@addr,w
  7083  05F2  1803               	skipnc
  7084  05F3  2DE4               	goto	i1l3215
  7085                           
  7086                           ;EEPROMfunc.c: 55: if (EqTimes >= 3)
  7087  05F4  3003               	movlw	3
  7088  05F5  0220               	subwf	i1TEngUbattRW@EqTimes,w
  7089  05F6  1C03               	skipc
  7090  05F7  0008               	return
  7091                           
  7092                           ;EEPROMfunc.c: 56: {
  7093                           ;EEPROMfunc.c: 57: *Teng = lTeng;
  7094  05F8  0876               	movf	i1TEngUbattRW@Teng,w
  7095  05F9  0084               	movwf	4
  7096  05FA  0821               	movf	i1TEngUbattRW@lTeng,w
  7097  05FB  0080               	movwf	0
  7098  05FC  0008               	return
  7099  05FD                     __end_ofi1_TEngUbattRW:	
  7100  05FD                     __ptext24:	
  7101 ;; *************** function i1_OutRet *****************
  7102 ;; Defined at:
  7103 ;;		line 5 in file "EEPROMfunc.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;  addr            1    wreg     unsigned char 
  7106 ;;  ret             1    0[COMMON] PTR unsigned char 
  7107 ;;		 -> TEngTemp(1), UbattMin(1), I2CSlaveSR@x(1), Teng(1), 
  7108 ;;		 -> Ubatt(1), 
  7109 ;;  Read            1    1[COMMON] unsigned char 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  addr            1    4[COMMON] unsigned char 
  7112 ;;  OutRet          1    5[COMMON] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;		None               void
  7115 ;; Registers used:
  7116 ;;		wreg, fsr0l, fsr0h, status,2
  7117 ;; Tracked objects:
  7118 ;;		On entry : 60/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7122 ;;      Params:         2       0       0       0
  7123 ;;      Locals:         2       0       0       0
  7124 ;;      Temps:          2       0       0       0
  7125 ;;      Totals:         6       0       0       0
  7126 ;;Total ram usage:        6 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_I2CSlaveSR
  7132 ;;		i1_TEngUbattRW
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           
  7137                           ;psect for function i1_OutRet
  7138  05FD                     i1_OutRet:	
  7139                           
  7140                           ;incstack = 0
  7141                           ; Regs used in i1_OutRet: [wreg-fsr0h+status,2]
  7142                           ;i1OutRet@addr stored from wreg
  7143  05FD  00F4               	movwf	i1OutRet@addr
  7144                           
  7145                           ;EEPROMfunc.c: 7: char gie = INTCONbits.GIE;
  7146  05FE  3000               	movlw	0
  7147  05FF  1B8B               	btfsc	11,7	;volatile
  7148  0600  3001               	movlw	1
  7149  0601  00F5               	movwf	i1OutRet@gie
  7150                           
  7151                           ;EEPROMfunc.c: 8: INTCONbits.GIE = 0x0;
  7152  0602  138B               	bcf	11,7	;volatile
  7153                           
  7154                           ;EEPROMfunc.c: 9: EEADR = addr;
  7155  0603  0874               	movf	i1OutRet@addr,w
  7156  0604  1703               	bsf	3,6	;RP1=1, select bank2
  7157  0605  008D               	movwf	13	;volatile
  7158                           
  7159                           ;EEPROMfunc.c: 10: EECON1bits.EEPGD = 0x0;
  7160  0606  1683               	bsf	3,5	;RP0=1, select bank3
  7161  0607  138C               	bcf	12,7	;volsfr
  7162                           
  7163                           ;EEPROMfunc.c: 11: if (Read)
  7164  0608  0871               	movf	i1OutRet@Read,w
  7165  0609  1903               	btfsc	3,2
  7166  060A  2E13               	goto	i1l2933
  7167                           
  7168                           ;EEPROMfunc.c: 12: {
  7169                           ;EEPROMfunc.c: 13: EECON1bits.RD = 1;
  7170  060B  140C               	bsf	12,0	;volsfr
  7171                           
  7172                           ;EEPROMfunc.c: 14: *ret = EEDAT;
  7173  060C  0870               	movf	i1OutRet@ret,w
  7174  060D  0084               	movwf	4
  7175  060E  1283               	bcf	3,5	;RP0=0, select bank2
  7176  060F  080C               	movf	12,w	;volatile
  7177  0610  1383               	bcf	3,7	;select IRP bank0
  7178  0611  0080               	movwf	0
  7179                           
  7180                           ;EEPROMfunc.c: 15: }
  7181  0612  2E2B               	goto	i1l536
  7182  0613                     i1l2933:	
  7183                           
  7184                           ;EEPROMfunc.c: 16: else
  7185                           ;EEPROMfunc.c: 17: {
  7186                           ;EEPROMfunc.c: 18: EEDAT = *ret;
  7187  0613  0870               	movf	i1OutRet@ret,w
  7188  0614  0084               	movwf	4
  7189  0615  1383               	bcf	3,7	;select IRP bank0
  7190  0616  0800               	movf	0,w
  7191  0617  1283               	bcf	3,5	;RP0=0, select bank2
  7192  0618  008C               	movwf	12	;volatile
  7193                           
  7194                           ;EEPROMfunc.c: 19: EECON1bits.WREN = 0x1;
  7195  0619  1683               	bsf	3,5	;RP0=1, select bank3
  7196  061A  150C               	bsf	12,2	;volsfr
  7197                           
  7198                           ;EEPROMfunc.c: 20: EECON2 = 0x55;
  7199  061B  3055               	movlw	85
  7200  061C  008D               	movwf	13	;volsfr
  7201                           
  7202                           ;EEPROMfunc.c: 21: EECON2 = 0xAA;
  7203  061D  30AA               	movlw	170
  7204  061E  008D               	movwf	13	;volsfr
  7205                           
  7206                           ;EEPROMfunc.c: 22: EECON1bits.WR = 0x1;
  7207  061F  148C               	bsf	12,1	;volsfr
  7208  0620                     i1l537:	
  7209                           ;EEPROMfunc.c: 25: while(EECON1bits.WR);
  7210                           
  7211  0620  188C               	btfsc	12,1	;volsfr
  7212  0621  2E20               	goto	i1l537
  7213                           
  7214                           ;EEPROMfunc.c: 26: _delay((unsigned long)((100)*(4000000/4000.0)));
  7215  0622  3082               	movlw	130
  7216  0623  00F3               	movwf	??i1_OutRet+1
  7217  0624  30DD               	movlw	221
  7218  0625  00F2               	movwf	??i1_OutRet
  7219  0626                     u540_27:	
  7220  0626  0BF2               	decfsz	??i1_OutRet,f
  7221  0627  2E26               	goto	u540_27
  7222  0628  0BF3               	decfsz	??i1_OutRet+1,f
  7223  0629  2E26               	goto	u540_27
  7224  062A  2E2B               	nop2
  7225  062B                     i1l536:	
  7226                           
  7227                           ;EEPROMfunc.c: 27: }
  7228                           ;EEPROMfunc.c: 28: INTCONbits.GIE = gie;
  7229  062B  0875               	movf	i1OutRet@gie,w
  7230  062C  1D03               	skipz
  7231  062D  178B               	bsf	11,7	;volatile
  7232  062E  1903               	skipnz
  7233  062F  138B               	bcf	11,7	;volatile
  7234  0630  0008               	return
  7235  0631                     __end_ofi1_OutRet:	
  7236  007E                     btemp	set	126	;btemp
  7237  007E                     wtemp	set	126
  7238  007E                     wtemp0	set	126
  7239  0080                     wtemp1	set	128
  7240  0082                     wtemp2	set	130
  7241  0084                     wtemp3	set	132
  7242  0086                     wtemp4	set	134
  7243  0088                     wtemp5	set	136
  7244  007F                     wtemp6	set	127
  7245  007E                     ttemp	set	126
  7246  007E                     ttemp0	set	126
  7247  0081                     ttemp1	set	129
  7248  0084                     ttemp2	set	132
  7249  0087                     ttemp3	set	135
  7250  007F                     ttemp4	set	127
  7251  007E                     ltemp	set	126
  7252  007E                     ltemp0	set	126
  7253  0082                     ltemp1	set	130
  7254  0086                     ltemp2	set	134
  7255  0080                     ltemp3	set	128
  7256  0631                     PL24:	
  7257  0631  0876               	movf	i1TEngUbattRW@Teng,w
  7258  0632  0084               	movwf	4
  7259  0633  1383               	bcf	3,7	;select IRP bank0
  7260  0634  0800               	movf	0,w
  7261  0635  1283               	bcf	3,5	;RP0=0, select bank0
  7262  0636  1303               	bcf	3,6	;RP1=0, select bank0
  7263  0637  0008               	return
  7264  0638                     __end_ofPL24:	
  7265  0638                     PL26:	
  7266  0638  0876               	movf	i1TEngUbattRW@Teng,w
  7267  0639  00F0               	movwf	i1OutRet@ret
  7268  063A  0877               	movf	i1TEngUbattRW@Read,w
  7269  063B  00F1               	movwf	i1OutRet@Read
  7270  063C  0824               	movf	i1TEngUbattRW@addr,w
  7271  063D  0008               	return
  7272  063E                     __end_ofPL26:	
  7273                           
  7274                           	psect	intentry
  7275  0004                     __pintentry:	
  7276                           ;incstack = 0
  7277                           ; Regs used in _InterruptService: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7278                           
  7279  0004                     interrupt_function:	
  7280  007E                     saved_w	set	btemp
  7281  0004  00FE               	movwf	btemp
  7282  0005  0E03               	swapf	3,w
  7283  0006  00FB               	movwf	??_InterruptService
  7284  0007  0804               	movf	4,w
  7285  0008  00FC               	movwf	??_InterruptService+1
  7286  0009  080A               	movf	10,w
  7287  000A  00FD               	movwf	??_InterruptService+2
  7288  000B  118A  2BD5         	ljmp	_InterruptService


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      71
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TXNbytes@d	PTR unsigned char  size(1) Largest target is 6
		 -> WriteLog@d(BANK0[6]), 

    RXbyte@d	PTR unsigned char  size(1) Largest target is 1
		 -> SearchStop@d(BANK0[1]), 

    i2c_rx@d	PTR unsigned char  size(1) Largest target is 1
		 -> SearchStop@d(BANK0[1]), 

    TEngUbattRW@Teng	PTR unsigned char  size(1) Largest target is 1
		 -> TEngTemp(BANK0[1]), UbattMin(BANK0[1]), I2CSlaveSR@x(COMMON[1]), Teng(BANK0[1]), 
		 -> Ubatt(BANK0[1]), 

    OutRet@ret	PTR unsigned char  size(1) Largest target is 1
		 -> TEngTemp(BANK0[1]), UbattMin(BANK0[1]), I2CSlaveSR@x(COMMON[1]), Teng(BANK0[1]), 
		 -> Ubatt(BANK0[1]), 

    TmrRoutines@pBINtmr	PTR unsigned char  size(1) Largest target is 1
		 -> main@BINtmr(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptService in COMMON

    _InterruptService->_I2CSlaveSR
    _I2CSlaveSR->i1_TEngUbattRW
    i1_TEngUbattRW->i1_OutRet

Critical Paths under _main in BANK0

    _main->_WriteLog
    _WriteLog->_TXNbytes
    _TXNbytes->_i2c_tx
    _TmrRoutines->_I2CReset
    _I2CReset->_i2c_init
    _TEngUbattRW->_OutRet
    _SearchStop->_RXbyte
    _RXbyte->_i2c_rx
    _CheckRes->___awdiv
    _StartCheck->_ADC_Start

Critical Paths under _InterruptService in BANK0

    _I2CSlaveSR->i1_TEngUbattRW

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptService in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptService in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    9443
                                             34 BANK0      7     7      0
                           _CheckRes
                        _DetectReset
                        _EngBinState
                         _SearchStop
                         _StartCheck
                        _TEngUbattRW
                        _TmrRoutines
                           _WriteLog
                           _i2c_init
 ---------------------------------------------------------------------------------
 (1) _WriteLog                                            14    13      1    3025
                                             20 BANK0     14    13      1
                           _TXNbytes
 ---------------------------------------------------------------------------------
 (2) _TXNbytes                                            11     8      3    2036
                                              9 BANK0     11     8      3
                          _i2c_start
                           _i2c_stop
                             _i2c_tx
 ---------------------------------------------------------------------------------
 (1) _TmrRoutines                                          5     5      0     198
                                              8 BANK0      5     5      0
                           _I2CReset
 ---------------------------------------------------------------------------------
 (2) _I2CReset                                             2     2      0      44
                                              6 BANK0      2     2      0
                           _i2c_init
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0      44
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TEngUbattRW                                          9     7      2    1766
                                             11 BANK0      9     7      2
                             _OutRet
 ---------------------------------------------------------------------------------
 (2) _OutRet                                               6     4      2     647
                                              5 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SearchStop                                           4     4      0    3437
                                             15 BANK0      4     4      0
                             _RXbyte
 ---------------------------------------------------------------------------------
 (2) _RXbyte                                               5     3      2    2960
                                             10 BANK0      5     3      2
                             _i2c_rx
                          _i2c_start
                           _i2c_stop
                             _i2c_tx
 ---------------------------------------------------------------------------------
 (3) _i2c_tx                                               4     3      1    1415
                                              5 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             2     2      0      46
                                              5 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            1     1      0      22
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_rx                                               5     3      2     840
                                              5 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _EngBinState                                          4     4      0      54
                                              5 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DetectReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckRes                                             4     4      0     756
                                             13 BANK0      4     4      0
                         _StartCheck
                            ___awdiv
                   _decr_check_times
 ---------------------------------------------------------------------------------
 (2) _decr_check_times                                     2     2      0       0
                                              5 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     600
                                              5 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _StartCheck                                           1     1      0      66
                                             10 BANK0      1     1      0
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (2) _ADC_Start                                            5     5      0      44
                                              5 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptService                                     4     4      0    1754
                                             11 COMMON     3     3      0
                         _I2CSlaveSR
 ---------------------------------------------------------------------------------
 (5) _I2CSlaveSR                                           1     1      0    1754
                                             10 COMMON     1     1      0
                           i1_OutRet
                      i1_TEngUbattRW
 ---------------------------------------------------------------------------------
 (6) i1_TEngUbattRW                                        9     7      2    1138
                                              6 COMMON     4     2      2
                                              0 BANK0      5     5      0
                           i1_OutRet
 ---------------------------------------------------------------------------------
 (7) i1_OutRet                                             6     4      2     371
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckRes
     _StartCheck
       _ADC_Start
     ___awdiv
     _decr_check_times
   _DetectReset
   _EngBinState
   _SearchStop
     _RXbyte
       _i2c_rx
       _i2c_start
       _i2c_stop
       _i2c_tx
   _StartCheck
     _ADC_Start
   _TEngUbattRW
     _OutRet
   _TmrRoutines
     _I2CReset
       _i2c_init
   _WriteLog
     _TXNbytes
       _i2c_start
       _i2c_stop
       _i2c_tx
   _i2c_init

 _InterruptService (ROOT)
   _I2CSlaveSR
     i1_OutRet
     i1_TEngUbattRW
       i1_OutRet

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     29      47       3       88.8%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      55       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      55      10        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Dec 26 20:30:16 2015

               __CFG_CP$ON 0000          ?_InterruptService 0070                         PL2 0379  
                       PL4 038A                         PL6 07BD                         PL8 0399  
              _SSPSTATbits 0094                __CFG_CPD$ON 0000               ___awdiv@sign 002A  
       ??_InterruptService 007B         __size_of_ADC_Start 0032                         fsr 0004  
      __size_of_I2CSlaveSR 01C4                        PL10 03A5                        PL20 0C37  
                      PL12 03AF                        PL30 03D1                        PL22 07CC  
                      PL14 03B9                        PL24 0631                        PL16 03C2  
                      PL26 0638                        PL18 03C8                        PL28 0FFB  
                      l400 07E6                        l216 0EB2                        l233 0F46  
                      l227 0F08                        l500 0668                        l244 0FF9  
                      l412 0D36                        l237 0F7C                        l174 00DF  
                      l414 0D2A                        l406 0CFA                        l183 01C7  
                      l351 0E65                        l352 0DA8                        l505 06C4  
                      l363 0DEA                        l604 02AE                        l613 0330  
                      l605 02B3                        l622 0369                        l463 0763  
                      l623 036B                        l607 02BB                        l464 0768  
                      l608 02C5                        l536 0C2F                        l465 076D  
                      l537 0C22                        l385 0E22                        l466 0772  
                      l467 0777                        l491 065F                        l619 034F  
                      l731 0197                        l468 077C                        l484 0656  
                      l396 07D9                        l469 0783                        l494 0662  
                      l398 07DE                        l582 02E8                        l590 0315  
                      l399 07E2                        l488 065C                        l497 0665  
                      l666 0272                        l596 028B                        l598 0293  
                      l599 0295                        _TEB 005B        __end_of_DetectReset 07E9  
                      _day 0054                        _min 0059                        _sec 005A  
                      fsr0 0004                        indf 0000               __CFG_IESO$ON 0000  
               _CheckTimes 004A                       l3031 0275                       l3131 0721  
                     l3035 027D                 _CheckedNow 0062                       l3143 0740  
                     l3063 0C15                       l3081 0757                       l3161 06DE  
                     l4033 0658                       l3171 06EC                       l3155 06D5  
                     l4035 065A                       l3085 075E                       l4061 067F  
                     l3421 0035                       l4221 0D0C                       l3183 0703  
                     l3511 01EE                       l3431 004F                       l3423 0038  
                     l4081 06A1                       l4073 0693                       l4065 0687  
                     l3601 0ED6                       l2801 030A                       l3513 01F2  
                     l3505 01E7                       l3433 006B                       l3417 002F  
                     l4233 0D24                       l3187 070B                       l4091 06BA  
                     l4083 06AB                       l4059 066B                       l3611 0EE3  
                     l3435 007E                       l3451 0118                       l4227 0D18  
                     l4219 0CFF                       l4171 0CB5                       l3621 0F0C  
                     l3541 0234                       l3461 0137                       l3437 00B2  
                     l3429 0042                       l4245 0D3E                       l3623 0EF7  
                     l2831 02AC                       l4167 0CA4                       l2905 0355  
                     l2809 031E                       l2833 02A1                       l3545 0237  
                     l3457 012B                       l3449 00FB                       l3491 01CF  
                     l3459 011B                       l2765 07B8                       l3725 0FC3  
                     l3709 0FA2                       l3557 0E9B                       l3477 01B2  
                     l3901 0DCC                       l3671 0F5E                       l3647 0F1A  
                     l3639 0F0D                       l3559 0E9D                       l3495 01D6  
                     l3903 0DCE                       l3745 0FE4                       l3593 0ECA  
                     l3761 0BB9                       l3841 0D6E                       l3833 0D5E  
                     l2961 0159                       l3691 0F81                       l3659 0F3D  
                     l3587 0EC5                       l3907 0DD1                       l3843 0D70  
                     l2893 033D                       l2885 0340                       l3941 0E1C  
                     l3909 0DE8                       l3861 0D87                       l3829 0D5C  
                     l3845 0D74                       l2981 017B                       l2973 0194  
                     l2965 0164                       l2957 014F                       l3599 0ED3  
                     l2895 034A                       l2799 0311                       l3863 0D89  
                     l2975 0168                       l3777 0BDE                       l3769 0BD0  
                     l3937 0E16                       l3881 0DB4                       l3865 0D8B  
                     l3857 0D83                       l3873 0D92                       l3849 0D7A  
                     l2969 0182                       l2985 019A                       l3699 0F8B  
                     l3955 0E37                       l3891 0DC2                       l3867 0D8D  
                     l3859 0D85                       l3875 0DA6                       l2995 01A9  
                     l3973 0E58                       l3893 0DC4                       l3869 0D8F  
                     l2989 01A2                       l3895 0DC6                       l3897 0DC8  
                     l3889 0DC0                       l3899 0DCA                       u3314 072B  
                     u3315 0729                       u3324 0737                       u3325 0735  
                     _PIE1 008C                       u2645 07A5                       u3605 0081  
                     u3294 071C                       u3375 06F5                       u3295 071A  
                     u5307 0E6C                       u5317 0C2A                       u4365 0BC6  
              RXbyte@addrH 002C                       u5327 0F23                       u3815 0222  
                     u5337 0F33                       u3585 0045                       u5257 0C8C  
              RXbyte@addrL 002A                       u5347 0F54                       u3595 0052  
                     u5267 0CD4                       u5357 0F97                       u5277 0CE4  
                     u5367 0FB6                       u5287 0123                       u5377 0FED  
                     u5297 0E4D                       _PIR1 000C                       _PIR2 000D  
                     u5387 0744                       u5397 07B6                       _TMR0 0001  
                     _WPUA 0095                       _WPUB 0115         StartCheck@OnceMore 002A  
                     _Teng 005D                       _main 0C3D                       _hour 0060  
         __end_of_I2CReset 0E73                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 000D                       ttemp 007E  
                     wtemp 007E              __CFG_MCLRE$ON 0000                      ?_main 0070  
          __end_of___awdiv 0710                      _EEADR 010D                      _EEDAT 010C  
            __CFG_WDTE$OFF 0000                      _ANSEL 011E            ___awdiv@divisor 0025  
                    _T1CON 0010                      i1l154 03E9                      i1l254 04B8  
                    i1l319 04FD                      i1l258 04B5                      i1l536 062B  
                    i1l537 0620            ___awdiv@counter 0029                      _TMR1H 000F  
                    _TMR1L 000E                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _BinSt 0049                      _EngSt 004B  
            __CFG_PWRTE$ON 0000             __CFG_FCMEN$OFF 0000                      _Ubatt 005E  
              _TEngUbattRW 0BB3                      _addrh 0052                      _addrl 0053  
               _i2cHoldTmr 0057           __end_ofi1_OutRet 0631                _EngBinState 0E90  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080          __end_of_ADC_Start 07BD  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
         __end_of_CheckRes 06CB                      wtemp0 007E                      wtemp1 0080  
                    wtemp2 0082                      wtemp3 0084                      wtemp4 0086  
                    wtemp5 0088                      wtemp6 007F           __end_of_TXNbytes 01AB  
          __initialization 000F               __end_of_main 0D44                 _IntSvcSync 004C  
              _DetectReset 07D3           __end_of_i2c_init 0E90           __end_of_i2c_stop 0326  
                   ??_main 0042                _EngStartTmr 0063      __end_ofi1_TEngUbattRW 05FD  
               _SearchStop 01AB                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E                     _EECON2 018D  
         ___awdiv@dividend 0027                     _ANSELH 011F               ??_I2CSlaveSR 007A  
         __end_of_WriteLog 013D                     i1l3301 044B                     i1l3215 05E4  
                   i1l3207 05D8                     i1l3303 044E                     i1l4111 03E6  
                   i1l4103 03DE                     i1l3321 04C5                     i1l3241 03FC  
                   i1l3323 04C8                     i1l3251 040D                     i1l3307 0450  
                   i1l3341 04E9                     i1l3333 04DA                     i1l3325 04CB  
                   i1l3317 04BF                     i1l3309 04B6                     i1l3261 0417  
                   i1l3253 040F                     i1l3351 04F7                     i1l3343 04EB  
                   i1l3327 04CE                     i1l3319 04C2                     i1l3271 0421  
                   i1l3263 0419                     i1l3255 0411                     i1l3247 0409  
                   i1l3361 050E                     i1l3353 04FA                     i1l3345 04EE  
                   i1l3337 04E3                     i1l3329 04D1                     i1l3281 042B  
                   i1l3273 0423                     i1l3265 041B                     i1l3257 0413  
                   i1l3249 040B                     i1l3363 0516                     i1l3347 04F1  
                   i1l3339 04E6                     i1l3291 043D                     i1l3283 042D  
                   i1l3275 0425                     i1l3267 041D                     i1l3259 0415  
                   i1l3373 052A                     i1l3357 04FE                     i1l3349 04F4  
                   i1l3293 043F                     i1l3285 0431                     i1l3277 0427  
                   i1l3269 041F                     i1l3199 05BC                     i1l3383 053C  
                   i1l3367 0520                     i1l3359 0506                     i1l3391 05A8  
                   i1l3295 0441                     i1l3287 0435                     i1l3279 0429  
                   i1l3377 0530                     i1l3297 0445                     i1l3289 0439  
                   i1l3395 05B0                     i1l3299 0449                     i1l2933 0613  
                   i1l3389 053F                     i1l3399 05B3                     _INTCON 000B  
                   u341_25 05C9                     u540_27 0626                _i2cSSPIFTmr 0058  
                   _WDTCON 0097                     _SSPADD 0093                     _SSPCON 0014  
                   _SSPBUF 0013         __size_of_i2c_start 0020                     _SSPMSK 0093  
                   _i2cCmd 0055                     _RXbyte 023A                     _i2c_rx 0326  
                   _i2c_tx 0282           _decr_check_times 0710                     _OutRet 0BF9  
               OutRet@Read 0026                 OutRet@addr 0029                  ??___awdiv 0029  
         ___awdiv@quotient 002B         __end_of_I2CSlaveSR 05B6                  ?_I2CReset 0070  
                   saved_w 007E                 _StartCheck 074A                SearchStop@d 0032  
  __end_of__initialization 0015              ??_TmrRoutines 0028             __pcstackCOMMON 0070  
               __end_ofPL2 038A                 __end_ofPL4 0399                 __end_ofPL6 07CC  
               __end_ofPL8 03A5                  ?i1_OutRet 0070          __end_of_i2c_start 02FD  
                ?_CheckRes 0070             _OPTION_REGbits 0081                 ??_I2CReset 0026  
              ?_SearchStop 0070  __size_of_InterruptService 001D                  ?_TXNbytes 0029  
               __pbssBANK0 0049            main@ResetReason 0045                  ?_i2c_init 0070  
                ?_i2c_stop 0070            TEngUbattRW@Read 002C            TEngUbattRW@Teng 002B  
                  ?_RXbyte 002A                    ?_i2c_rx 0025                    ?_i2c_tx 0025  
          TEngUbattRW@addr 0033                 __pmaintext 0C3D                    ?_OutRet 0025  
      __end_of_TmrRoutines 0E67                 __pintentry 0004       i1TEngUbattRW@EqTimes 0020  
               ??i1_OutRet 0072                  ?_WriteLog 0034                 ??_CheckRes 002D  
              ?_StartCheck 0070               ?_TEngUbattRW 002B                    _TEBPrev 0050  
               ??_TXNbytes 002C                    _SSPSTAT 0094               ?_EngBinState 0070  
                  RXbyte@d 002B                    RXbyte@i 002E                    i2c_rx@d 0025  
                  i2c_rx@i 0028                    i2c_rx@j 0029                    i2c_tx@i 0028  
               ??_i2c_init 0025                 ??_i2c_stop 0025                    _ToCheck 0051  
                _ADC_Start 078B            __size_of_RXbyte 0048            __size_of_i2c_rx 0053  
          __size_of_i2c_tx 005B            __size_of_OutRet 003E                    ___awdiv 06CB  
      __size_of_SearchStop 008F               ?_DetectReset 0070                 ??_WriteLog 0035  
                  __ptext1 0018                    __ptext2 013D                    __ptext3 0D44  
                  __ptext4 0E67                    __ptext5 0E73                    __ptext6 0BB3  
                  __ptext7 0BF9                    __ptext8 01AB                    __ptext9 023A  
                _T1CONbits 0010   __end_of_decr_check_times 074A                    clrloop0 07EA  
     end_of_initialization 0015     i1TEngUbattRW@StartAddr 0023                _TmrRoutines 0D44  
               ?_ADC_Start 0070              i2c_stop@Force 0025        __size_of_StartCheck 0041  
                TXNbytes@N 002A                  TXNbytes@d 002B                  TXNbytes@i 0033  
                TXNbytes@j 0031     i2c_rx@ClkStrRetryTimes 0026                  _PORTAbits 0005  
                _PORTBbits 0006                  _PORTCbits 0007                 main@BINtmr 0048  
                _TRISBbits 0086           _InterruptService 03D5          __size_of_I2CReset 000C  
     TEngUbattRW@StartAddr 0032                  i2c_rx@ack 0027                 main@resbin 0046  
               main@restmr 0047             __end_of_RXbyte 0282             __end_of_i2c_rx 0379  
           __end_of_i2c_tx 02DD     __size_ofi1_TEngUbattRW 0047             __end_of_OutRet 0C37  
                _NewASRTmr 0064          __size_ofi1_OutRet 0034              _i2cEEPROMAddr 0056  
              __end_ofPL10 03AF                __end_ofPL20 0C3D                __end_ofPL12 03B9  
              __end_ofPL30 03D5                __end_ofPL22 07D3                __end_ofPL14 03C2  
              __end_ofPL24 0638                __end_ofPL16 03C8                __end_ofPL26 063E  
              __end_ofPL18 03D1                __end_ofPL28 1000        start_initialization 000F  
                _NewBinTmr 0065               ??_SearchStop 002F                  _i2c_start 02DD  
        __size_of_CheckRes 008D              TXNbytes@addrh 0030              TXNbytes@addrl 0029  
     __size_of_TEngUbattRW 0046          __size_of_TXNbytes 006E       __size_of_EngBinState 016B  
        __size_of_i2c_init 001D          __size_of_i2c_stop 0029                ??_ADC_Start 0025  
                 ??_RXbyte 002C                   ??_i2c_rx 0027                   ??_i2c_tx 0026  
                 ??_OutRet 0027                  OutRet@gie 002A                  OutRet@ret 0025  
       TEngUbattRW@EqTimes 002F         __end_of_SearchStop 023A                  _StateTest 004F  
     __size_of_DetectReset 0016              WriteLog@Event 003B          __size_of_WriteLog 0125  
                ___latbits 0001              __pcstackBANK0 0020               ??_StartCheck 002A  
               ?_i2c_start 0070              i1_TEngUbattRW 05B6      EngBinState@WrLogEvent 0028  
                __pnvBANK0 0061           TEngUbattRW@lTeng 0030                  WriteLog@d 003C  
                WriteLog@i 003A                   ?___awdiv 0025         __end_of_StartCheck 078B  
              I2CSlaveSR@x 007A      TmrRoutines@WrLogEvent 002B          i2c_init@slaveaddr 0025  
                 _I2CReset 0E67             ?i1_TEngUbattRW 0076          ?_decr_check_times 0070  
       ??_decr_check_times 0025                   _ASRONTmr 0061          interrupt_function 0004  
                 _IOCBbits 0116               ?_TmrRoutines 0070         i2c_tx@CareAboutAck 0025  
                clear_ram0 07E9                   _PIE1bits 008C        i2c_tx@ClckStretchus 0026  
                 _PCONbits 008E                   _PIR1bits 000C   __end_of_InterruptService 03F2  
                 i1_OutRet 05FD                 _ADCON0bits 001F                   _CheckRes 063E  
                 i2c_tx@dt 0027                   _TEngTemp 005C                ??_i2c_start 0025  
                 _TXNbytes 013D                 _I2CSlaveSR 03F2                   _i2c_init 0E73  
                 _i2c_stop 02FD                   _NewState 004D                 _EECON1bits 018C  
                 _PinState 004E                   _UbattMin 005F                   _UbattTmr 0066  
         __size_of___awdiv 0045                   _WriteLog 0018            ??i1_TEngUbattRW 0078  
         SearchStop@addrhs 0030           SearchStop@addrls 0031                   __ptext10 0282  
                 __ptext11 02FD                   __ptext20 078B                   __ptext12 02DD  
                 __ptext21 03D5                   __ptext13 0326                   __ptext22 03F2  
                 __ptext14 0E90                   __ptext23 05B6                   __ptext15 07D3  
                 __ptext24 05FD                   __ptext16 063E                   __ptext17 0710  
                 __ptext18 06CB                   __ptext19 074A         i1TEngUbattRW@lTeng 0021  
      WriteLog@ResetReason 0034              __size_of_main 0107                 CheckRes@Ub 002F  
               CheckRes@Te 0030                TXNbytes@ret 0032                 _INTCONbits 000B  
            ??_TEngUbattRW 002D              ADC_Start@ANCh 0029            i2c_stop@sttries 0026  
            ??_EngBinState 0025                ?_I2CSlaveSR 0070                   intlevel1 0000  
        i1TEngUbattRW@Read 0077          i1TEngUbattRW@Teng 0076          i1TEngUbattRW@addr 0024  
           i2c_start@force 0025       __size_of_TmrRoutines 0123              ??_DetectReset 0025  
       TmrRoutines@pBINtmr 002C               i1OutRet@Read 0071               i1OutRet@addr 0074  
      __end_of_TEngUbattRW 0BF9                i1OutRet@gie 0075                 _STATUSbits 0003  
              i1OutRet@ret 0070          __CFG_FOSC$INTRCIO 0000                 _SSPCONbits 0014  
      __end_of_EngBinState 0FFB  __size_of_decr_check_times 003A  


# 1 "newmain.c"

# 8 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 7 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdarg.h"
typedef void * va_list[1];

#pragma intrinsic(__va_start)
extern void * __va_start(void);

#pragma intrinsic(__va_arg)
extern void * __va_arg(void *, ...);

# 23 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h"
extern int errno;

# 54
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern __bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 99 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);


# 191
#pragma printf_check(vprintf) const
#pragma printf_check(vsprintf) const

extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 27 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdlib.h"
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);




extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);


extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);




extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

extern char * ftoa(float f, int * status);

# 77 "../../i2c/i2c_my.h"
void i2c_init (unsigned char slaveaddr);
char i2c_start (char);
char i2c_stop (char Force);
char i2c_tx (unsigned char dt, char);
char i2c_rx (char ack, char *d, char ClkStrRetryTimes);
char TXbyte (char addrh, char addrl, char data);
char TXWaitACK (char cyclestowait);
char RXbyte (char addrH, char addrL, char *d);
char RX16bytes (char addrH, char addrL, char *d);
char RXNbytes (char addrH, char addrL, char N, char *d);
char TXNbytes (char addrh, char addrl, char N, char *d);

char TXCmdToPIC16 (char* cmd, char size, char WaitBtwnCmdms);
char RXfromPIC16 (char *cmd, char size, char WaitBtwnCmdms);

# 16 "PinsCheck.h"
char PinState;


char NewState;
char Teng;
char Ubatt;



char CheckTimes;
char ToCheck;

# 39
char CheckedNow;

# 59
char StartCheck (char OnceMore);
char decr_check_times (void);
void CheckRes (void);

# 65
void ADC_Start (char ANCh);

void OutRet (char, char *, char);

# 59 "EngBinSt.h"
unsigned char IntSvcSync;

# 69
unsigned char StateTest;

# 94
unsigned char BinSt, EngSt, NewBinTmr, NewASRTmr, ASRONTmr, EngStartTmr, UbattTmr, TEB, TEBPrev;

# 20 "EEPROMfunc.h"
unsigned char TEngUbattRW (unsigned char StartAddr, char *Teng, char Read);
void OutRet (char addr, char *ret, char Read);

# 21 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\htc.h"
extern const char __xc8_OPTIM_SPEED;

#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 47 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f690.h"
extern volatile unsigned char INDF @ 0x000;

asm("INDF equ 00h");



extern volatile unsigned char TMR0 @ 0x001;

asm("TMR0 equ 01h");



extern volatile unsigned char PCL @ 0x002;

asm("PCL equ 02h");



extern volatile unsigned char STATUS @ 0x003;

asm("STATUS equ 03h");


typedef union {
struct {
unsigned C :1;
unsigned DC :1;
unsigned Z :1;
unsigned nPD :1;
unsigned nTO :1;
unsigned RP :2;
unsigned IRP :1;
};
struct {
unsigned :5;
unsigned RP0 :1;
unsigned RP1 :1;
};
struct {
unsigned CARRY :1;
};
struct {
unsigned :2;
unsigned ZERO :1;
};
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits @ 0x003;

# 152
extern volatile unsigned char FSR @ 0x004;

asm("FSR equ 04h");



extern volatile unsigned char PORTA @ 0x005;

asm("PORTA equ 05h");


typedef union {
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
};
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits @ 0x005;

# 207
extern volatile unsigned char PORTB @ 0x006;

asm("PORTB equ 06h");


typedef union {
struct {
unsigned :4;
unsigned RB4 :1;
unsigned RB5 :1;
unsigned RB6 :1;
unsigned RB7 :1;
};
} PORTBbits_t;
extern volatile PORTBbits_t PORTBbits @ 0x006;

# 245
extern volatile unsigned char PORTC @ 0x007;

asm("PORTC equ 07h");


typedef union {
struct {
unsigned RC0 :1;
unsigned RC1 :1;
unsigned RC2 :1;
unsigned RC3 :1;
unsigned RC4 :1;
unsigned RC5 :1;
unsigned RC6 :1;
unsigned RC7 :1;
};
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits @ 0x007;

# 306
extern volatile unsigned char PCLATH @ 0x00A;

asm("PCLATH equ 0Ah");



extern volatile unsigned char INTCON @ 0x00B;

asm("INTCON equ 0Bh");


typedef union {
struct {
unsigned RABIF :1;
unsigned INTF :1;
unsigned T0IF :1;
unsigned RABIE :1;
unsigned INTE :1;
unsigned T0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits @ 0x00B;

# 373
extern volatile unsigned char PIR1 @ 0x00C;

asm("PIR1 equ 0Ch");


typedef union {
struct {
unsigned TMR1IF :1;
unsigned TMR2IF :1;
unsigned CCP1IF :1;
unsigned SSPIF :1;
unsigned TXIF :1;
unsigned RCIF :1;
unsigned ADIF :1;
};
struct {
unsigned T1IF :1;
unsigned T2IF :1;
};
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits @ 0x00C;

# 442
extern volatile unsigned char PIR2 @ 0x00D;

asm("PIR2 equ 0Dh");


typedef union {
struct {
unsigned :4;
unsigned EEIF :1;
unsigned C1IF :1;
unsigned C2IF :1;
unsigned OSFIF :1;
};
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits @ 0x00D;

# 480
extern volatile unsigned short TMR1 @ 0x00E;

asm("TMR1 equ 0Eh");



extern volatile unsigned char TMR1L @ 0x00E;

asm("TMR1L equ 0Eh");



extern volatile unsigned char TMR1H @ 0x00F;

asm("TMR1H equ 0Fh");



extern volatile unsigned char T1CON @ 0x010;

asm("T1CON equ 010h");


typedef union {
struct {
unsigned TMR1ON :1;
unsigned TMR1CS :1;
unsigned nT1SYNC :1;
unsigned T1OSCEN :1;
unsigned T1CKPS :2;
unsigned TMR1GE :1;
unsigned T1GINV :1;
};
struct {
unsigned :4;
unsigned T1CKPS0 :1;
unsigned T1CKPS1 :1;
};
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits @ 0x010;

# 568
extern volatile unsigned char TMR2 @ 0x011;

asm("TMR2 equ 011h");



extern volatile unsigned char T2CON @ 0x012;

asm("T2CON equ 012h");


typedef union {
struct {
unsigned T2CKPS :2;
unsigned TMR2ON :1;
unsigned TOUTPS :4;
};
struct {
unsigned T2CKPS0 :1;
unsigned T2CKPS1 :1;
unsigned :1;
unsigned TOUTPS0 :1;
unsigned TOUTPS1 :1;
unsigned TOUTPS2 :1;
unsigned TOUTPS3 :1;
};
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits @ 0x012;

# 644
extern volatile unsigned char SSPBUF @ 0x013;

asm("SSPBUF equ 013h");



extern volatile unsigned char SSPCON @ 0x014;

asm("SSPCON equ 014h");


typedef union {
struct {
unsigned SSPM :4;
unsigned CKP :1;
unsigned SSPEN :1;
unsigned SSPOV :1;
unsigned WCOL :1;
};
struct {
unsigned SSPM0 :1;
unsigned SSPM1 :1;
unsigned SSPM2 :1;
unsigned SSPM3 :1;
};
} SSPCONbits_t;
extern volatile SSPCONbits_t SSPCONbits @ 0x014;

# 719
extern volatile unsigned short CCPR @ 0x015;

asm("CCPR equ 015h");



extern volatile unsigned char CCPR1L @ 0x015;

asm("CCPR1L equ 015h");



extern volatile unsigned char CCPR1H @ 0x016;

asm("CCPR1H equ 016h");



extern volatile unsigned char CCP1CON @ 0x017;

asm("CCP1CON equ 017h");


typedef union {
struct {
unsigned CCP1M :4;
unsigned DC1B :2;
unsigned P1M :2;
};
struct {
unsigned CCP1M0 :1;
unsigned CCP1M1 :1;
unsigned CCP1M2 :1;
unsigned CCP1M3 :1;
unsigned DC1B0 :1;
unsigned DC1B1 :1;
unsigned P1M0 :1;
unsigned P1M1 :1;
};
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;

# 818
extern volatile unsigned char RCSTA @ 0x018;

asm("RCSTA equ 018h");


typedef union {
struct {
unsigned RX9D :1;
unsigned OERR :1;
unsigned FERR :1;
unsigned ADDEN :1;
unsigned CREN :1;
unsigned SREN :1;
unsigned RX9 :1;
unsigned SPEN :1;
};
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits @ 0x018;

# 879
extern volatile unsigned char TXREG @ 0x019;

asm("TXREG equ 019h");



extern volatile unsigned char RCREG @ 0x01A;

asm("RCREG equ 01Ah");



extern volatile unsigned char PWM1CON @ 0x01C;

asm("PWM1CON equ 01Ch");


typedef union {
struct {
unsigned PDC :7;
unsigned PRSEN :1;
};
struct {
unsigned PDC0 :1;
unsigned PDC1 :1;
unsigned PDC2 :1;
unsigned PDC3 :1;
unsigned PDC4 :1;
unsigned PDC5 :1;
unsigned PDC6 :1;
};
} PWM1CONbits_t;
extern volatile PWM1CONbits_t PWM1CONbits @ 0x01C;

# 960
extern volatile unsigned char ECCPAS @ 0x01D;

asm("ECCPAS equ 01Dh");


typedef union {
struct {
unsigned PSSBD :2;
unsigned PSSAC :2;
unsigned ECCPAS :3;
unsigned ECCPASE :1;
};
struct {
unsigned PSSBD0 :1;
unsigned PSSBD1 :1;
unsigned PSSAC0 :1;
unsigned PSSAC1 :1;
unsigned ECCPAS0 :1;
unsigned ECCPAS1 :1;
unsigned ECCPAS2 :1;
};
} ECCPASbits_t;
extern volatile ECCPASbits_t ECCPASbits @ 0x01D;

# 1041
extern volatile unsigned char ADRESH @ 0x01E;

asm("ADRESH equ 01Eh");



extern volatile unsigned char ADCON0 @ 0x01F;

asm("ADCON0 equ 01Fh");


typedef union {
struct {
unsigned ADON :1;
unsigned GO_nDONE :1;
unsigned CHS :4;
unsigned VCFG :1;
unsigned ADFM :1;
};
struct {
unsigned :1;
unsigned GO :1;
unsigned CHS0 :1;
unsigned CHS1 :1;
unsigned CHS2 :1;
unsigned CHS3 :1;
};
struct {
unsigned :1;
unsigned nDONE :1;
};
struct {
unsigned :1;
unsigned GO_DONE :1;
};
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits @ 0x01F;

# 1141
extern volatile unsigned char OPTION_REG @ 0x081;

asm("OPTION_REG equ 081h");


typedef union {
struct {
unsigned PS :3;
unsigned PSA :1;
unsigned T0SE :1;
unsigned T0CS :1;
unsigned INTEDG :1;
unsigned nRABPU :1;
};
struct {
unsigned PS0 :1;
unsigned PS1 :1;
unsigned PS2 :1;
};
} OPTION_REGbits_t;
extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;

# 1210
extern volatile unsigned char TRISA @ 0x085;

asm("TRISA equ 085h");


typedef union {
struct {
unsigned TRISA0 :1;
unsigned TRISA1 :1;
unsigned TRISA2 :1;
unsigned TRISA3 :1;
unsigned TRISA4 :1;
unsigned TRISA5 :1;
};
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits @ 0x085;

# 1259
extern volatile unsigned char TRISB @ 0x086;

asm("TRISB equ 086h");


typedef union {
struct {
unsigned :4;
unsigned TRISB4 :1;
unsigned TRISB5 :1;
unsigned TRISB6 :1;
unsigned TRISB7 :1;
};
} TRISBbits_t;
extern volatile TRISBbits_t TRISBbits @ 0x086;

# 1297
extern volatile unsigned char TRISC @ 0x087;

asm("TRISC equ 087h");


typedef union {
struct {
unsigned TRISC0 :1;
unsigned TRISC1 :1;
unsigned TRISC2 :1;
unsigned TRISC3 :1;
unsigned TRISC4 :1;
unsigned TRISC5 :1;
unsigned TRISC6 :1;
unsigned TRISC7 :1;
};
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits @ 0x087;

# 1358
extern volatile unsigned char PIE1 @ 0x08C;

asm("PIE1 equ 08Ch");


typedef union {
struct {
unsigned TMR1IE :1;
unsigned TMR2IE :1;
unsigned CCP1IE :1;
unsigned SSPIE :1;
unsigned TXIE :1;
unsigned RCIE :1;
unsigned ADIE :1;
};
struct {
unsigned T1IE :1;
unsigned T2IE :1;
};
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits @ 0x08C;

# 1427
extern volatile unsigned char PIE2 @ 0x08D;

asm("PIE2 equ 08Dh");


typedef union {
struct {
unsigned :4;
unsigned EEIE :1;
unsigned C1IE :1;
unsigned C2IE :1;
unsigned OSFIE :1;
};
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits @ 0x08D;

# 1465
extern volatile unsigned char PCON @ 0x08E;

asm("PCON equ 08Eh");


typedef union {
struct {
unsigned nBOR :1;
unsigned nPOR :1;
unsigned :2;
unsigned SBOREN :1;
unsigned ULPWUE :1;
};
} PCONbits_t;
extern volatile PCONbits_t PCONbits @ 0x08E;

# 1503
extern volatile unsigned char OSCCON @ 0x08F;

asm("OSCCON equ 08Fh");


typedef union {
struct {
unsigned SCS :1;
unsigned LTS :1;
unsigned HTS :1;
unsigned OSTS :1;
unsigned IRCF :3;
};
struct {
unsigned :4;
unsigned IRCF0 :1;
unsigned IRCF1 :1;
unsigned IRCF2 :1;
};
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits @ 0x08F;

# 1567
extern volatile unsigned char OSCTUNE @ 0x090;

asm("OSCTUNE equ 090h");


typedef union {
struct {
unsigned TUN :5;
};
struct {
unsigned TUN0 :1;
unsigned TUN1 :1;
unsigned TUN2 :1;
unsigned TUN3 :1;
unsigned TUN4 :1;
};
} OSCTUNEbits_t;
extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;

# 1618
extern volatile unsigned char PR2 @ 0x092;

asm("PR2 equ 092h");



extern volatile unsigned char SSPADD @ 0x093;

asm("SSPADD equ 093h");



extern volatile unsigned char SSPMSK @ 0x093;

asm("SSPMSK equ 093h");


extern volatile unsigned char MSK @ 0x093;

asm("MSK equ 093h");


typedef union {
struct {
unsigned MSK0 :1;
unsigned MSK1 :1;
unsigned MSK2 :1;
unsigned MSK3 :1;
unsigned MSK4 :1;
unsigned MSK5 :1;
unsigned MSK6 :1;
unsigned MSK7 :1;
};
} SSPMSKbits_t;
extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;

# 1695
typedef union {
struct {
unsigned MSK0 :1;
unsigned MSK1 :1;
unsigned MSK2 :1;
unsigned MSK3 :1;
unsigned MSK4 :1;
unsigned MSK5 :1;
unsigned MSK6 :1;
unsigned MSK7 :1;
};
} MSKbits_t;
extern volatile MSKbits_t MSKbits @ 0x093;

# 1751
extern volatile unsigned char SSPSTAT @ 0x094;

asm("SSPSTAT equ 094h");


typedef union {
struct {
unsigned BF :1;
unsigned UA :1;
unsigned R_nW :1;
unsigned S :1;
unsigned P :1;
unsigned D_nA :1;
unsigned CKE :1;
unsigned SMP :1;
};
struct {
unsigned :2;
unsigned R :1;
unsigned :2;
unsigned D :1;
};
struct {
unsigned :2;
unsigned I2C_READ :1;
unsigned I2C_START :1;
unsigned I2C_STOP :1;
unsigned I2C_DATA :1;
};
struct {
unsigned :2;
unsigned nW :1;
unsigned :2;
unsigned nA :1;
};
struct {
unsigned :2;
unsigned nWRITE :1;
unsigned :2;
unsigned nADDRESS :1;
};
struct {
unsigned :2;
unsigned R_W :1;
unsigned :2;
unsigned D_A :1;
};
struct {
unsigned :2;
unsigned READ_WRITE :1;
unsigned :2;
unsigned DATA_ADDRESS :1;
};
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;

# 1919
extern volatile unsigned char WPUA @ 0x095;

asm("WPUA equ 095h");


extern volatile unsigned char WPU @ 0x095;

asm("WPU equ 095h");


typedef union {
struct {
unsigned WPUA0 :1;
unsigned WPUA1 :1;
unsigned WPUA2 :1;
unsigned :1;
unsigned WPUA4 :1;
unsigned WPUA5 :1;
};
struct {
unsigned WPU0 :1;
unsigned WPU1 :1;
unsigned WPU2 :1;
unsigned :1;
unsigned WPU4 :1;
unsigned WPU5 :1;
};
} WPUAbits_t;
extern volatile WPUAbits_t WPUAbits @ 0x095;

# 2000
typedef union {
struct {
unsigned WPUA0 :1;
unsigned WPUA1 :1;
unsigned WPUA2 :1;
unsigned :1;
unsigned WPUA4 :1;
unsigned WPUA5 :1;
};
struct {
unsigned WPU0 :1;
unsigned WPU1 :1;
unsigned WPU2 :1;
unsigned :1;
unsigned WPU4 :1;
unsigned WPU5 :1;
};
} WPUbits_t;
extern volatile WPUbits_t WPUbits @ 0x095;

# 2072
extern volatile unsigned char IOCA @ 0x096;

asm("IOCA equ 096h");


extern volatile unsigned char IOC @ 0x096;

asm("IOC equ 096h");


typedef union {
struct {
unsigned IOCA0 :1;
unsigned IOCA1 :1;
unsigned IOCA2 :1;
unsigned IOCA3 :1;
unsigned IOCA4 :1;
unsigned IOCA5 :1;
};
struct {
unsigned IOC0 :1;
unsigned IOC1 :1;
unsigned IOC2 :1;
unsigned IOC3 :1;
unsigned IOC4 :1;
unsigned IOC5 :1;
};
} IOCAbits_t;
extern volatile IOCAbits_t IOCAbits @ 0x096;

# 2163
typedef union {
struct {
unsigned IOCA0 :1;
unsigned IOCA1 :1;
unsigned IOCA2 :1;
unsigned IOCA3 :1;
unsigned IOCA4 :1;
unsigned IOCA5 :1;
};
struct {
unsigned IOC0 :1;
unsigned IOC1 :1;
unsigned IOC2 :1;
unsigned IOC3 :1;
unsigned IOC4 :1;
unsigned IOC5 :1;
};
} IOCbits_t;
extern volatile IOCbits_t IOCbits @ 0x096;

# 2245
extern volatile unsigned char WDTCON @ 0x097;

asm("WDTCON equ 097h");


typedef union {
struct {
unsigned SWDTEN :1;
unsigned WDTPS :4;
};
struct {
unsigned :1;
unsigned WDTPS0 :1;
unsigned WDTPS1 :1;
unsigned WDTPS2 :1;
unsigned WDTPS3 :1;
};
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits @ 0x097;

# 2297
extern volatile unsigned char TXSTA @ 0x098;

asm("TXSTA equ 098h");


typedef union {
struct {
unsigned TX9D :1;
unsigned TRMT :1;
unsigned BRGH :1;
unsigned SENDB :1;
unsigned SYNC :1;
unsigned TXEN :1;
unsigned TX9 :1;
unsigned CSRC :1;
};
struct {
unsigned :3;
unsigned SENB :1;
};
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits @ 0x098;

# 2367
extern volatile unsigned char SPBRG @ 0x099;

asm("SPBRG equ 099h");


typedef union {
struct {
unsigned BRG0 :1;
unsigned BRG1 :1;
unsigned BRG2 :1;
unsigned BRG3 :1;
unsigned BRG4 :1;
unsigned BRG5 :1;
unsigned BRG6 :1;
unsigned BRG7 :1;
};
} SPBRGbits_t;
extern volatile SPBRGbits_t SPBRGbits @ 0x099;

# 2428
extern volatile unsigned char SPBRGH @ 0x09A;

asm("SPBRGH equ 09Ah");


typedef union {
struct {
unsigned BRG8 :1;
unsigned BRG9 :1;
unsigned BRG10 :1;
unsigned BRG11 :1;
unsigned BRG12 :1;
unsigned BRG13 :1;
unsigned BRG14 :1;
unsigned BRG15 :1;
};
} SPBRGHbits_t;
extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;

# 2489
extern volatile unsigned char BAUDCTL @ 0x09B;

asm("BAUDCTL equ 09Bh");


typedef union {
struct {
unsigned ABDEN :1;
unsigned WUE :1;
unsigned :1;
unsigned BRG16 :1;
unsigned SCKP :1;
unsigned :1;
unsigned RCIDL :1;
unsigned ABDOVF :1;
};
} BAUDCTLbits_t;
extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x09B;

# 2540
extern volatile unsigned char ADRESL @ 0x09E;

asm("ADRESL equ 09Eh");



extern volatile unsigned char ADCON1 @ 0x09F;

asm("ADCON1 equ 09Fh");


typedef union {
struct {
unsigned :4;
unsigned ADCS :3;
};
struct {
unsigned :4;
unsigned ADCS0 :1;
unsigned ADCS1 :1;
unsigned ADCS2 :1;
};
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits @ 0x09F;

# 2587
extern volatile unsigned char EEDAT @ 0x10C;

asm("EEDAT equ 010Ch");


extern volatile unsigned char EEDATA @ 0x10C;

asm("EEDATA equ 010Ch");



extern volatile unsigned char EEADR @ 0x10D;

asm("EEADR equ 010Dh");



extern volatile unsigned char EEDATH @ 0x10E;

asm("EEDATH equ 010Eh");



extern volatile unsigned char EEADRH @ 0x10F;

asm("EEADRH equ 010Fh");



extern volatile unsigned char WPUB @ 0x115;

asm("WPUB equ 0115h");


typedef union {
struct {
unsigned :4;
unsigned WPUB :4;
};
struct {
unsigned :4;
unsigned WPUB4 :1;
unsigned WPUB5 :1;
unsigned WPUB6 :1;
unsigned WPUB7 :1;
};
} WPUBbits_t;
extern volatile WPUBbits_t WPUBbits @ 0x115;

# 2663
extern volatile unsigned char IOCB @ 0x116;

asm("IOCB equ 0116h");


typedef union {
struct {
unsigned :4;
unsigned IOCB4 :1;
unsigned IOCB5 :1;
unsigned IOCB6 :1;
unsigned IOCB7 :1;
};
} IOCBbits_t;
extern volatile IOCBbits_t IOCBbits @ 0x116;

# 2701
extern volatile unsigned char VRCON @ 0x118;

asm("VRCON equ 0118h");


typedef union {
struct {
unsigned VR :4;
unsigned VP6EN :1;
unsigned VRR :1;
unsigned C2VREN :1;
unsigned C1VREN :1;
};
struct {
unsigned VR0 :1;
unsigned VR1 :1;
unsigned VR2 :1;
unsigned VR3 :1;
};
} VRCONbits_t;
extern volatile VRCONbits_t VRCONbits @ 0x118;

# 2770
extern volatile unsigned char CM1CON0 @ 0x119;

asm("CM1CON0 equ 0119h");


typedef union {
struct {
unsigned C1CH :2;
unsigned C1R :1;
unsigned :1;
unsigned C1POL :1;
unsigned C1OE :1;
unsigned C1OUT :1;
unsigned C1ON :1;
};
struct {
unsigned C1CH0 :1;
unsigned C1CH1 :1;
};
} CM1CON0bits_t;
extern volatile CM1CON0bits_t CM1CON0bits @ 0x119;

# 2834
extern volatile unsigned char CM2CON0 @ 0x11A;

asm("CM2CON0 equ 011Ah");


typedef union {
struct {
unsigned C2CH :2;
unsigned C2R :1;
unsigned :1;
unsigned C2POL :1;
unsigned C2OE :1;
unsigned C2OUT :1;
unsigned C2ON :1;
};
struct {
unsigned C2CH0 :1;
unsigned C2CH1 :1;
};
} CM2CON0bits_t;
extern volatile CM2CON0bits_t CM2CON0bits @ 0x11A;

# 2898
extern volatile unsigned char CM2CON1 @ 0x11B;

asm("CM2CON1 equ 011Bh");


typedef union {
struct {
unsigned C2SYNC :1;
unsigned T1GSS :1;
unsigned :4;
unsigned MC2OUT :1;
unsigned MC1OUT :1;
};
} CM2CON1bits_t;
extern volatile CM2CON1bits_t CM2CON1bits @ 0x11B;

# 2936
extern volatile unsigned char ANSEL @ 0x11E;

asm("ANSEL equ 011Eh");


typedef union {
struct {
unsigned ANS0 :1;
unsigned ANS1 :1;
unsigned ANS2 :1;
unsigned ANS3 :1;
unsigned ANS4 :1;
unsigned ANS5 :1;
unsigned ANS6 :1;
unsigned ANS7 :1;
};
} ANSELbits_t;
extern volatile ANSELbits_t ANSELbits @ 0x11E;

# 2997
extern volatile unsigned char ANSELH @ 0x11F;

asm("ANSELH equ 011Fh");


typedef union {
struct {
unsigned ANS8 :1;
unsigned ANS9 :1;
unsigned ANS10 :1;
unsigned ANS11 :1;
};
} ANSELHbits_t;
extern volatile ANSELHbits_t ANSELHbits @ 0x11F;

# 3034
extern volatile unsigned char EECON1 @ 0x18C;

asm("EECON1 equ 018Ch");


typedef union {
struct {
unsigned RD :1;
unsigned WR :1;
unsigned WREN :1;
unsigned WRERR :1;
unsigned :3;
unsigned EEPGD :1;
};
} EECON1bits_t;
extern volatile EECON1bits_t EECON1bits @ 0x18C;

# 3078
extern volatile unsigned char EECON2 @ 0x18D;

asm("EECON2 equ 018Dh");



extern volatile unsigned char PSTRCON @ 0x19D;

asm("PSTRCON equ 019Dh");


typedef union {
struct {
unsigned STRA :1;
unsigned STRB :1;
unsigned STRC :1;
unsigned STRD :1;
unsigned STRSYNC :1;
};
} PSTRCONbits_t;
extern volatile PSTRCONbits_t PSTRCONbits @ 0x19D;

# 3127
extern volatile unsigned char SRCON @ 0x19E;

asm("SRCON equ 019Eh");


typedef union {
struct {
unsigned :2;
unsigned PULSR :1;
unsigned PULSS :1;
unsigned C2REN :1;
unsigned C1SEN :1;
unsigned SR :2;
};
struct {
unsigned :6;
unsigned SR0 :1;
unsigned SR1 :1;
};
} SRCONbits_t;
extern volatile SRCONbits_t SRCONbits @ 0x19E;

# 3192
extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;

extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;

extern volatile __bit ADCS0 @ (((unsigned) &ADCON1)*8) + 4;

extern volatile __bit ADCS1 @ (((unsigned) &ADCON1)*8) + 5;

extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;

extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;

extern volatile __bit ADFM @ (((unsigned) &ADCON0)*8) + 7;

extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;

extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;

extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;

extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;

extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;

extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;

extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;

extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;

extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;

extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;

extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;

extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;

extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;

extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;

extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;

extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;

extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;

extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;

extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;

extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;

extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;

extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;

extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;

extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;

extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;

extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;

extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;

extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;

extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;

extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;

extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;

extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;

extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;

extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;

extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;

extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;

extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;

extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;

extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;

extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;

extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;

extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;

extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;

extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;

extern volatile __bit C1VREN @ (((unsigned) &VRCON)*8) + 7;

extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;

extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;

extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;

extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;

extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;

extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;

extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;

extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;

extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;

extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;

extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;

extern volatile __bit C2VREN @ (((unsigned) &VRCON)*8) + 6;

extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;

extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;

extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;

extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;

extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;

extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;

extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;

extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;

extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;

extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;

extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;

extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;

extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;

extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;

extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;

extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;

extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;

extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;

extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;

extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;

extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;

extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;

extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;

extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;

extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;

extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;

extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;

extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;

extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;

extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;

extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;

extern volatile __bit IOC0 @ (((unsigned) &IOCA)*8) + 0;

extern volatile __bit IOC1 @ (((unsigned) &IOCA)*8) + 1;

extern volatile __bit IOC2 @ (((unsigned) &IOCA)*8) + 2;

extern volatile __bit IOC3 @ (((unsigned) &IOCA)*8) + 3;

extern volatile __bit IOC4 @ (((unsigned) &IOCA)*8) + 4;

extern volatile __bit IOC5 @ (((unsigned) &IOCA)*8) + 5;

extern volatile __bit IOCA0 @ (((unsigned) &IOCA)*8) + 0;

extern volatile __bit IOCA1 @ (((unsigned) &IOCA)*8) + 1;

extern volatile __bit IOCA2 @ (((unsigned) &IOCA)*8) + 2;

extern volatile __bit IOCA3 @ (((unsigned) &IOCA)*8) + 3;

extern volatile __bit IOCA4 @ (((unsigned) &IOCA)*8) + 4;

extern volatile __bit IOCA5 @ (((unsigned) &IOCA)*8) + 5;

extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;

extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;

extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;

extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;

extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;

extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;

extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;

extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;

extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;

extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;

extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;

extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;

extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;

extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;

extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;

extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;

extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;

extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;

extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;

extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;

extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;

extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;

extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;

extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;

extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;

extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;

extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;

extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;

extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;

extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;

extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;

extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;

extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;

extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;

extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;

extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;

extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;

extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;

extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;

extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;

extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;

extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;

extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;

extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;

extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;

extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;

extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;

extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit RABIE @ (((unsigned) &INTCON)*8) + 3;

extern volatile __bit RABIF @ (((unsigned) &INTCON)*8) + 0;

extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;

extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;

extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;

extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;

extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;

extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;

extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;

extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;

extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;

extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;

extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;

extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;

extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;

extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;

extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;

extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;

extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;

extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;

extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;

extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;

extern volatile __bit SENB @ (((unsigned) &TXSTA)*8) + 3;

extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;

extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;

extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;

extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;

extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;

extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;

extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;

extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;

extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;

extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;

extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;

extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;

extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;

extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;

extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;

extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;

extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;

extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;

extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;

extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;

extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;

extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;

extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;

extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;

extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;

extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;

extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;

extern volatile __bit T1IE @ (((unsigned) &PIE1)*8) + 0;

extern volatile __bit T1IF @ (((unsigned) &PIR1)*8) + 0;

extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;

extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;

extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;

extern volatile __bit T2IE @ (((unsigned) &PIE1)*8) + 1;

extern volatile __bit T2IF @ (((unsigned) &PIR1)*8) + 1;

extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;

extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;

extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;

extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;

extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;

extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;

extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;

extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;

extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;

extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;

extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;

extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;

extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;

extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;

extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;

extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;

extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;

extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;

extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;

extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;

extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;

extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;

extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;

extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;

extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;

extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;

extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;

extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;

extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;

extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;

extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;

extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;

extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;

extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;

extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;

extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;

extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;

extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;

extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;

extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;

extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;

extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;

extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;

extern volatile __bit VCFG @ (((unsigned) &ADCON0)*8) + 6;

extern volatile __bit VP6EN @ (((unsigned) &VRCON)*8) + 4;

extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;

extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;

extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;

extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;

extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;

extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;

extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;

extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;

extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;

extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;

extern volatile __bit WPU0 @ (((unsigned) &WPUA)*8) + 0;

extern volatile __bit WPU1 @ (((unsigned) &WPUA)*8) + 1;

extern volatile __bit WPU2 @ (((unsigned) &WPUA)*8) + 2;

extern volatile __bit WPU4 @ (((unsigned) &WPUA)*8) + 4;

extern volatile __bit WPU5 @ (((unsigned) &WPUA)*8) + 5;

extern volatile __bit WPUA0 @ (((unsigned) &WPUA)*8) + 0;

extern volatile __bit WPUA1 @ (((unsigned) &WPUA)*8) + 1;

extern volatile __bit WPUA2 @ (((unsigned) &WPUA)*8) + 2;

extern volatile __bit WPUA4 @ (((unsigned) &WPUA)*8) + 4;

extern volatile __bit WPUA5 @ (((unsigned) &WPUA)*8) + 5;

extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;

extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;

extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;

extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;

extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;

extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;

extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;

extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;

extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;

extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;

extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;

extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;

extern volatile __bit nRABPU @ (((unsigned) &OPTION_REG)*8) + 7;

extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;

extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;


# 27 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic.h"
#pragma intrinsic(__nop)
extern void __nop(void);

# 80
extern unsigned int flash_read(unsigned short addr);

# 41 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\eeprom_routines.h"
extern void eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);
extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);


# 153 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic.h"
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);


# 27 "newmain.c"
#pragma config FOSC = INTRCIO
#pragma config WDTE = 0
#pragma config PWRTE = ON
#pragma config MCLRE = ON
#pragma config CP = 0
#pragma config CPD = 0
#pragma config BOREN = ON
#pragma config IESO = ON
#pragma config FCMEN = 0

# 49
asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF");
asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF");
asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0xD6" "," "0xD6" "," "0xD6" "," "0xD6" "," "0xD6" "," "0x94" "," "0x94" "," "0x94");
asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0x94" "," "0x94" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF");



unsigned char addrh, addrl;

unsigned char day, sec, min, hour;

unsigned char i2cCmd, i2cEEPROMAddr, i2cSSPIFTmr, i2cHoldTmr;



unsigned char TEngTemp, UbattMin;


void I2CSlaveSR (void);

# 103
void interrupt InterruptService (void)
{
if (INTCONbits.RABIF)
{
char n = PORTBbits.RB7;
n = PORTBbits.RB5;
INTCONbits.RABIF = 0;
ToCheck = 0xFF;
}

if (PIR1bits.TMR1IF)
{
PIR1bits.TMR1IF = 0;

sec += 16;
IntSvcSync |= 0b00000001;
}
if (PIR1bits.SSPIF)
{
I2CSlaveSR ();

}
}


void WriteLog (unsigned char Event, unsigned char ResetReason)

# 139
{
char d[6];

if (Event == 0xFF)
return;

d[3] = Ubatt;
d[4] = Teng;
d[5] = 0b01010101;

if (Event == 0)
{
Event = 0x13;
if (BinSt == 0 && EngSt == 0)
Event = 0x12;
if ((BinSt&0x80) || (EngSt&0xC0))
Event = 0x11;
}

switch (Event)
{
case 1:
d[0] = 0b00000111;
d[1] = ResetReason;
d[2] = ResetReason;
d[3] = 0x0;
d[4] = 0x55;
break;
case 0x12:



d[0] = 0b00101000 | ((TEB >= 0x80) << 4) | (day >> 5);
d[1] = (day << 3) | (hour >> 2);
d[2] = (hour << 6) | ((EngSt & 0b00000111) << 3) | (BinSt & 0b00000111);
break;
case 0x11:
d[0] = 0b00001000 | ((TEB >= 0x80) << 4) | (day >> 5);
d[1] = (day << 3) | (hour >> 2);
d[2] = (hour << 6) | ((EngSt & 0b00000111) << 3) | (BinSt & 0b00000111);
break;
case 2:
case 3:



d[0] = 0b00000010 | (hour >> 4);
d[1] = (hour << 4) | (min >> 2);
d[2] = (min << 6) | ((EngSt & 0b00000111) << 3) | (BinSt & 0b00000111);
break;
case 0x13:



d[0] = 0b10000000 | (hour << 2) | (min >> 4);
d[1] = (min << 4) | ((EngSt & 0b00000111) << 1) | ((BinSt & 0b00000111) >> 2);

d[2] = ((BinSt & 0b00000111) << 6) | ((PinState & 0b01101110) >> 1) | (PORTCbits.RC3 << 4);
break;
case 6:



d[0] = 0b00000000;
d[1] = (hour << 3) | (min >> 3);
d[2] = (min << 5) | ((EngSt & 0b00000111) << 2) | ((BinSt & 0b00000111) >> 1);

d[3] = ((BinSt & 0b00000111) << 7) | (PinState & 0b01101110) | (PORTCbits.RC3 << 4);
break;
case 4:
case 5:


d[0] = 0b00000001;
d[1] = (hour << 3) | (min >> 3);
d[2] = (min << 5) | ((Event == 4 ? 0 : 1) << 4);
break;

}
char i = 3;
while (TXNbytes (addrh, addrl, 6, d) && i > 0)
{
_delay((unsigned long)((10)*(4000000/4000.0)));
i--;
}
addrl += 5;
if (STATUSbits.C)
addrh += 1;
}


void SearchStop (void)
{
unsigned char d = 0xFF;
unsigned char addrhs = 0, addrls = 0;
addrh = 0;
addrl = 0;
while (d != 0b01010101 && addrh != 0xFF)
{
addrl += 5;
if (STATUSbits.C)
addrh += 1;

RXbyte (addrh, addrl, &d);

if ((d & 0b11001000) == 0b00001000)
{
addrhs = addrh;
addrls = addrl;
}
}

if (d != 0b01010101)
{
addrh = 0;
addrl = 0;
}
else
{
if (addrhs != 0 || addrls != 0)
{
RXbyte (addrhs, addrls, &d);

if (0b00010000 & d)
TEB = 0x84;
else
TEB = 0x7B;

if (0b00100000 & d)
{
BinSt = 0;
EngSt = 0;
}
else
{
BinSt = 0x80;
EngSt = 0xC0;
}

day = (d & 0b00000111) << 5;

addrls += 1;
if (STATUSbits.C)
addrhs += 1;
RXbyte (addrhs, addrls, &d);

day |= ((d & 0b11111000) >> 3);
hour = (d & 0b00000111) << 2;

addrls += 1;
if (STATUSbits.C)
addrhs += 1;
RXbyte (addrhs, addrls, &d);

hour |= (d & 0b11000000) >> 6;

# 299
hour += 2;
if (hour == 24 || hour == 25)
{
hour -= 24;
day++;
}
min = 1;




}
}
}


unsigned char EngBinState (void)
{
unsigned char WrLogEvent = 0xFF;

if (((PinState & (1 << 6)) && (PinState & (1 << 3))) && ((BinSt&0x80) || (EngSt&0xC0)))
{
BinSt = 0;
EngSt = 0;
}

if ((BinSt&0x80) || (EngSt&0xC0))
return (WrLogEvent);

# 332
if (PinState & (1 << 6))
{
if (EngSt != 4 && EngSt != 5)
{
ASRONTmr = 0xFF;

if (!(IntSvcSync & 0b00010000))
IntSvcSync &= ~0b01000000;


if (PinState & (1 << 3))
{
if (EngSt != 7 && EngSt != 3 && EngStartTmr == 0xFF)
{
NewASRTmr = 0x10;


EngSt = 7;

WrLogEvent = 0;
}
EngSt = 7;

IntSvcSync &= ~0b00010000;
IntSvcSync &= ~0b01000000;
}
else
{
if (EngSt == 2)
{
NewASRTmr = 0x10;
EngSt = 3;
WrLogEvent = 0;

}
EngSt = 3;
}
}
}
else
{
if (EngSt != 2 && EngSt != 1 && EngSt != 0)
{
EngStartTmr = 0x10;
EngSt = 0;
}
}

# 385
if (PinState & (1 << 2))
{
if (BinSt != 0x14 && BinSt != 0x15 && BinSt != 0x13)
{
NewBinTmr = 0xFF;
ASRONTmr = 0xFF;
BinSt = 0x13;
WrLogEvent = 0;

}
}
else
{
if (BinSt != 0x12 && BinSt != 0x11 && BinSt != 0)
{
if (BinSt == 0x13)
ASRONTmr = 16;
NewBinTmr = 0xFF;
BinSt = 0;
PORTCbits.RC3 = 0;
WrLogEvent = 0;

}
}

# 414
if (!(PinState & (1 << 1)))
{


if (EngSt != 7)
{
if (TEB >= 0x7F)
{
StateTest = 1;
}
}

# 438
}
else
{
if (StateTest == 1)
{
StateTest = 0;
_delay((unsigned long)((2000)*(4000000/4000.0)));
PORTCbits.RC2 = 1;
_delay((unsigned long)((2000)*(4000000/4000.0)));
PORTCbits.RC2 = 0;
}
if (BinSt == 0x15)
{
PORTCbits.RC3 = 0;
BinSt = 0x14;
NewBinTmr = 0x4;
}
if (EngSt == 5)
{
EngSt = 4;
NewASRTmr = 0x4;
PORTCbits.RC1 = 1;
_delay((unsigned long)((500)*(4000000/4000.0)));
PORTCbits.RC1 = 0;
}
}

# 469
if (!(PinState & (1 << 5)))
{
if (BinSt == 0 && EngSt == 0 &&
ASRONTmr == 0xFF && NewBinTmr == 0xFF && NewASRTmr == 0xFF)
{
IntSvcSync &= ~0b00010000;

if (TEB <= 0x7F)
{
BinSt = 0x11;
NewBinTmr = 0x4;
}
else
{
EngSt = 1;
NewASRTmr = 0x4;
}

}
}
else
{
if (BinSt == 0x11)
{
PORTCbits.RC3 = 1;
NewBinTmr = 0x4;
BinSt = 0x12;
WrLogEvent = 0;

}
if (EngSt == 1)
{
EngSt = 2;
NewASRTmr = 0x4;
PORTCbits.RC1 = 1;
_delay((unsigned long)((500)*(4000000/4000.0)));
PORTCbits.RC1 = 0;
WrLogEvent = 0;

}
}

# 515
if (ASRONTmr == 0)
{
ASRONTmr = 0xFF;
if (EngSt == 0 && BinSt == 0)
{
EngSt = 2;
PORTCbits.RC1 = 1;
_delay((unsigned long)((500)*(4000000/4000.0)));
PORTCbits.RC1 = 0;
NewASRTmr = 0x4;
WrLogEvent = 0;

}
}

# 534
if (UbattTmr == 0xF8 && BinSt == 0 && EngSt == 0 &&
ASRONTmr == 0xFF && NewBinTmr == 0xFF && NewASRTmr == 0xFF)
{
IntSvcSync |= 0b00010000;
if (TEB <= 0x7F)
{
PORTCbits.RC3 = 1;
NewBinTmr = 0x4;
BinSt = 0x12;
WrLogEvent = 6;

}
else
{
EngSt = 2;
NewASRTmr = 0x4;
PORTCbits.RC1 = 1;
_delay((unsigned long)((500)*(4000000/4000.0)));
PORTCbits.RC1 = 0;
WrLogEvent = 6;

}
}
return (WrLogEvent);
}

void I2CReset (void)
{
SSPCONbits.SSPEN = 0;
_delay((unsigned long)((10)*(4000000/4000.0)));
i2c_init(0b01000010);
}


void I2CSlaveSR (void)
{
char x;

if (PIR1bits.SSPIF == 0)
return;

SSPCONbits.SSPOV = 0;

if (SSPSTATbits.R_W)
{

# 585
if (SSPCONbits.CKP == 0)
{
switch(i2cCmd)
{
case 0x32:
OutRet (i2cEEPROMAddr, &x, 1);
SSPBUF = x;
i2cEEPROMAddr = 0x0;
break;
case 0x1:
SSPBUF = day;
break;
case 0x2:
SSPBUF = hour;
break;
case 0x3:
SSPBUF = min;
break;
case 0x4:
SSPBUF = sec;
break;
case 0x5:
SSPBUF = addrh;
break;
case 0x6:
SSPBUF = addrl;
break;
case 0x7:
SSPBUF = Ubatt;
break;
case 0x8:
SSPBUF = Teng;
break;
case 0x9:
SSPBUF = PinState;
break;
case 0x1A:
SSPBUF = BinSt;
break;
case 0x1B:
SSPBUF = EngSt;
break;
case 0x1C:
SSPBUF = IntSvcSync;
break;
case 0x1D:
SSPBUF = NewBinTmr;
break;
case 0x1E:
SSPBUF = NewASRTmr;
break;
case 0x1F:
SSPBUF = ASRONTmr;
break;
case 0x20:
SSPBUF = EngStartTmr;
break;
case 0x21:
SSPBUF = UbattTmr;
break;
case 0x22:
SSPBUF = TEB;
break;
case 0x23:
SSPBUF = PORTBbits.RB7;
break;
case 0x24:
SSPBUF = PORTCbits.RC5;
break;
case 0x25:
SSPBUF = PORTCbits.RC4;
break;
case 0x26:
SSPBUF = PORTBbits.RB5;
break;
case 0x29:
SSPBUF = 4;
break;
case 0x2A:
SSPBUF = 9;
break;
case 0x2B:
SSPBUF = PORTAbits.RA2;
break;
case 0x2C:
SSPBUF = PORTCbits.RC6;
break;
case 0x27:
case 0x28:
case 0x2D:
break;
case 0x2E:
SSPBUF = UbattMin;
break;
case 0x2F:
SSPBUF = TEngTemp;
break;
case 0x31:
default:
SSPBUF = 0x0;
break;
}
SSPCONbits.CKP = 1;
i2cCmd = 0x0;

}

}
else
{
if (SSPSTATbits.BF)
{
if (!SSPSTATbits.D_nA)
{
x = SSPBUF;
i2cCmd = 0x0;
}
else
{
switch(i2cCmd)
{
case 0x1:
day = SSPBUF;
break;
case 0x2:
hour = SSPBUF;
break;
case 0x3:
min = SSPBUF;
break;
case 0x4:
sec = SSPBUF;
break;
case 0x5:
addrh = SSPBUF;
break;
case 0x6:
addrl = SSPBUF;
break;
case 0x7:
Ubatt = SSPBUF;
TEngUbattRW (0x10 + 5, &Ubatt, 0);
break;
case 0x8:
Teng = SSPBUF;
TEngUbattRW (0x10, &Teng, 0);
break;
case 0x9:
case 0x1A:
BinSt = SSPBUF;
break;
case 0x1B:
EngSt = SSPBUF;
break;
case 0x1C:
x = SSPBUF;
break;
case 0x1D:
NewBinTmr = SSPBUF;
break;
case 0x1E:
NewASRTmr = SSPBUF;
break;
case 0x1F:
ASRONTmr = SSPBUF;
break;
case 0x20:
EngStartTmr = SSPBUF;
break;
case 0x21:
UbattTmr = SSPBUF;
break;
case 0x22:
TEB = SSPBUF;
break;
case 0x23:
case 0x24:
case 0x25:
case 0x26:
case 0x29:
case 0x2A:
case 0x2B:
case 0x2C:
x = SSPBUF;
break;
case 0x27:
x = SSPBUF;
PORTCbits.RC1 = x;
break;
case 0x28:
x = SSPBUF;
PORTCbits.RC2 = x;
break;
case 0x2D:
x = SSPBUF;
PORTCbits.RC3 = x;
break;
case 0x2E:
x = SSPBUF;
UbattMin = x;
TEngUbattRW (0x10 + 5, &x, 0);
break;
case 0x2F:
x = SSPBUF;
TEngTemp = x;
TEngUbattRW (0x10, &x, 0);
break;
case 0x31:
x = SSPBUF;
break;
case 0x32:
if (i2cEEPROMAddr == 0x0)
{
i2cEEPROMAddr = SSPBUF;
}
else
{
x = SSPBUF;
OutRet (i2cEEPROMAddr, &x, 0);
i2cEEPROMAddr = 0x0;
}
break;
case 0x33:
i2cHoldTmr = SSPBUF;
break;
default:
x = SSPBUF;
break;
}

if (i2cCmd == 0x0)
{
i2cCmd = SSPBUF;
}
else
{
if (i2cEEPROMAddr == 0)
{
i2cCmd = 0x0;

}
}
}
}
}

PIR1bits.SSPIF = 0;

}


unsigned char TmrRoutines (unsigned char *pBINtmr)
{
unsigned char WrLogEvent = 0xFF;

if (!(IntSvcSync & 0b00000001))
return (WrLogEvent);

if (sec > 59)
{
min++;
sec -= 60;
if (min == 60)
{
hour++;
min = 0;

if (hour == 24)
{
day++;
hour = 0;
}
if (hour & 0b00000001)
WrLogEvent = 0;
}


if (BinSt == 0x13)
{
if (*pBINtmr == 6)
{
*pBINtmr = 0;
WrLogEvent = 0;
}
else
*pBINtmr++;
}
else
*pBINtmr = 0;

}




if (i2cHoldTmr != 0xFF)
{
i2cHoldTmr--;
}
else
{

I2CReset();



if (NewBinTmr != 0xFF)
{
NewBinTmr--;

if (NewBinTmr == 0)
{
switch(BinSt)
{
case 0x11:
BinSt = 0x81;
break;
case 0x12:
BinSt = 0x84;
break;
case 0x13:
BinSt = 0x83;
break;
case 0x14:
BinSt = 0x82;
break;
case 0x15:
BinSt = 0x85;
break;
case 0:
BinSt = 0x87;
break;
default:
BinSt = 0x80;
break;
}
NewBinTmr = 0xFF;
}
}
if (NewASRTmr != 0xFF)
{
NewASRTmr--;

if (EngSt == 0)
{
EngSt = 0xC6;
NewASRTmr = 0xFF;
}

if (NewASRTmr == 0)
{
if (EngSt != 7 && EngSt != 3)
{
switch(EngSt)
{
case 1:
EngSt = 0xC1;
break;
case 2:
EngSt = 0xC2;
break;
case 3:
EngSt = 0xC3;
break;
case 4:
EngSt = 0xC4;
break;
case 5:
EngSt = 0xC5;
break;
case 7:
EngSt = 0xC7;
break;
case 0:
EngSt = 0xC6;
break;
default:
EngSt = 0xC0;
break;

}
}
NewASRTmr = 0xFF;
}
}

if (ASRONTmr != 0xFF)
ASRONTmr--;

if (EngStartTmr != 0xFF)
EngStartTmr--;

if (i2cSSPIFTmr != 0xFF)
i2cSSPIFTmr--;

if (BinSt == 0 && EngSt == 0 &&
ASRONTmr == 0xFF && NewBinTmr == 0xFF && NewASRTmr == 0xFF)
{
if (Ubatt > 0x80 && Ubatt <= UbattMin)
{
if (UbattTmr > 0xF8)
{
UbattTmr--;
}
}
else
{
if (UbattTmr != 0xFF)
{
UbattTmr++;
}
}
}
else
{
if (UbattTmr != 0xFF)
{
UbattTmr = 0xFF;
}
}


if (Teng < TEngTemp)
{
if (TEB < 0x84)
{
TEB++;
if (TEB == 0x84 && TEB != TEBPrev)
{
WrLogEvent = 5;
TEBPrev = 0x84;
}
}
}
else
{
if (TEB > 0x7B)
{
if (TEB == 0x84 && !(IntSvcSync & 0b01000000) &&
EngSt == 0 && BinSt == 0)
{

PORTCbits.RC2 = 1;
_delay((unsigned long)((1000)*(4000000/4000.0)));
PORTCbits.RC2 = 0;
IntSvcSync |= 0b01000000;
}

TEB--;
if (TEB == 0x7B && TEB != TEBPrev)
{
WrLogEvent = 4;
TEBPrev = 0x7B;
}
}
}
}
return (WrLogEvent);




}

char DetectReset (void)
{
if (!PCONbits.nPOR && STATUSbits.nTO && STATUSbits.nPD)
return 1;
if (!PCONbits.nBOR && STATUSbits.nTO && STATUSbits.nPD)
return 2;
if (!STATUSbits.nTO && !STATUSbits.nPD)
return 4;
if (STATUSbits.nTO && !STATUSbits.nPD)
return 5;
if (!STATUSbits.nTO)
return 3;
return 6;

}

void main(void) {


sec = 0;
min = 0;
hour = 0;
day = 0;
addrh = 0;
addrl = 0x0;
EngSt = 0;
BinSt = 0;

ASRONTmr = 0xFF;
NewBinTmr = 0xFF;
NewASRTmr = 0xFF;
EngStartTmr = 0xFF;

UbattTmr = 0xFF;
IntSvcSync = 0;
StateTest = 0;

CheckedNow = 9;
PinState = 0;
NewState = 0;

T1CON = 0;
INTCON = 0;

# 1098
PORTA = 0x0;
PORTB = 0x0;
PORTC = 0x0;



TRISA = 0b11111111;
WPUA = 0b00000000;

# 1112
TRISB = 0b11111111;
WPUB = 0b00000000;
IOCBbits.IOCB7 = 1;
IOCBbits.IOCB5 = 1;

# 1125
TRISC = 0b11110001;

# 1132
ANSEL = 0b00010000;
ANSELH = 0b00000010;


ADCON1 = 0b00110000;
ADCON0 = 0b10010001;

PORTA = 0x0;
PORTB = 0x0;
PORTC = 0x0;


asm ("CLRWDT");
TMR0 = 0;
OPTION_REGbits.PSA = 1;
asm ("CLRWDT");
OPTION_REGbits.PS = 0b000;
OPTION_REGbits.PS = 0b101;
WDTCON = 0b00010111;


_delay((unsigned long)((1000)*(4000000/4000.0)));
if (TEngUbattRW (0x10 + 5, &UbattMin, 1))
{
UbattMin = 0x93;


}
if (TEngUbattRW (0x10, &TEngTemp, 1))
{
TEngTemp = 0xd6;


}

# 1171
i2c_init (0b01000010);


TEB = 0x84;

SearchStop();

TEBPrev = TEB;




char ResetReason = DetectReset();
WriteLog (1, ResetReason);

# 1190
TMR1H = 0x0;
TMR1L = 0x0;


T1CON = 0b00111110;

# 1200
_delay((unsigned long)((1000)*(4000000/4000.0)));
T1CONbits.TMR1ON = 1;
_delay((unsigned long)((1000)*(4000000/4000.0)));

# 1208
unsigned char BINtmr = 0;

i2cCmd = 0x0;
i2cEEPROMAddr = 0x0;

i2cHoldTmr = 0xFF;

# 1219
PIR1 = 0x0;
PIR2 = 0x0;
PIE1 = 0b00001001;
PIE1bits.SSPIE = 1;
INTCON = 0b11001000;

while (1)
{
asm ("CLRWDT");
ToCheck = 0b11111111;

while (ToCheck)
{
StartCheck (0);
CheckRes();
}

# 1264
if (i2cHoldTmr == 0xFF)
{
unsigned char resbin = EngBinState ();
WriteLog (resbin, 0);
}

# 1287
if (IntSvcSync & 0b00000001)
{
unsigned char restmr = TmrRoutines (&BINtmr);
WriteLog (restmr, 0);
IntSvcSync &= ~0b00000001;
}

# 1301
if ((BinSt&0x80) || (EngSt&0xC0))
{
PORTCbits.RC2 = 0;
PORTCbits.RC1 = 0;
PORTCbits.RC3 = 0;
if (!(IntSvcSync & 0b00001000))
{
WriteLog (2, 0);
IntSvcSync |= 0b00001000;
}
}
else
{
if ((IntSvcSync & 0b00001000))
{
WriteLog (3, 0);
IntSvcSync &= ~0b00001000;
}
}

if (!ToCheck )
{
asm ("CLRWDT");

asm ("sleep");

# 1332
}
}
}

